<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>RawSec</title>
  <subtitle>Security is everywhere</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://rawsec.ml/"/>
  <updated>2016-10-13T17:48:40.228Z</updated>
  <id>http://rawsec.ml/</id>
  
  <author>
    <name>Alexandre ZANNI</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Setup a proxy under Linux</title>
    <link href="http://rawsec.ml/en/proxy-linux/"/>
    <id>http://rawsec.ml/en/proxy-linux/</id>
    <published>2016-10-12T22:00:00.000Z</published>
    <updated>2016-10-13T17:48:40.228Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Environment-variables"><a href="#Environment-variables" class="headerlink" title="Environment variables"></a>Environment variables</h2><p>Lot of programs (such as wget, curl, pacman, …) use environment variables to determine the proxy of a given protocol.</p>
<p>Environment variables can be added per user in their <code>.bashrc</code> or <code>.zshrc</code> shell profile file with something like <code>export KEY=value</code>. The advantage is that variables can be used in order to avoid repeating the same proxy several times.</p>
<p>Or <code>/etc/environment</code> file stores the system-wide variables initialized upon user login. Or you can use <code>/etc/syconfig/proxy</code> under openSUSE.</p>
<p>To add proxy settings one time for everyone, you can execute the following script with sudo privilege (because you need to write into a system file: <code>/etc/environment</code>).</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line">file=/etc/environment</div><div class="line"></div><div class="line">http_proxy=http://proxy.example.org:8080/</div><div class="line">HTTP_PROXY=<span class="variable">$http_proxy</span></div><div class="line">https_proxy=<span class="variable">$http_proxy</span></div><div class="line">HTTPS_PROXY=<span class="variable">$https_proxy</span></div><div class="line">ftp_proxy=<span class="variable">$http_proxy</span></div><div class="line">FTP_PROXY=<span class="variable">$ftp_proxy</span></div><div class="line">rsync_proxy=<span class="variable">$http_proxy</span></div><div class="line">RSYNC_PROXY=<span class="variable">$rsync_proxy</span></div><div class="line">no_proxy=<span class="string">"localhost,127.0.0.1,localaddress,.localdomain.com"</span></div><div class="line">NO_PROXY=<span class="variable">$no_proxy</span></div><div class="line"></div><div class="line"><span class="built_in">echo</span> <span class="string">"http_proxy=<span class="variable">$http_proxy</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"HTTP_PROXY=<span class="variable">$HTTP_PROXY</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"https_proxy=<span class="variable">$https_proxy</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"HTTPS_PROXY=<span class="variable">$HTTPS_PROXY</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"ftp_proxy=<span class="variable">$ftp_proxy</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"FTP_PROXY=<span class="variable">$FTP_PROXY</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"rsync_proxy=<span class="variable">$rsync_proxy</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"RSYNC_PROXY=<span class="variable">$RSYNC_PROXY</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"no_proxy=<span class="variable">$no_proxy</span>"</span> &gt;&gt; <span class="variable">$file</span></div><div class="line"><span class="built_in">echo</span> <span class="string">"NO_PROXY=<span class="variable">$NO_PROXY</span>"</span> &gt;&gt; <span class="variable">$file</span></div></pre></td></tr></table></figure>
<h2 id="Proxy-settings-on-GNOME3"><a href="#Proxy-settings-on-GNOME3" class="headerlink" title="Proxy settings on GNOME3"></a>Proxy settings on GNOME3</h2><p>Some other graphical programs (such as Chromium or Rhythmbox) ignore those environment variables and use gnome (GTK3) settings. These settings can be modified through the gnome-control-center front end and also through gsettings (see the example below).</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">gsettings set org.gnome.system.proxy mode &apos;manual&apos;</div><div class="line">gsettings set org.gnome.system.proxy.http host &apos;proxy.example.org&apos;</div><div class="line">gsettings set org.gnome.system.proxy.http port 8080</div><div class="line">gsettings set org.gnome.system.proxy.ftp host &apos;proxy.example.org&apos;</div><div class="line">gsettings set org.gnome.system.proxy.ftp port 8080</div><div class="line">gsettings set org.gnome.system.proxy.https host &apos;proxy.example.org&apos;</div><div class="line">gsettings set org.gnome.system.proxy.https port 8080</div><div class="line">gsettings set org.gnome.system.proxy ignore-hosts &quot;[&apos;localhost&apos;, &apos;127.0.0.0/8&apos;, &apos;10.0.0.0/8&apos;, &apos;192.168.0.0/16&apos;, &apos;172.16.0.0/12&apos; , &apos;*.localdomain.com&apos; ]&quot;</div></pre></td></tr></table></figure>
<h2 id="Package-managers"><a href="#Package-managers" class="headerlink" title="Package managers"></a>Package managers</h2><p>Since you are using awesome tools like <a href="https://en.opensuse.org/Portal:Zypper" target="_blank" rel="external">zypper</a> (openSUSE) or <a href="https://wiki.archlinux.org/index.php/pacman" target="_blank" rel="external">pacman</a> (ArchLinux) you will probably don’t care about the following paragraph.</p>
<p>But users of apt-get or aptitue will need an additional step to use their package manager working with a proxy. They will need to edit <code>/etc/apt/apt.conf.d/proxy</code> and include the following lines:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Acquire::http::proxy &quot;http://proxy.example.org:8080/&quot;;</div><div class="line">Acquire::ftp::proxy &quot;ftp://proxy.example.org:8080/&quot;;</div><div class="line">Acquire::https::proxy &quot;https://proxy.example.org:8080/&quot;;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Environment-variables&quot;&gt;&lt;a href=&quot;#Environment-variables&quot; class=&quot;headerlink&quot; title=&quot;Environment variables&quot;&gt;&lt;/a&gt;Environment variables&lt;/
    
    </summary>
    
      <category term="linux" scheme="http://rawsec.ml/categories/linux/"/>
    
    
      <category term="linux" scheme="http://rawsec.ml/tags/linux/"/>
    
      <category term="system" scheme="http://rawsec.ml/tags/system/"/>
    
      <category term="proxy" scheme="http://rawsec.ml/tags/proxy/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux - Setup an SFTP user for Deluge</title>
    <link href="http://rawsec.ml/en/archlinux-setup-sftp-user-deluge/"/>
    <id>http://rawsec.ml/en/archlinux-setup-sftp-user-deluge/</id>
    <published>2016-09-26T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Requirement"><a href="#Requirement" class="headerlink" title="Requirement"></a>Requirement</h2><p>Deluge is already installed, configured and working.</p>
<p>The deluge user looks like: <code>deluge:x:125:125:Deluge user:/srv/deluge:/bin/false</code>.</p>
<p>A SSH server is already installed, configured and working.</p>
<h2 id="SFTP-setup"><a href="#SFTP-setup" class="headerlink" title="SFTP setup"></a>SFTP setup</h2><ul>
<li>Create the sftp user and add it to the deluge group (this will allow him to access to <code>/srv/deluge/</code>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># useradd sftpuser -d /home/sftpuser -G deluge</div></pre></td></tr></table></figure>
<ul>
<li>Modify the sshd config (<code>/etc/ssh/sshd_config</code>) and add this lines:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Match User sftpuser</div><div class="line">  ChrootDirectory %h</div><div class="line">  ForceCommand internal-sftp</div><div class="line">  AllowTcpForwarding no</div><div class="line">  PermitTunnel no</div><div class="line">  X11Forwarding no</div></pre></td></tr></table></figure>
<ul>
<li>Restart the sshd server:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># systemctl restart sshd.service</div></pre></td></tr></table></figure>
<ul>
<li>Change chroot directory rights, this is required or sftp won’t let you connect. The home directory must be owned as root and not writable by another user or group. This includes the path leading to the directory.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># chown root:root /home/sftpuser</div></pre></td></tr></table></figure>
<ul>
<li>You won’t we to connect in sftp if you user have <code>/bin/false</code> shell as it’s not defined in the <code>/etc/shells</code>. To disable normal ssh login, add <code>/bin/false</code> in <code>/etc/shells</code> and change sftpuser shell:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># usermod -s /bin/false sftpuser</div></pre></td></tr></table></figure>
<ul>
<li>Test ssh access: (access should be refuse if <code>/bin/false</code> is used)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ssh sftpuser@localhost -p $SSH_PORT$</div></pre></td></tr></table></figure>
<ul>
<li>Test sftp access: (sftp user should be placed in the chroot environment)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># sftp sftpuser@localhost -P $SSH_PORT$</div></pre></td></tr></table></figure>
<ul>
<li>Create the torrent folder to let sftp user access to deluge download folder:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkdir /home/sftpuser/torrent</div></pre></td></tr></table></figure>
<ul>
<li>Give the torrent folder the appropriate rights:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># chown sftpuser:sftpuser /home/sftpuser/torrent</div></pre></td></tr></table></figure>
<p>As sftpuser will be chrooted in his home directory (<code>/home/sftpuser/</code>) he won’t be able to access <code>/srv/deluge/Downloads</code> even if he has rights (he is in deluge group) and a symbolic link like <code>ln -s /srv/deluge/Downloads /home/sftpuser/deluge</code> won’t work because it is outside the chroot environment. For sftpuser accessing via sftp to the chroot environment, <code>/home/sftpuser/</code> will be the root directory <code>/</code> so the symbolic link to <code>/srv/deluge/Downloads</code> will in fact be wrong as <code>/home/sftpuser/srv/deluge/Downloads</code> doesn’t exist.</p>
<p>We can’t directly chroot sftpuser in <code>/srv/deluge/Downloads</code> because that will require to change the <code>/srv/deluge/Downloads/</code> folder ownership to <code>root:root</code> and so deluge user won’t be able to access it anymore.</p>
<p>We must chroot sftp user because letting him access to the whole system would be a security issue.</p>
<p>So we will give sftp user two home directory: one SFTP home that is locked down by root (<code>/home/sftpuser/</code>) and one home he can write to (<code>/home/sftpuser/torrent/</code>) so sshd will be satisfied and the system will remain secure. To do that, we will make the deluge folder (the writable home directory) appear as a subdirectory inside the SFTP home directory:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mount --bind /srv/deluge/Downloads /home/sftpuser/torrent</div></pre></td></tr></table></figure>
<p>We can also add this into <code>/etc/fstab</code> to make this configuration permanent even after a reboot:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># echo &apos;/srv/deluge/Downloads /home/sftpuser/torrent none bind&apos; &gt;&gt; /etc/fstab</div></pre></td></tr></table></figure>
<p>SFTP user is now ready to access the deluge download folder via SFTP.</p>
<p>Thanks to the great <a href="https://wiki.archlinux.org/index.php/SFTP_chroot" target="_blank" rel="external">ArchLinux wiki</a>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Requirement&quot;&gt;&lt;a href=&quot;#Requirement&quot; class=&quot;headerlink&quot; title=&quot;Requirement&quot;&gt;&lt;/a&gt;Requirement&lt;/h2&gt;&lt;p&gt;Deluge is already installed, confi
    
    </summary>
    
      <category term="linux" scheme="http://rawsec.ml/categories/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/categories/linux/archlinux/"/>
    
    
      <category term="linux" scheme="http://rawsec.ml/tags/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux - Setup Deluge to use HTTPS</title>
    <link href="http://rawsec.ml/en/archlinux-setup-deluge-https/"/>
    <id>http://rawsec.ml/en/archlinux-setup-deluge-https/</id>
    <published>2016-09-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.535Z</updated>
    
    <content type="html"><![CDATA[<ul>
<li>Stop <code>deluged</code> torrent process:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl stop deluged.service</div></pre></td></tr></table></figure>
<ul>
<li>Go into deluge ssl folder:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">cd /srv/deluge/.config/deluge/ssl</div></pre></td></tr></table></figure>
<ul>
<li>Backup or remove the old certificate and key:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">mv daemon.cert daemon.cert.old &amp;&amp; mv daemon.pkey daemon.pkey.old</div></pre></td></tr></table></figure>
<ul>
<li>Generate the new deluge certificate and key:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req -new -x509 -nodes -out deluge.cert.pem -keyout deluge.key.pem</div></pre></td></tr></table></figure>
<ul>
<li>Answer questions for teh certificate.</li>
<li>Be sure to give the right ownership to certificate and key:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">chown -R deluge:deluge /srv/deluge/.config/deluge/ssl</div></pre></td></tr></table></figure>
<ul>
<li>Launch deluge web UI (User Interface) via http.</li>
<li>Open the <strong>Preferences</strong> menu, select <strong>Interface</strong> tab and check <strong>Use SSL</strong>.</li>
<li>Change <strong>Private Key</strong> into <code>ssl/deluge.key.pem</code> and <strong>Certificate</strong> into <code>ssl/deluge.cert.pem</code>.</li>
<li>Click <strong>Apply</strong> and then <strong>Ok</strong>.</li>
<li>Or instead of using the web UI, modify <code>/srv/deluge/.config/deluge/web.conf</code> (stopping <code>deluge-web</code> before is needed):<ul>
<li>“https”: true,</li>
<li>“pkey”: “ssl/deluge.key.pem”,</li>
<li>“cert”: “ssl/deluge.cert.pem”,</li>
</ul>
</li>
<li>Start <code>deluged</code> torrent process:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl start deluged.service</div></pre></td></tr></table></figure>
<ul>
<li>Restart <code>deluge-web</code> UI:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">systemctl restart deluge-web.service</div></pre></td></tr></table></figure>
<ul>
<li>Launch deluge web UI using https and enjoy.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;ul&gt;
&lt;li&gt;Stop &lt;code&gt;deluged&lt;/code&gt; torrent process:&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class
    
    </summary>
    
      <category term="linux" scheme="http://rawsec.ml/categories/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/categories/linux/archlinux/"/>
    
    
      <category term="linux" scheme="http://rawsec.ml/tags/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>Common upload flaws</title>
    <link href="http://rawsec.ml/en/common-upload-flaws/"/>
    <id>http://rawsec.ml/en/common-upload-flaws/</id>
    <published>2016-09-20T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.485Z</updated>
    
    <content type="html"><![CDATA[<p>If a remote web server let you upload and execute scripts so this is beginning to turn turn bad.</p>
<p>Here are some common upload flaws:</p>
<ul>
<li>extensions blacklist</li>
<li>double extensions</li>
<li>MIME type</li>
<li>Null Byte</li>
</ul>
<h2 id="Extensions-blacklist"><a href="#Extensions-blacklist" class="headerlink" title="Extensions blacklist"></a>Extensions blacklist</h2><p>Blacklists are a bad idea in security.</p>
<p>For example if a server check that there is no <code>.php</code> file extension uploaded. Ok, you may upload a php script saved as <code>.png</code> but even if it is include or publicly available you won’t be able to execute it. So what? Did you know that a php server also interpret <code>.php2</code>, <code>.pwml</code>, <code>.phtml</code>?</p>
<p>Whit a blacklist, an administrator can forget to add them all. So to protect you, a better solution will be to establish a whitelist of authorized extension instead of a blacklist of forbidden ones.</p>
<h2 id="Double-extensions"><a href="#Double-extensions" class="headerlink" title="Double extensions"></a>Double extensions</h2><p>A server is filtering authorized extensions and only <code>.jpg</code>, <code>.gif</code>, <code>.jpeg</code>, <code>.png</code> authorized.</p>
<p>This kind of verification will only check the end extension with a regex matching what is after the dot in the filename.</p>
<p>To bypass this just rename your files from <code>file.php</code> to <code>file.php.png</code>.</p>
<p>In practice this is not so effective because the file have not the desired file extensions.</p>
<p>To protect from this kind of attack don’t trust filename, ignore them and rename the file with a hash. And before accepting it you may want to check what the file really is with the MIME type. Once uploaded on the server check again for example with file signature header and because it can be fake you can also you other methods. For example if you only allow png images use pngcheck to be sure that’s really a png.</p>
<h2 id="MIME-type"><a href="#MIME-type" class="headerlink" title="MIME type"></a>MIME type</h2><p>If an attacker name is php script <code>image.png</code> and temper his request and modify the content type from <code>application/octet-stream</code> to <code>image/png</code>, how can you know that’s not an image?</p>
<p>As said previously, don’t trust client side, check again server side.</p>
<h2 id="Null-byte"><a href="#Null-byte" class="headerlink" title="Null byte"></a>Null byte</h2><p>Double extensions works on the server but you can execute your script with an image extension? Let’s fix that.</p>
<p>Just usethe this old flaw: injection of a null byte, that will stop the php server reading the name of the file after the null byte.</p>
<p>Name your script something like <code>script.php%00.png</code> and upload it. What’s <code>%00</code>? It’s the hexadecimal representation of the null byte encoded for http. How does it work? See my <a href="/en/local-file-inclusion-vulnerability/#Null-Byte-Injection">post about LFI</a>, I talked about Null Byte injection.</p>
<p>To protect yourself still the same recommendation: check server side. You also need to keep your PHP version up to date because that flaw was corrected. And a more smart name parsing will only be better.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;If a remote web server let you upload and execute scripts so this is beginning to turn turn bad.&lt;/p&gt;
&lt;p&gt;Here are some common upload flaws
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="web" scheme="http://rawsec.ml/tags/web/"/>
    
      <category term="php" scheme="http://rawsec.ml/tags/php/"/>
    
  </entry>
  
  <entry>
    <title>CSAW CTF - 10 - Music to my ears - Reconnaissance</title>
    <link href="http://rawsec.ml/en/CSAW-2016-10-Music-to-my-ears-Recon/"/>
    <id>http://rawsec.ml/en/CSAW-2016-10-Music-to-my-ears-Recon/</id>
    <published>2016-09-17T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : CSAW CTF Qualification Round 2016</li>
<li><strong>Website</strong> : <a href="https://ctf.csaw.io/" target="_blank" rel="external">https://ctf.csaw.io/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/347" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Yo fam have you listened to my mixtape?</p>
<p><code>user:1245880440:playlist:7bUFR2ujh1p3GfArxM0dHE</code></p>
<p>Hint: The recon spans multiple sites.</p>
<p>Author: breadchris</p>
<p>Hint 2 was an image of a beet.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p><strong>Note</strong>: I didn’t finished the challenge.</p>
<ul>
<li>We have to look for an user and a playlist.</li>
<li>Spotify look like to only big website to use a number id as username, so forge the URL like this:  <a href="https://play.spotify.com/user/1245880440/playlist/7bUFR2ujh1p3GfArxM0dHE" target="_blank" rel="external">https://play.spotify.com/user/1245880440/playlist/7bUFR2ujh1p3GfArxM0dHE</a>.</li>
<li>So we got a playlist named <strong>Awesome CTF Music Mix Vol. 1</strong>. It’s certainly the good one. The user is <strong>Chris Topher</strong>.</li>
<li>Take the 1st letter of each songs: <strong>CHECKOUTTHELASTRADIOSTATION</strong>. What is the last radio station? A link with WGU-20 ? Last.fm ? I didn’t find.</li>
<li>The second hint is an image of a beet so we can directly think about <a href="http://beets.io/" target="_blank" rel="external">beets.io/</a>.</li>
<li>No more clue  to go further.</li>
</ul>
<p>My point of view: CTF organizers, PLEASE, stop to put this kind of useless challenges that make us loose our time and that have no link with cyber-security.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="reconnaissance" scheme="http://rawsec.ml/tags/reconnaissance/"/>
    
  </entry>
  
  <entry>
    <title>CSAW CTF - 50 - Kill - Forensics</title>
    <link href="http://rawsec.ml/en/CSAW-2016-50-kill-forensics/"/>
    <id>http://rawsec.ml/en/CSAW-2016-50-kill-forensics/</id>
    <published>2016-09-17T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : CSAW CTF Qualification Round 2016</li>
<li><strong>Website</strong> : <a href="https://ctf.csaw.io/" target="_blank" rel="external">https://ctf.csaw.io/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/347" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Is kill can fix? Sign the autopsy file?</p>
<p><a href="https://ctf.csaw.io/static/uploads/a23ef5ecca7f30b77f59f21dba413b07/kill.pcapng" target="_blank" rel="external">kill.pcapng</a></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul>
<li>If you look at the presumed PcapNg file you can see it is certainly broken because you can’t open it with <a href="https://www.wireshark.org/" target="_blank" rel="external">Whireshark</a> and the <code>file</code> command shows it as raw data.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]</div><div class="line">└──╼ #file kill.pcapng</div><div class="line">kill.pcapng: data</div></pre></td></tr></table></figure>
<ul>
<li>It’s certainly more than just a wrong header signature so we’ll use the <a href="https://f00l.de/pcapfix/" target="_blank" rel="external">pcapcfix</a> tool  to fix this.</li>
<li>As there is no more header we have to use <code>--pcapng</code> option because default behaviour of the tool is to repair as a simple pcap file.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]</div><div class="line">└──╼ #/root/CTF/tools/pcapfix-1.1.0/pcapfix --pcapng kill.pcapng</div><div class="line">pcapfix 1.1.0 (c) 2012-2014 Robert Krause</div><div class="line"></div><div class="line">[*] Reading from file: kill.pcapng</div><div class="line">[*] Writing to file: fixed_kill.pcapng</div><div class="line">[*] File size: 2288848 bytes.</div><div class="line">[*] Unknown file type. Assuming PCAPNG format.</div><div class="line">[-] Unknown block type!: 0xaaddddaa ==&gt; SKIPPING.</div><div class="line">[-] Block size mismatch (0x1a2b3c4d != 0x0000008c) ==&gt; CORRECTED.</div><div class="line">[-] Found 128 bytes of unknown data ==&gt; SKIPPING.</div><div class="line">[-] No Section Block header found ==&gt; CREATING.</div><div class="line">[*] Progress:  20.02 %</div><div class="line">[*] Progress:  40.01 %</div><div class="line">[*] Progress:  60.04 %</div><div class="line">[*] Progress:  80.05 %</div><div class="line">[+] SUCCESS: 4 Corruption(s) fixed!</div></pre></td></tr></table></figure>
<ul>
<li>Now look at the file, it seems better!</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]</div><div class="line">└──╼ #file fixed_kill.pcapng</div><div class="line">fixed_kill.pcapng: pcap-ng capture file - version 1.0</div></pre></td></tr></table></figure>
<ul>
<li>Now open the Pcap-Ng file with wireshark.</li>
<li>This is mainly a SFTP exchange so it may be interesting to look at downloaded filess with this filter: Filter <code>ftp.request.command == STOR</code>.</li>
<li>Filter show us 7 downloaded files at frame 53, 130, 693, 760, 813, 2325 and 2480. 5 jpg files (image) and 2 mp4 files (video).</li>
<li>So let’s extract images first. For that we need the jpg header file signature. It can be found here <a href="https://en.wikipedia.org/wiki/List_of_file_signatures" target="_blank" rel="external">on Wikipedia</a>.</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">JPEG RAW `FF D8 FF DB`</div><div class="line">JFIF begin with `FF D8 FF E0`</div><div class="line">EXIF `FF D8 FF E1`</div></pre></td></tr></table></figure>
<ul>
<li>The one interesting for us is <strong>JFIF</strong>.</li>
<li>Press <code>CTRL + F</code>, select <strong>Hex value</strong> as <strong>Display filter</strong>.</li>
<li>Note that it’s not necessary as the begining of the stream is not far after the STOR request command.</li>
<li>We won’t need to extract mp4 file, flag is in one of the images.</li>
<li>Now there is two way to do it: the smart way and the dumb way.</li>
<li><strong>Dumb way</strong>: see the flag in the ASCII representation of the frame 696 (girls.jpg). Ok it works, but if the flag have be not so badly hidden you won’t have seen it, for example if it was display on the image.</li>
<li><strong>Smart way</strong>: Let’s extract images.</li>
<li>Now that we know where are the files stream, we can extract files as mention:<ul>
<li>Right click on the first frame of the stream.</li>
<li>Click on <em>Follow TCP Stream</em>.</li>
<li>Select <em>Raw</em> representation.</li>
<li>Save it on your disk.</li>
</ul>
</li>
</ul>
<ul>
<li>Do the same with next images.</li>
</ul>
<ul>
<li>We can note that all images are seeable execpt girls.jpg. So what? A broken file again? Not really, if you want to see the file header in order to fix it, you discover that the flag was just injected in the file header.</li>
<li>Let’s see the raw hex dump of the image:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]</div><div class="line">└──╼ #xxd -l83 extract_girls.jpg</div><div class="line">00000000: ffd8 ffe0 bae0 4a46 4946 0001 0101 0001  ......JFIF......</div><div class="line">00000010: 0001 0000 fffe 003d 666c 6167 7b72 6f73  .......=flag&#123;ros</div><div class="line">00000020: 6573 5f72 5f62 6c75 655f 7669 6f6c 6574  es_r_blue_violet</div><div class="line">00000030: 735f 725f 7233 645f 6d61 7962 335f 6861  s_r_r3d_mayb3_ha</div><div class="line">00000040: 7261 6d62 6165 5f69 735f 6e6f 745f 6b69  rambae_is_not_ki</div><div class="line">00000050: 6c6c 7d                                  ll&#125;</div></pre></td></tr></table></figure>
<p>Thanks to <a href="https://shankaraman.wordpress.com/tag/how-to-extract-ftp-files-from-wireshark-packet/" target="_blank" rel="external">Shankar Raman</a>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="forensics" scheme="http://rawsec.ml/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>CSAW CTF - 25 - Coinslot - Misc</title>
    <link href="http://rawsec.ml/en/CSAW-2016-25-coinslot-misc/"/>
    <id>http://rawsec.ml/en/CSAW-2016-25-coinslot-misc/</id>
    <published>2016-09-17T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.495Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : CSAW CTF Qualification Round 2016</li>
<li><strong>Website</strong> : <a href="https://ctf.csaw.io/" target="_blank" rel="external">https://ctf.csaw.io/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/347" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p><em>#Hope #Change #Obama2008</em></p>
<p><code>nc misc.chal.csaw.io 8000</code></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>The problem here is to split up a sum of money into its equivalent in bills and coins (minimum).</p>
<p>Here we have to script again:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div><div class="line">147</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python2</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> socket</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"><span class="keyword">from</span> decimal <span class="keyword">import</span> *</div><div class="line"></div><div class="line"></div><div class="line">total = <span class="number">0</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">recvuntil</span><span class="params">(s, pattern, tryouts)</span>:</span></div><div class="line">    data = <span class="string">""</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(tryouts):</div><div class="line">        <span class="comment"># sleep(1)</span></div><div class="line">        data += s.recv(<span class="number">9999</span>)</div><div class="line">        <span class="keyword">if</span> pattern <span class="keyword">in</span> data:</div><div class="line">            <span class="keyword">return</span> data</div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">calc</span><span class="params">(bills)</span>:</span></div><div class="line">    <span class="keyword">global</span> total</div><div class="line">    times = Decimal(str(total)) / Decimal(str(bills))</div><div class="line">    <span class="keyword">if</span> times &gt;= <span class="number">1</span>:</div><div class="line">        total = Decimal(str(total)) - Decimal(str(int(times))) * Decimal(str(bills))</div><div class="line">    <span class="keyword">return</span> int(times)</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    <span class="keyword">global</span> total</div><div class="line">    url = <span class="string">"misc.chal.csaw.io"</span></div><div class="line">    port = <span class="number">8000</span></div><div class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line">    s.connect((url, port))</div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        task = recvuntil(s, <span class="string">"$10,000 bills:"</span>, <span class="number">10</span>)</div><div class="line">        print(task)</div><div class="line">        total = re.findall(<span class="string">"\$(.*)\s+\$10,000 bills:"</span>, task)</div><div class="line">        <span class="keyword">if</span> len(total) == <span class="number">0</span>:</div><div class="line">            print(task)</div><div class="line">            sleep(<span class="number">10</span>)</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="comment"># print(total[0])</span></div><div class="line">            total = Decimal(str(total[<span class="number">0</span>]))</div><div class="line"></div><div class="line">            <span class="comment"># $10,000 bills:</span></div><div class="line">            to_send = str(calc(<span class="number">10000</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $5,000 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$5,000 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">5000</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $1,000 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$1,000 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">1000</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $500 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$500 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">500</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $100 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$100 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">100</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $50 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$50 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">50</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $20 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$20 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">20</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $10 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$10 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">10</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $5 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$5 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">5</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># $1 bills:</span></div><div class="line">            task = recvuntil(s, <span class="string">"$1 bills:"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">1</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># half-dollars (50c):</span></div><div class="line">            task = recvuntil(s, <span class="string">"half-dollars (50c):"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">0.50</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># quarters (25c):</span></div><div class="line">            task = recvuntil(s, <span class="string">"quarters (25c):"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">0.25</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># dimes (10c):</span></div><div class="line">            task = recvuntil(s, <span class="string">"dimes (10c):"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">0.10</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># nickels (5c):</span></div><div class="line">            task = recvuntil(s, <span class="string">"nickels (5c):"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">0.05</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">            <span class="comment"># pennies (1c):</span></div><div class="line">            task = recvuntil(s, <span class="string">"pennies (1c):"</span>, <span class="number">10</span>)</div><div class="line">            print(task)</div><div class="line">            to_send = str(calc(<span class="number">0.01</span>))</div><div class="line">            s.sendall(to_send + <span class="string">"\n"</span>)</div><div class="line">            print(to_send)</div><div class="line"></div><div class="line">main()</div></pre></td></tr></table></figure>
<p>Oh yeah this script is dirty and can be a lot more functional but you know in CTF all is a matter of time…</p>
<p>Proof of flag:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line">$22479.22</div><div class="line">$10,000 bills:</div><div class="line">2</div><div class="line">$5,000 bills:</div><div class="line">0</div><div class="line">$1,000 bills:</div><div class="line">2</div><div class="line">$500 bills:</div><div class="line">0</div><div class="line">$100 bills:</div><div class="line">4</div><div class="line">$50 bills:</div><div class="line">1</div><div class="line">$20 bills:</div><div class="line">1</div><div class="line">$10 bills:</div><div class="line">0</div><div class="line">$5 bills:</div><div class="line">1</div><div class="line">$1 bills:</div><div class="line">4</div><div class="line">half-dollars (50c):</div><div class="line">0</div><div class="line">quarters (25c):</div><div class="line">0</div><div class="line">dimes (10c):</div><div class="line">2</div><div class="line">nickels (5c):</div><div class="line">0</div><div class="line">pennies (1c):</div><div class="line">2</div><div class="line">correct!</div><div class="line">flag&#123;started-from-the-bottom-now-my-whole-team-fucking-here&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="misc" scheme="http://rawsec.ml/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>CSAW CTF - 100 - Rgexepire - Misc</title>
    <link href="http://rawsec.ml/en/CSAW-2016-100-Regexpire-misc/"/>
    <id>http://rawsec.ml/en/CSAW-2016-100-Regexpire-misc/</id>
    <published>2016-09-17T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.498Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : CSAW CTF Qualification Round 2016</li>
<li><strong>Website</strong> : <a href="https://ctf.csaw.io/" target="_blank" rel="external">https://ctf.csaw.io/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/347" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>I thought I found a perfect match but she ended up being my regEx girlfriend.</p>
<p><code>nc misc.chal.csaw.io 8001</code></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>It was very similar with <a href="https://backdoor.sdslabs.co/challenges/ISOLVE" target="_blank" rel="external">ISolve from BackdoorCTF 2016</a>.</p>
<p>I made 3 scripts to solve this:</p>
<ul>
<li>In Python with <a href="https://pypi.python.org/pypi/rstr/2.2.4" target="_blank" rel="external">rstr.xeger</a> (inspired by <a href="https://github.com/p4-team/ctf/tree/master/2016-06-04-backdoor-ctf/ppc_isolve" target="_blank" rel="external">p4</a>)</li>
<li>In Ruby with <a href="https://rubygems.org/gems/regexp-examples/versions/1.2.0" target="_blank" rel="external">regexp-examples</a></li>
<li>In Bash with <a href="https://github.com/asciimoo/exrex" target="_blank" rel="external">exrex</a> (simplified version)</li>
</ul>
<p>I flaged with the Python one, the Ruby one work well too and the Bash one work badly due to the dirty way exrex handle regex. Here a proof of success (after the end of the CTF) :</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">to solve = &apos;(wolf|gazelle)*[V8xqjx0A8]+[AoqoYnDiu]i3b+[ukqUrDlf]xf+(tomato|elephant)*(clinton|tomato)&apos;</div><div class="line">solution  = wolfgazellegazellegazellewolfwolfgazelle88xj8Ajx0xAjqx8xxAx8088AqVV0jV8Axjxx8qjV8x8qV0x8V0ii3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbqxffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffftomatotomatoelephantelephanttomatoelephanttomatotomatoelephanttomatoelephanttomatoelephantelephantelephanttomatotomatotomatotomatoelephantelephanttomatotomatoelephantelephanttomatotomatoelephanttomatoelephantelephanttomatoelephanttomatotomato</div><div class="line">D*[i-r]*(dolphin|sloth)(clinton|giraffe)[nNAUqCu]z4*\d+DM*v&#123;9&#125;[e-j](fish|cat)(penguin|sloth)+(chair|clinton)&#123;7&#125;</div><div class="line">to solve = &apos;D*[i-r]*(dolphin|sloth)(clinton|giraffe)[nNAUqCu]z4*1+DM*v&#123;9&#125;[e-j](fish|cat)(penguin|sloth)+(chair|clinton)&#123;7&#125;&apos;</div><div class="line">solution  = DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDmkpkoijmnrniprlknjppmmrjnlqqpjilrnqjmimkkmrndolphinclintonqz444444444444444444444444444444444444444444111111111111111111111111111111111111111111111111111111111111111111111111DMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMvvvvvvvvvhfishpenguinslothpenguinslothpenguinpenguinpenguinslothpenguinslothpenguinpenguinpenguinslothpenguinpenguinpenguinslothslothslothslothpenguinslothpenguinslothpenguinslothpenguinslothpenguinpenguinslothslothpenguinpenguinslothpenguinslothpenguinpenguinslothpenguinpenguinslothslothpenguinslothpenguinchairchairchairclintonchairclintonchair</div><div class="line">flag&#123;^regularly_express_yourself$&#125;</div><div class="line">to solve = &apos;flag&#123;^regularly_express_yourself$&#125;&apos;</div><div class="line">solution  = flag&#123;regularly_express_yourself&#125;</div></pre></td></tr></table></figure>
<p>Python:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env python</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> rstr</div><div class="line"><span class="keyword">import</span> socket</div><div class="line"><span class="keyword">import</span> re</div><div class="line"><span class="keyword">from</span> time <span class="keyword">import</span> sleep</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper_reg</span><span class="params">(s)</span>:</span></div><div class="line">  s = re.sub(<span class="string">'[\\\]&#123;1&#125;[W]&#123;1&#125;'</span>, <span class="string">' '</span>, s)</div><div class="line">  s = re.sub(<span class="string">'[\\\]&#123;1&#125;[W]&#123;1&#125;'</span>, <span class="string">'a'</span>, s)</div><div class="line">  s = re.sub(<span class="string">'[\\\]&#123;1&#125;[d]&#123;1&#125;'</span>, <span class="string">'1'</span>, s)</div><div class="line">  s = re.sub(<span class="string">'[\\\]&#123;1&#125;[D]&#123;1&#125;'</span>, <span class="string">'#'</span>, s)</div><div class="line">  <span class="keyword">return</span> s</div><div class="line"></div><div class="line"><span class="string">"""</span></div><div class="line">def wrapper(s):</div><div class="line">  s = re.sub('\s+', '\t', s)</div><div class="line">  s = re.sub('[^0-9a-zA-Z\s]+', '#', s)</div><div class="line">  return s</div><div class="line">"""</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">recvuntil</span><span class="params">(s)</span>:</span></div><div class="line">    data = <span class="string">""</span></div><div class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">9999</span>):</div><div class="line">        c = s.recv(<span class="number">1</span>)</div><div class="line">        <span class="keyword">if</span>(c == <span class="string">'\n'</span>):</div><div class="line">            <span class="keyword">break</span></div><div class="line">        data += c</div><div class="line">    <span class="keyword">return</span> data</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></div><div class="line">    url = <span class="string">"misc.chal.csaw.io"</span></div><div class="line">    port = <span class="number">8001</span></div><div class="line">    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)</div><div class="line">    s.connect((url, port))</div><div class="line">    i = <span class="number">0</span></div><div class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</div><div class="line">        <span class="keyword">if</span> i == <span class="number">0</span>:</div><div class="line">            task = recvuntil(s)</div><div class="line">            print(task)</div><div class="line">            i = <span class="number">1</span></div><div class="line">        task = recvuntil(s)</div><div class="line">        print(task)</div><div class="line">        to_solve = task</div><div class="line">        <span class="keyword">if</span> len(to_solve) == <span class="number">0</span>:</div><div class="line">            print(task)</div><div class="line">        <span class="keyword">elif</span>(to_solve == <span class="string">'Irregular'</span> <span class="keyword">or</span> to_solve == <span class="string">'Timeout'</span>):</div><div class="line">            <span class="keyword">break</span></div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            to_solve = wrapper_reg(to_solve)</div><div class="line">            print(<span class="string">"to solve = '%s'"</span> % to_solve)</div><div class="line">            solution = rstr.xeger(to_solve).replace(<span class="string">'\n'</span>,<span class="string">''</span>)</div><div class="line">            <span class="comment">#solution = wrapper(solution)</span></div><div class="line">            print(<span class="string">"solution  = %s"</span> % solution)</div><div class="line">            s.sendall(solution + <span class="string">"\n"</span>)</div><div class="line">        sleep(<span class="number">0.1</span>)</div><div class="line"></div><div class="line">main()</div></pre></td></tr></table></figure>
<p>Ruby:</p>
<figure class="highlight ruby"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/env ruby</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">### Dependencies ###</span></div><div class="line"></div><div class="line"><span class="keyword">require</span> <span class="string">'regexp-examples'</span></div><div class="line"><span class="keyword">require</span> <span class="string">'socket'</span></div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">### Functions ###</span></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(s)</span></span></div><div class="line">  s = s.gsub(<span class="string">'\s+'</span>, <span class="string">'\t'</span>)</div><div class="line">  s = s.gsub(<span class="string">'[^0-9a-zA-Z\s]+'</span>, <span class="string">'#'</span>)</div><div class="line">  <span class="keyword">return</span> s</div><div class="line"><span class="keyword">end</span></div><div class="line"></div><div class="line"><span class="comment">### Main ###</span></div><div class="line"></div><div class="line"><span class="keyword">if</span> __FILE_<span class="number">_</span> == $0</div><div class="line">  hostname = <span class="string">'misc.chal.csaw.io'</span></div><div class="line">  port = <span class="number">8001</span></div><div class="line"></div><div class="line">  s = TCPSocket.open(hostname, port)</div><div class="line">  output = <span class="string">""</span></div><div class="line">  exit_test = <span class="literal">nil</span></div><div class="line"></div><div class="line">  <span class="comment"># pass Can you match these regexes?</span></div><div class="line">  line = s.gets</div><div class="line">  puts line.chop</div><div class="line"></div><div class="line">  <span class="keyword">while</span> <span class="keyword">not</span> exit_test</div><div class="line">    line = s.gets       <span class="comment"># Read lines from the socket</span></div><div class="line">    puts line.chop      <span class="comment"># And print with platform line terminator</span></div><div class="line">    output = output.concat(line)</div><div class="line"></div><div class="line">    <span class="comment"># stop = /Can you match these regexes?\s+(.*)/.match(output)</span></div><div class="line">    stop = <span class="literal">true</span></div><div class="line">    <span class="keyword">if</span> stop</div><div class="line">      reg_test = output.match(<span class="regexp">/(.*)/</span>)</div><div class="line">      reg = <span class="regexp">/<span class="subst">#&#123;reg_test[<span class="number">1</span>]&#125;</span>/</span></div><div class="line">      example = reg.random_example</div><div class="line">      example = wrapper(example)</div><div class="line">      <span class="keyword">if</span> example != <span class="literal">nil</span></div><div class="line">        puts <span class="string">"solution :"</span> + example</div><div class="line">      <span class="keyword">end</span></div><div class="line">      s.puts(example.gsub(<span class="string">'\n'</span>, <span class="string">''</span>))</div><div class="line">      s.flush</div><div class="line">      output = <span class="string">""</span></div><div class="line">    <span class="keyword">end</span></div><div class="line">    exit_test = <span class="regexp">/Failed regex/</span>.match(output)</div><div class="line">    <span class="keyword">if</span> exit_test</div><div class="line">      exit(<span class="number">1</span>)</div><div class="line">    <span class="keyword">end</span></div><div class="line">  <span class="keyword">end</span></div><div class="line">  s.close               <span class="comment"># Close the socket when done</span></div><div class="line"><span class="keyword">end</span></div></pre></td></tr></table></figure>
<p>Bash:</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div></pre></td><td class="code"><pre><div class="line"><span class="meta">#!/bin/bash</span></div><div class="line"></div><div class="line"><span class="comment">#######</span></div><div class="line"><span class="comment">#Config</span></div><div class="line"></div><div class="line">URL=<span class="string">"misc.chal.csaw.io"</span></div><div class="line">PORT=8001</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">#####</span></div><div class="line"><span class="comment">#Main</span></div><div class="line"></div><div class="line">OUT=<span class="string">""</span></div><div class="line"></div><div class="line"><span class="comment"># Open socket</span></div><div class="line"><span class="built_in">exec</span> 3&lt;&gt;/dev/tcp/<span class="variable">$&#123;URL&#125;</span>/<span class="variable">$&#123;PORT&#125;</span></div><div class="line"></div><div class="line"><span class="built_in">read</span> LINE &lt;&amp;3</div><div class="line"><span class="built_in">echo</span> <span class="variable">$LINE</span> &gt;&amp;1</div><div class="line"><span class="keyword">while</span> [ -z <span class="string">"<span class="variable">$EXIT</span>"</span> ]</div><div class="line"><span class="keyword">do</span></div><div class="line"></div><div class="line">	<span class="built_in">read</span> LINE &lt;&amp;3</div><div class="line">	<span class="built_in">echo</span> <span class="variable">$LINE</span> &gt;&amp;1</div><div class="line">	exrex -r <span class="string">"<span class="variable">$LINE</span>"</span> &gt;&amp;3</div><div class="line">	OUT=<span class="string">""</span></div><div class="line"></div><div class="line">	EXIT=$( <span class="built_in">echo</span> <span class="string">"<span class="variable">$OUT</span>"</span> | awk <span class="string">'/Irregular/ &#123; getline; print $0 &#125;'</span> )</div><div class="line"><span class="keyword">done</span></div></pre></td></tr></table></figure>
<p>My point of view: This kind of chanllenge is tricky due to bad implementation of regex server and/or regex solver so you always need to fix/wrap regex answers/solutions. I think it’s better to put a short timeout (&lt;1s) rather than a lot a steps (100+) to prevent humans to do it by hand because the more steps there are the more chances you have to get a bug. I think the goal of the challenge is to make user script, use regex and parsing, use socket but not to correct/complete other’s tools.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="misc" scheme="http://rawsec.ml/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux - Install Zsh shell and oh-my-zsh</title>
    <link href="http://rawsec.ml/en/archlinux-install-zsh/"/>
    <id>http://rawsec.ml/en/archlinux-install-zsh/</id>
    <published>2016-09-13T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Install-Zsh"><a href="#Install-Zsh" class="headerlink" title="Install Zsh"></a>Install Zsh</h2><ul>
<li>Before installing <a href="https://www.archlinux.org/packages/?name=zsh" target="_blank" rel="external">zsh</a>, see what shell is currently being used:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ echo $SHELL</div></pre></td></tr></table></figure>
<ul>
<li>Install <a href="https://www.archlinux.org/packages/?name=zsh" target="_blank" rel="external">zsh</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S zsh</div></pre></td></tr></table></figure>
<ul>
<li>For additional completion definitions, install the <a href="https://www.archlinux.org/packages/?name=zsh-completions" target="_blank" rel="external">zsh-completions</a> package:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S zsh-completions</div></pre></td></tr></table></figure>
<ul>
<li>Make zsh has been installed correctly and configure it:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ zsh</div></pre></td></tr></table></figure>
<ul>
<li>Set zsh as default shell (list shells with <code>$ chsh -l</code>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ chsh -s /bin/zsh</div></pre></td></tr></table></figure>
<h2 id="Install-Oh-My-Zsh"><a href="#Install-Oh-My-Zsh" class="headerlink" title="Install Oh My Zsh"></a>Install Oh My Zsh</h2><ul>
<li>Install dependencies:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S curl git</div></pre></td></tr></table></figure>
<ul>
<li>Install <a href="https://github.com/robbyrussell/oh-my-zsh" target="_blank" rel="external">oh-my-zsh</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Install-Zsh&quot;&gt;&lt;a href=&quot;#Install-Zsh&quot; class=&quot;headerlink&quot; title=&quot;Install Zsh&quot;&gt;&lt;/a&gt;Install Zsh&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;Before installing &lt;a href=&quot;h
    
    </summary>
    
      <category term="linux" scheme="http://rawsec.ml/categories/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/categories/linux/archlinux/"/>
    
    
      <category term="linux" scheme="http://rawsec.ml/tags/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>ArchLinux - Install rTorrent and ruTorrent</title>
    <link href="http://rawsec.ml/en/archlinux-install-rtorrent-rutorrent/"/>
    <id>http://rawsec.ml/en/archlinux-install-rtorrent-rutorrent/</id>
    <published>2016-09-13T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.498Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Warning-Post-in-construction"><a href="#Warning-Post-in-construction" class="headerlink" title="Warning: Post in construction"></a>Warning: Post in construction</h1><h2 id="Install-rTorrent"><a href="#Install-rTorrent" class="headerlink" title="Install rTorrent"></a>Install rTorrent</h2><p>As rTorrent package is always up-to-date on Arch repository, it’s not needed to compile it.</p>
<ul>
<li>Install <a href="https://www.archlinux.org/packages/?q=rtorrent" target="_blank" rel="external">rtorrent</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S rtorrent</div></pre></td></tr></table></figure>
<h2 id="Install-ruTorrent"><a href="#Install-ruTorrent" class="headerlink" title="Install ruTorrent"></a>Install ruTorrent</h2><ul>
<li>Create the web server root directory if it doesn’t already exist:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkdir -p /srv/http</div></pre></td></tr></table></figure>
<ul>
<li>Go to the web server folder and clone the <a href="https://github.com/Novik/ruTorrent.git" target="_blank" rel="external">ruTorrent</a> git repository into it:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ cd /srv/http</div><div class="line"># git clone https://github.com/Novik/ruTorrent.git rutorrent</div></pre></td></tr></table></figure>
<h2 id="Install-Nginx"><a href="#Install-Nginx" class="headerlink" title="Install Nginx"></a>Install Nginx</h2><ul>
<li>Install <a href="https://www.archlinux.org/packages/?name=nginx-mainline" target="_blank" rel="external">nginx-mainline</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S nginx-mainline</div></pre></td></tr></table></figure>
<ul>
<li>Enable and start nginx:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># systemctl enable nginx.service</div><div class="line"># systemctl start nginx.service</div></pre></td></tr></table></figure>
<h2 id="Install-and-configure-PHP"><a href="#Install-and-configure-PHP" class="headerlink" title="Install and configure PHP"></a>Install and configure PHP</h2><ul>
<li>Install <a href="https://www.archlinux.org/packages/?sort=&amp;q=php&amp;maintainer=&amp;flagged=" target="_blank" rel="external">php</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S php</div></pre></td></tr></table></figure>
<ul>
<li>Install <a href="https://www.archlinux.org/packages/?name=php-fpm" target="_blank" rel="external">php-fpm</a>:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># pacman -S php-fpm</div></pre></td></tr></table></figure>
<ul>
<li>Open php configuration:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vim /etc/php/php.ini</div></pre></td></tr></table></figure>
<ul>
<li>Disable php exposure (<a href="http://php.net/manual/en/ini.core.php#ini.expose-php" target="_blank" rel="external">expose_php</a>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">expose_php = Off</div></pre></td></tr></table></figure>
<ul>
<li>Enable file uploads (<a href="http://php.net/manual/en/ini.core.php#ini.file-uploads" target="_blank" rel="external">file_uploads</a>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">file_uploads = On</div></pre></td></tr></table></figure>
<ul>
<li>Set max size of post data allowed (<a href="http://php.net/manual/en/ini.core.php#ini.post-max-size" target="_blank" rel="external">post_max_size</a>)</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">post_max_size = 15M</div></pre></td></tr></table></figure>
<ul>
<li>Set the maximum size of an uploaded file (<a href="http://php.net/manual/en/ini.core.php#ini.upload-max-filesize" target="_blank" rel="external">upload_max_filesize</a>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">upload_max_filesize = 15M</div></pre></td></tr></table></figure>
<ul>
<li>Set the timezone (<a href="http://php.net/manual/en/datetime.configuration.php#ini.date.timezone" target="_blank" rel="external">date.timezone</a>).</li>
<li>For more security, limit the files that can be accessed by php (<a href="http://php.net/manual/en/ini.core.php#ini.open-basedir" target="_blank" rel="external">open_basedir</a>):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">open_basedir = /srv/http</div></pre></td></tr></table></figure>
<ul>
<li>Enable and start php-fpm:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># systemctl enable php-fpm</div><div class="line"># systemctl start php-fpm</div></pre></td></tr></table></figure>
<h2 id="Configure-Nginx"><a href="#Configure-Nginx" class="headerlink" title="Configure Nginx"></a>Configure Nginx</h2><ul>
<li>Change the default conf:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># mkdir /etc/nginx/auth</div><div class="line"># mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.default</div><div class="line"># vim /etc/nginx/nginx.conf</div></pre></td></tr></table></figure>
<ul>
<li>And add this conf:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div></pre></td><td class="code"><pre><div class="line">user http;</div><div class="line">worker_processes auto;</div><div class="line"># PID error: https://bugs.archlinux.org/task/46500</div><div class="line"># pid /run/nginx.pid;</div><div class="line"></div><div class="line">events &#123;</div><div class="line">	worker_connections 1024;</div><div class="line">	multi_accept on;</div><div class="line">	use epoll;</div><div class="line">&#125;</div><div class="line"></div><div class="line">http &#123;</div><div class="line"></div><div class="line">	charset UTF-8;</div><div class="line"></div><div class="line">	##</div><div class="line">	# Basic Settings</div><div class="line">	##</div><div class="line">	server_names_hash_bucket_size 64;</div><div class="line">	sendfile on;</div><div class="line">	tcp_nopush on;</div><div class="line">	tcp_nodelay on;</div><div class="line">	keepalive_timeout 65;</div><div class="line">	types_hash_max_size 2048;</div><div class="line">	server_tokens off;</div><div class="line"></div><div class="line">	# server_names_hash_bucket_size 64;</div><div class="line">	# server_name_in_redirect off;</div><div class="line"></div><div class="line">	include /etc/nginx/mime.types;</div><div class="line">	default_type application/octet-stream;</div><div class="line"></div><div class="line"></div><div class="line">	##</div><div class="line">	# Logging Settings</div><div class="line">	##</div><div class="line"></div><div class="line">	access_log /var/log/nginx/access.log;</div><div class="line">	error_log /var/log/nginx/error.log;</div><div class="line"></div><div class="line">	##</div><div class="line">	# Gzip Settings</div><div class="line">	##</div><div class="line"></div><div class="line">	gzip on;</div><div class="line">	gzip_disable &quot;msie6&quot;;</div><div class="line"></div><div class="line">	gzip_vary on;</div><div class="line">	gzip_proxied any;</div><div class="line">	gzip_comp_level 6;</div><div class="line">	gzip_buffers 16 8k;</div><div class="line">	gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript</div><div class="line"></div><div class="line">	##</div><div class="line">	# Virtual Host Configs</div><div class="line">	##</div><div class="line"></div><div class="line">	include /etc/nginx/conf.d/*.conf;</div><div class="line">	include /etc/nginx/servers-enabled/*;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Create following directories:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mkdir /etc/nginx/servers-available</div><div class="line"># mkdir /etc/nginx/servers-enabled</div></pre></td></tr></table></figure>
<ul>
<li>Create the server domain config:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vim /etc/nginx/servers-available/seedbox</div></pre></td></tr></table></figure>
<ul>
<li>And add the conf:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div></pre></td><td class="code"><pre><div class="line">server &#123;</div><div class="line"> listen 80;</div><div class="line"> listen [::]:80;</div><div class="line"> # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.</div><div class="line"> return 301 https://$host$request_uri;</div><div class="line">&#125;</div><div class="line"></div><div class="line">#------------------------------------------------------------------------</div><div class="line"># BLOCK SERVEUR HTTPS</div><div class="line">#</div><div class="line">server &#123;</div><div class="line"></div><div class="line"> listen 443 ssl http2;</div><div class="line"> server_name seedbox;</div><div class="line"> root /srv/http/rutorrent;</div><div class="line"> index index.php index.html index.htm;</div><div class="line"></div><div class="line">#------------------------------------------------------------------------</div><div class="line"># SSL</div><div class="line">#</div><div class="line"> ssl_certificate /etc/nginx/ssl/seedbox.crt;</div><div class="line"> ssl_certificate_key /etc/nginx/ssl/seedbox.key;</div><div class="line"></div><div class="line"> ssl_protocols TLSv1.2;</div><div class="line"> ssl_ciphers EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES;</div><div class="line"> ssl_ecdh_curve secp384r1;</div><div class="line"> ssl_prefer_server_ciphers on;</div><div class="line"></div><div class="line"> # ssl optimizations</div><div class="line"> ssl_session_timeout 5m;</div><div class="line"> ssl_session_cache shared:SSL:20m;</div><div class="line"> ssl_session_tickets on;</div><div class="line"></div><div class="line"></div><div class="line">#------------------------------------------------------------------------</div><div class="line"># SECURITY</div><div class="line"></div><div class="line"> add_header X-XSS-Protection &quot;1; mode=block&quot;;</div><div class="line"> auth_basic &quot;Restricted Area&quot;;</div><div class="line"> auth_basic_user_file &quot;/etc/nginx/auth/seedbox_auth&quot;;</div><div class="line"></div><div class="line">#------------------------------------------------------------------------</div><div class="line"># PHP</div><div class="line">#</div><div class="line"> location / &#123;</div><div class="line"> index index.php index.html index.htm;</div><div class="line"> try_files $uri $uri/ /index.php?$args;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> location ~ \.php$ &#123;</div><div class="line"> try_files $uri =404;</div><div class="line"> fastcgi_split_path_info ^(.+\.php)(/.+)$;</div><div class="line"> fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock;</div><div class="line"> fastcgi_index index.php;</div><div class="line"> fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;</div><div class="line"> include fastcgi_params; &#125;</div><div class="line"></div><div class="line"> location ^~ /conf/ &#123;</div><div class="line"> deny all;</div><div class="line"> &#125;</div><div class="line"></div><div class="line"> location ^~ /share/ &#123;</div><div class="line"> deny all;</div><div class="line"> &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Enable the server:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># ln -s /etc/nginx/servers-available/seedbox /etc/nginx/servers-enabled/seedbox</div></pre></td></tr></table></figure>
<h2 id="Configure-SSL"><a href="#Configure-SSL" class="headerlink" title="Configure SSL"></a>Configure SSL</h2><p>We will both view self-signed certificate and Let’s Encrypt ones.</p>
<h3 id="Self-signed"><a href="#Self-signed" class="headerlink" title="Self-signed"></a>Self-signed</h3><ul>
<li>Add certificate folder:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkdir /etc/nginx/ssl</div></pre></td></tr></table></figure>
<ul>
<li>Generate self-signed certificate:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># cd /etc/nginx/ssl</div><div class="line"># openssl ecparam -genkey -name secp384r1 -out seedbox.key</div><div class="line"># openssl req -new -key seedbox.key -sha256 -out seedbox.csr</div><div class="line"># openssl req -x509 -days 3650 -sha256 -key seedbox.key -in seedbox.csr -out seedbox.crt</div></pre></td></tr></table></figure>
<ul>
<li>Modify files rights:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># chmod 644 /etc/nginx/ssl/*.crt</div><div class="line"># chmod 640 /etc/nginx/ssl/*.key</div></pre></td></tr></table></figure>
<h3 id="Let’s-Encrypt"><a href="#Let’s-Encrypt" class="headerlink" title="Let’s Encrypt"></a>Let’s Encrypt</h3><p>TODO</p>
<h2 id="Add-an-user"><a href="#Add-an-user" class="headerlink" title="Add an user"></a>Add an user</h2><ul>
<li>Create an user:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># useradd --shell /bin/bash --create-home sdbox</div><div class="line"># passwd sdbox</div></pre></td></tr></table></figure>
<ul>
<li>Create needed folder for rtorrent:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># mkdir -p /home/sdbox/&#123;torrents,watch,.session&#125;</div></pre></td></tr></table></figure>
<ul>
<li>Create rtorrent config file:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vim /home/sdbox/.rtorrent.rc</div></pre></td></tr></table></figure>
<ul>
<li>Paste the config:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line">scgi_port = 127.0.0.1:5001</div><div class="line">encoding_list = UTF-8</div><div class="line">port_range = 45000-65000</div><div class="line">port_random = no</div><div class="line">check_hash = no</div><div class="line">directory = /home/sdbox/torrents</div><div class="line">session = /home/sdbox/.session</div><div class="line">encryption = allow_incoming, try_outgoing, enable_retry</div><div class="line">schedule = watch_directory,1,1,&quot;load_start=/home/sdbox/watch/*.torrent&quot;</div><div class="line">schedule = untied_directory,5,5,&quot;stop_untied=/home/sdbox/watch/*.torrent&quot;</div><div class="line">use_udp_trackers = yes</div><div class="line">dht = off</div><div class="line">peer_exchange = no</div><div class="line">min_peers = 40</div><div class="line">max_peers = 100</div><div class="line">min_peers_seed = 10</div><div class="line">max_peers_seed = 50</div><div class="line">max_uploads = 15</div><div class="line">execute = &#123;sh,-c,/usr/bin/php /srv/http/rutorrent/php/initplugins.php sdbox &amp;&#125;</div><div class="line">schedule = espace_disque_insuffisant,1,30,close_low_diskspace=500M</div></pre></td></tr></table></figure>
<ul>
<li>Give user permissions:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"># chown --recursive sdbox:sdbox /home/sdbox</div><div class="line"># chown root:root /home/sdbox</div><div class="line"># chmod 755 /home/sdbox</div></pre></td></tr></table></figure>
<ul>
<li>Edit the virtual server conf:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"># vim /etc/nginx/servers-available/seedbox</div></pre></td></tr></table></figure>
<ul>
<li>Add the conf:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"> location /SDBOX</div><div class="line">&#123;</div><div class="line"> include scgi_params;</div><div class="line"> scgi_pass 127.0.0.1:5001;</div><div class="line"> auth_basic &quot;Restricted Area&quot;;</div><div class="line"> auth_basic_user_file &quot;/etc/nginx/auth/seedbox_auth sdbox&quot;;</div><div class="line"> &#125;</div></pre></td></tr></table></figure>
<ul>
<li>In order to do not install apache-tools, manually generate the auth file  for sdbox user (it will write over the file and don’t forget to change the password in the command):</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ echo -n &quot;sdbox:&quot; | sudo tee /etc/nginx/auth/seedbox_auth &amp;&amp; openssl passwd -apr1 password | sudo tee -a /etc/nginx/auth/seedbox_auth</div></pre></td></tr></table></figure>
<ul>
<li>Protect the authentification file:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># chmod 600 /etc/nginx/auth/seedbox_auth</div><div class="line"># chown http:http /etc/nginx/auth/*</div></pre></td></tr></table></figure>
<ul>
<li>Create ruTorrent config file:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># mkdir /srv/http/rutorrent/conf/users/sdbox</div><div class="line"># vim /srv/http/rutorrent/conf/users/sdbox/config.php</div></pre></td></tr></table></figure>
<ul>
<li>And add the content:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&lt;?php</div><div class="line"></div><div class="line">$pathToExternals[&apos;curl&apos;] = &apos;/usr/bin/curl&apos;;</div><div class="line">$topDirectory = &apos;/home/sdbox&apos;;</div><div class="line">$scgi_port = 5001;</div><div class="line">$scgi_host = &apos;127.0.0.1&apos;;</div><div class="line">$XMLRPCMountPoint = &apos;/SDBOX&apos;;</div></pre></td></tr></table></figure>
<ul>
<li>Correct permissions:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"># chown -R http:http /srv/http</div><div class="line"># systemctl restart nginx.service</div></pre></td></tr></table></figure>
<h2 id="Create-a-rTorrent-service"><a href="#Create-a-rTorrent-service" class="headerlink" title="Create a rTorrent service"></a>Create a rTorrent service</h2><ul>
<li>Create the file <code>/etc/systemd/user/rtorrent.service</code> containing:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">[Unit]</div><div class="line">Description=rTorrent Daemon</div><div class="line">After=network.target</div><div class="line"></div><div class="line">[Service]</div><div class="line">Type=forking</div><div class="line">KillMode=none</div><div class="line">User=sdbox</div><div class="line">ExecStart=/usr/bin/tmux new-session -c /mnt/storage/rtorrent -s rtorrent -n rtorrent -d rtorrent</div><div class="line">ExecStop=/usr/bin/bash -c &quot;/usr/bin/tmux send-keys -t rtorrent C-q &amp;&amp; while pidof rtorrent &gt; /dev/null; do sleep 0.5; done&quot;</div><div class="line">WorkingDirectory=/home/sdbox/</div><div class="line">Restart=on-failure</div><div class="line"></div><div class="line">[Install]</div><div class="line">WantedBy=multi-user.target</div></pre></td></tr></table></figure>
<ul>
<li>Enable rtorrent at boot time and manually start it:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">$ systemctl --user enable rtorrent</div><div class="line">$ systemctl --user start rtorrent</div></pre></td></tr></table></figure>
<p><strong>Source</strong>: <a href="https://www.sdbox.net/noobunschool/seedbox/installer-une-seedbox/" target="_blank" rel="external">sdbox</a>, <a href="https://wiki.archlinux.org/index.php/RTorrent#Installation" target="_blank" rel="external">wiki archlinux</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Warning-Post-in-construction&quot;&gt;&lt;a href=&quot;#Warning-Post-in-construction&quot; class=&quot;headerlink&quot; title=&quot;Warning: Post in construction&quot;&gt;&lt;/a&gt;W
    
    </summary>
    
      <category term="linux" scheme="http://rawsec.ml/categories/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/categories/linux/archlinux/"/>
    
    
      <category term="linux" scheme="http://rawsec.ml/tags/linux/"/>
    
      <category term="archlinux" scheme="http://rawsec.ml/tags/archlinux/"/>
    
  </entry>
  
  <entry>
    <title>ASIS CTF Finals 2016 - 3 - CTF 101 - Trivia</title>
    <link href="http://rawsec.ml/en/ASIS-3-CTF-101-Trivia/"/>
    <id>http://rawsec.ml/en/ASIS-3-CTF-101-Trivia/</id>
    <published>2016-09-10T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.532Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : ASIS CTF Finals 2016</li>
<li><strong>Website</strong> : <a href="http://asis-ctf.ir/" target="_blank" rel="external">http://asis-ctf.ir/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/327" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>Watch your heads!</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>One-liners will be happy:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF]</div><div class="line">└──╼ #curl https://asis-ctf.ir/challenges/ --head | tr -d &apos;\r&apos; | sed -En &apos;s/^Flag: (.*); base64/\1/p&apos; | base64 -d</div><div class="line">  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current</div><div class="line">                                 Dload  Upload   Total   Spent    Left  Speed</div><div class="line">  0     0    0     0    0     0      0      0 --:--:--  0:00:01 --:--:--     0</div><div class="line">ASIS&#123;31a483900b8576426cccdf55402b9dd6&#125;</div></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="trivia" scheme="http://rawsec.ml/tags/trivia/"/>
    
  </entry>
  
  <entry>
    <title>How to remove pages from a PDF in command line on Linux</title>
    <link href="http://rawsec.ml/en/remove-pages-from-pdf-command-line/"/>
    <id>http://rawsec.ml/en/remove-pages-from-pdf-command-line/</id>
    <published>2016-09-07T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.518Z</updated>
    
    <content type="html"><![CDATA[<p>To remove pages from a PDF in command line on Linux, we’ll use <a href="https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/" title="PDFtk the pdf toolkit" target="_blank" rel="external">PDFtk</a>.</p>
<ul>
<li>Install <strong>pdftk</strong> with your favorite packet manager (ex: <code>sudo zypper install pdftk</code>)</li>
<li>And run one of those commands:<ul>
<li>To extract only one page: <code>pdftk original.pdf cat 12 output edited.pdf</code>.</li>
<li>To keep only a range of pages: <code>pdftk original.pdf cat 3-26 output edited.pdf</code>.</li>
<li>To  keep several range and some range without knowing page number (ex: end): <code>pdftk original.pdf cat 1-7 9-end output edited.pdf</code>.</li>
<li>More examples <a href="https://www.pdflabs.com/docs/pdftk-man-page/#dest-op-cat" target="_blank" rel="external">here</a>.</li>
</ul>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;To remove pages from a PDF in command line on Linux, we’ll use &lt;a href=&quot;https://www.pdflabs.com/tools/pdftk-the-pdf-toolkit/&quot; title=&quot;PDFt
    
    </summary>
    
      <category term="linux" scheme="http://rawsec.ml/categories/linux/"/>
    
    
      <category term="linux" scheme="http://rawsec.ml/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>CTF(x) - 50 - λ - Cryptography</title>
    <link href="http://rawsec.ml/en/CTFx-50-lambda-cryptography/"/>
    <id>http://rawsec.ml/en/CTFx-50-lambda-cryptography/</id>
    <published>2016-08-26T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : CTF(x) 2016</li>
<li><strong>Website</strong> : <a href="http://ctfx.io/" target="_blank" rel="external">http://ctfx.io/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/348/" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>I used this program to encrypt a flag. The output was:<br>n1s4_t1An(f1ctdb@mpl_h3)m3lp3y__Eas</p>
<p>file: <a href="http://compete.ctfx.io/download?file_key=e1f0efcd2db9d3a57ece97805fca95a877b9df1a480f52ef71e086f779a9be6e&amp;team_key=1363275c2f4e78940bb6a342fb83902f1128ff824d8eb6505da463820eabfbe3" target="_blank" rel="external">λ.py</a></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>TL;DR : that solution is just a trick not a smart de-obfuscation.</p>
<ul>
<li>Here is the code of the <code>λ.py</code>:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">print</span> (<span class="keyword">lambda</span> j,m:(<span class="keyword">lambda</span> f,t:t <span class="keyword">if</span> len(t) &lt;= <span class="number">1</span> <span class="keyword">else</span> j([f(f,x)<span class="keyword">for</span> x <span class="keyword">in</span> m(j,m(reversed,(<span class="keyword">lambda</span> s:zip(*[iter(s)]*(len(s)/<span class="number">2</span>)))(t+<span class="string">"\x01"</span>*(len(t)%<span class="number">2</span>))))]))(<span class="keyword">lambda</span> f,t:t <span class="keyword">if</span> len(t) &lt;= <span class="number">1</span> <span class="keyword">else</span> j([f(f,x)<span class="keyword">for</span> x <span class="keyword">in</span> m(j,m(reversed,(<span class="keyword">lambda</span> s: zip(*[iter(s)]*(len(s)/<span class="number">2</span>)))(t+<span class="string">"\x01"</span>*(len(t)%<span class="number">2</span>))))]),raw_input(<span class="string">"Plaintext:"</span>)))(<span class="string">''</span>.join,map).replace(<span class="string">"\x01"</span>,<span class="string">""</span>)</div></pre></td></tr></table></figure>
<ul>
<li>It’s clear that the code is obfuscated, but even beautified it’s still a mess.</li>
<li>So as I don’t want my brain to blow trying to de-obfuscate this, I got around.</li>
<li>I realized that, with enought iteration, we gan get back the original string. So I modified the code to “brute-force” the good combination:</li>
</ul>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># Modiied code</span></div><div class="line">mixed_flag = <span class="string">"n1s4_t1An(f1ctdb@mpl_h3)m3lp3y__Eas"</span></div><div class="line"></div><div class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">100</span>):</div><div class="line">    old_mixed_flag = mixed_flag</div><div class="line">    mixed_flag = (<span class="keyword">lambda</span> j, m: (<span class="keyword">lambda</span> f, t: t</div><div class="line">        <span class="keyword">if</span> len(t) &lt;= <span class="number">1</span></div><div class="line">        <span class="keyword">else</span> j([f(f, x) <span class="keyword">for</span> x <span class="keyword">in</span> m(j, m(reversed, (<span class="keyword">lambda</span> s: zip( * [iter(s)] * (len(s) / <span class="number">2</span>)))(t + <span class="string">"\x01"</span> * (len(t) % <span class="number">2</span>))))]))(<span class="keyword">lambda</span> f, t: t</div><div class="line">        <span class="keyword">if</span> len(t) &lt;= <span class="number">1</span></div><div class="line">    <span class="keyword">else</span> j([f(f, x) <span class="keyword">for</span> x <span class="keyword">in</span> m(j, m(reversed, (<span class="keyword">lambda</span> s: zip( * [iter(s)] * (len(s) / <span class="number">2</span>)))(t + <span class="string">"\x01"</span> * (len(t) % <span class="number">2</span>))))]), old_mixed_flag))(<span class="string">''</span>.join, map).replace(<span class="string">"\x01"</span>, <span class="string">""</span>)</div><div class="line">    print(str(i) + <span class="string">" "</span> + mixed_flag)</div></pre></td></tr></table></figure>
<ul>
<li>Here the non-filtered output, that’s quite long:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CTFx/2016/50-lambda_λ-cryptography]</div><div class="line">└──╼ #python lambda_λ.py</div><div class="line">0 c1t(fm@db4s_n1nAt1_y_p3sEah_3pll3)m</div><div class="line">1 n_14s1tnA(tfc1bdm@lpl_3m3)p_3_yhasE</div><div class="line">2 cf1(t@mbd41sn_An1ty_h_3Eas_l3lpp)m3</div><div class="line">[...]</div><div class="line">97 n_14s1tnA(tfc1bdm@lph_3m3)_l3_ypasE</div><div class="line">98 cf1(t@mbd41sn_An1ty_pl3Eas_h3lp_)m3</div><div class="line">99 ns_41t1An(1tcfdb@mpl_h33)mlp3y__sEa</div></pre></td></tr></table></figure>
<ul>
<li>Now let’s see what begins with <code>ctf(</code></li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CTFx/2016/50-lambda_λ-cryptography]</div><div class="line">└──╼ #python lambda_λ.py | grep &apos;ctf(&apos;</div><div class="line">4 ctf(1m@db4_1nsnAt1_y_h3asElp3pl_m3)</div><div class="line">10 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)</div><div class="line">16 ctf(1m@db4_1nsnAt1_yl_3asEp_3plhm3)</div><div class="line">22 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)</div><div class="line">28 ctf(1m@db4_1nsnAt1_ypl3asE_h3pl_m3)</div><div class="line">34 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3)</div><div class="line">40 ctf(1m@db4_1nsnAt1_y_p3asEh_3pllm3)</div><div class="line">46 ctf(1@mbd4_1nsAn1ty_l_3asEp_3lphm3)</div><div class="line">52 ctf(1m@db4_1nsnAt1_yh_3asE_l3plpm3)</div><div class="line">58 ctf(1@mbd4_1nsAn1ty_pl3asE_h3lp_m3)</div><div class="line">64 ctf(1m@db4_1nsnAt1_y_h3asElp3pl_m3)</div><div class="line">70 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)</div><div class="line">76 ctf(1m@db4_1nsnAt1_yl_3asEp_3plhm3)</div><div class="line">82 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)</div><div class="line">88 ctf(1m@db4_1nsnAt1_ypl3asE_h3pl_m3)</div><div class="line">94 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3)</div></pre></td></tr></table></figure>
<ul>
<li>That begins to make sense, more filtering:</li>
</ul>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/CTFx/2016/50-lambda_λ-cryptography]</div><div class="line">└──╼ #python lambda_λ.py | grep &apos;ctf(1@mbd4_1nsAn1ty_&apos;</div><div class="line">10 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)</div><div class="line">22 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)</div><div class="line">34 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3)</div><div class="line">46 ctf(1@mbd4_1nsAn1ty_l_3asEp_3lphm3)</div><div class="line">58 ctf(1@mbd4_1nsAn1ty_pl3asE_h3lp_m3)</div><div class="line">70 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)</div><div class="line">82 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)</div><div class="line">94 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3)</div></pre></td></tr></table></figure>
<ul>
<li>Not so hard: <code>58 ctf(1@mbd4_1nsAn1ty_pl3asE_h3lp_m3)</code>.</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="crypto" scheme="http://rawsec.ml/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>CTF(x) - 50 - crash - Forensics</title>
    <link href="http://rawsec.ml/en/CTFx-50-crash-forensics/"/>
    <id>http://rawsec.ml/en/CTFx-50-crash-forensics/</id>
    <published>2016-08-26T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.522Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : CTF(x) 2016</li>
<li><strong>Website</strong> : <a href="http://ctfx.io/" target="_blank" rel="external">http://ctfx.io/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/348/" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>defund was about to give this flag away until his computer crashed.</p>
<p>file: <a href="http://compete.ctfx.io/download?file_key=d983a3f5adb66783a09f142a6eb3a511e44f49048b9c59bcc305dba1e072ce3f&amp;team_key=1363275c2f4e78940bb6a342fb83902f1128ff824d8eb6505da463820eabfbe3" target="_blank" rel="external">flag.zip</a></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>TL;DR: <a href="https://asciinema.org/a/3s2let38nbzjwp5a8nre2vonq" target="_blank" rel="external"><img src="https://asciinema.org/a/3s2let38nbzjwp5a8nre2vonq.png" alt="asciicast"></a></p>
<ul>
<li><code>flag.zip</code> contains <code>.flag.txt.swp</code> and <code>flag.txt</code></li>
<li>Extract the archive: <code>unzip flag.zip</code></li>
<li>Recover/restore the file with the swap file: <code>vim -r flag/flag.txt</code></li>
<li>You get some ASCII art of the flag: <code>ctf(v1m_is_be77er_than_3macs)</code>.</li>
</ul>
<p>Extract of VIM man page:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">-r          List swap files, with information about using them for recovery.</div><div class="line"></div><div class="line">-r &#123;file&#125;   Recovery mode.  The swap file is used to recover a crashed editing session.  The swap file is a</div><div class="line">            file with the same filename as the text file with &quot;.swp&quot; appended.  See &quot;:help recovery&quot;.</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="forensics" scheme="http://rawsec.ml/tags/forensics/"/>
    
  </entry>
  
  <entry>
    <title>IceCTF - 30 - Move Along - Web</title>
    <link href="http://rawsec.ml/en/IceCTF-30-Move-Along-Web/"/>
    <id>http://rawsec.ml/en/IceCTF-30-Move-Along-Web/</id>
    <published>2016-08-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.478Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : IceCTF 2016</li>
<li><strong>Website</strong> : <a href="https://icec.tf/" target="_blank" rel="external">https://icec.tf/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/319" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p><a href="http://move-along.vuln.icec.tf/" target="_blank" rel="external">This site</a> seems awfully suspicious, do you think you can figure out what they’re hiding?</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol>
<li>Display source code <code>CTRL + U</code>.</li>
<li>The page is only including an image <a href="http://move-along.vuln.icec.tf/move_along/nothing-to-see-here.jpg" target="_blank" rel="external"><code>http://move-along.vuln.icec.tf/move_along/nothing-to-see-here.jpg</code></a>.</li>
<li>See the <code>move_along/</code> sub-folder and go in it <a href="http://move-along.vuln.icec.tf/move_along/" target="_blank" rel="external"><code>move_along/</code></a></li>
<li>Nginx listing functionnality is not disabled so we can see there is a sub-folder [<code>0f76da769d67e021518f05b552406ff6/</code>][secretfolde] (dirb won’t work).</li>
<li>There is a secret image <a href="http://move-along.vuln.icec.tf/move_along/0f76da769d67e021518f05b552406ff6/secret.jpg" target="_blank" rel="external"><code>secret.jpg</code></a> containing the flag <code>IceCTF{tH3_c4t_15_Ou7_oF_THe_b49}</code>.</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="web" scheme="http://rawsec.ml/tags/web/"/>
    
  </entry>
  
  <entry>
    <title>IceCTF - 30 - Substituted - Cryptography</title>
    <link href="http://rawsec.ml/en/IceCTF-30-Substituted-Cryptography/"/>
    <id>http://rawsec.ml/en/IceCTF-30-Substituted-Cryptography/</id>
    <published>2016-08-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : IceCTF 2016</li>
<li><strong>Website</strong> : <a href="https://icec.tf/" target="_blank" rel="external">https://icec.tf/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/319" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>We got a substitute flag, I hear they are pretty lax on the rules… <a href="https://play.icec.tf/problem-static/crypted_a888cc3cc9e064482ab8b61d0b19ca0b1b1ce88238c63f03c306d33947cf113b.txt" target="_blank" rel="external">crypted.txt</a></p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol>
<li>It’s a <a href="https://en.wikipedia.org/wiki/Substitution_cipher" target="_blank" rel="external">substitution cipher</a>.</li>
<li>I used <a href="http://www.simonsingh.net/The_Black_Chamber/substitutioncrackingtool.html" target="_blank" rel="external">The Black Chamber</a> for frequence analysis.</li>
<li><p>And then I continued to analyze manually with the help of my tool:</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div></pre></td><td class="code"><pre><div class="line"><span class="comment">#!/usr/bin/python</span></div><div class="line"></div><div class="line"><span class="keyword">import</span> sys</div><div class="line"><span class="keyword">import</span> string</div><div class="line"></div><div class="line">alphabet_letters = string.ascii_letters</div><div class="line"></div><div class="line"><span class="comment"># ciphered_text:plain_text (c:v)</span></div><div class="line">substitution_dict = &#123;<span class="string">'a'</span>:<span class="string">'p'</span> ,<span class="string">'b'</span>:<span class="string">'b'</span> ,<span class="string">'c'</span>:<span class="string">'m'</span>, <span class="string">'d'</span>:<span class="string">'s'</span>, <span class="string">'e'</span>:<span class="string">'o'</span>, <span class="string">'f'</span>:<span class="string">'*'</span>,</div><div class="line">                    <span class="string">'g'</span>:<span class="string">'w'</span>, <span class="string">'h'</span>:<span class="string">'*'</span>, <span class="string">'i'</span>:<span class="string">'k'</span>, <span class="string">'j'</span>:<span class="string">'a'</span>, <span class="string">'k'</span>:<span class="string">'t'</span>, <span class="string">'l'</span>:<span class="string">'h'</span>,</div><div class="line">                    <span class="string">'m'</span>:<span class="string">'n'</span>, <span class="string">'n'</span>:<span class="string">'*'</span>, <span class="string">'o'</span>:<span class="string">'r'</span>, <span class="string">'p'</span>:<span class="string">'*'</span>, <span class="string">'q'</span>:<span class="string">'g'</span>, <span class="string">'r'</span>:<span class="string">'y'</span>,</div><div class="line">                    <span class="string">'s'</span>:<span class="string">'u'</span>, <span class="string">'t'</span>:<span class="string">'f'</span>, <span class="string">'u'</span>:<span class="string">'d'</span>, <span class="string">'v'</span>:<span class="string">'c'</span>, <span class="string">'w'</span>:<span class="string">'i'</span>, <span class="string">'x'</span>:<span class="string">'v'</span>,</div><div class="line">                    <span class="string">'y'</span>:<span class="string">'e'</span>, <span class="string">'z'</span>:<span class="string">'l'</span>&#125;</div><div class="line"></div><div class="line">alphabet_substituted = <span class="string">""</span></div><div class="line"><span class="keyword">for</span> c <span class="keyword">in</span> alphabet_letters:</div><div class="line">    <span class="keyword">if</span> c <span class="keyword">in</span> string.ascii_lowercase:</div><div class="line">        alphabet_substituted += substitution_dict[c]</div><div class="line">    <span class="keyword">elif</span> c <span class="keyword">in</span> string.ascii_uppercase:</div><div class="line">        <span class="keyword">if</span> substitution_dict[c.lower()] <span class="keyword">is</span> <span class="keyword">not</span> <span class="string">'*'</span>:</div><div class="line">            alphabet_substituted += substitution_dict[c.lower()].upper()</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            alphabet_substituted += substitution_dict[c.lower()]</div><div class="line"></div><div class="line"><span class="keyword">with</span> open(<span class="string">"crypted.txt"</span>, <span class="string">"r"</span>) <span class="keyword">as</span> fh:</div><div class="line">    encoded_data = fh.read()</div><div class="line"></div><div class="line"><span class="keyword">if</span> (sys.version_info &gt; (<span class="number">3</span>, <span class="number">0</span>)):</div><div class="line">    <span class="comment"># made with python 3.5.2</span></div><div class="line">    table = str.maketrans(alphabet_letters, alphabet_substituted)</div><div class="line"><span class="keyword">else</span>:</div><div class="line">    <span class="comment"># made with python 2.7.12</span></div><div class="line">    table = string.maketrans(alphabet_letters, alphabet_substituted)</div><div class="line"></div><div class="line">decoded_data = encoded_data.translate(table)</div><div class="line"></div><div class="line">print(<span class="string">"=== Encoded data ==="</span>)</div><div class="line">print(encoded_data)</div><div class="line">print(<span class="string">"=== Decoded data ==="</span>)</div><div class="line">print(decoded_data)</div></pre></td></tr></table></figure>
</li>
<li><p>And I executed it:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">python substitution.py</div><div class="line">=== Encoded data ===</div><div class="line">Lw!</div><div class="line"></div><div class="line">Gyzvecy ke WvyVKT!</div><div class="line"></div><div class="line">W&apos;zz by reso dsbdkwksky tzjq teo kly ujr. Teo keujr, gy joy dksurwmq bjdwv vorakeqojalr jmu wkd jaazwvjkwemd. Vorakeqojalr ljd j zemq lwdkeor, jzklesql gwkl kly juxymk et vecaskyod wk ljd qekkym oyjzzr vecazwvjkyu. Decy dwcazy ezu vwalyod joy kly Vjydjo vwalyo, kly Xwqymyoy vwalyo, kly dsbdkwkskwem vwalyo, glwvl wd klwd emy, jmu de em. Jzcedk jzz et klydy vwalyod joy yjdwzr boeiym keujr gwkl kly lyza et vecaskyod. Decy myg ymvorakwem cykleud joy JYD, kly vsooymk dkjmujou teo ymvorakwem, jzemq gwkl ODJ. Vorakeqojalr wd j xjdk twyzu jmu wd xyor wmkyoydkwmq klesql. De iwvi bjvi, oyju sa em decy veez vwalyod jmu ljxy tsm!</div><div class="line"></div><div class="line">El jmu teo reso oyveoud cr mjcy wd WvyVKT&#123;jzgjrd_zwdkym_ke_reso_dsbdkwksky_tzjqd&#125;.</div><div class="line"></div><div class="line"></div><div class="line">=== Decoded data ===</div><div class="line">Hi!</div><div class="line"></div><div class="line">Welcome to IceCTF!</div><div class="line"></div><div class="line">I&apos;ll be your substitute flag for the day. For today, we are studying basic cryptography and its applications. Cryptography has a long history, although with the advent of computers it has gotten really complicated. Some simple old ciphers are the Caesar cipher, the Vigenere cipher, the substitution cipher, which is this one, and so on. Almost all of these ciphers are easily broken today with the help of computers. Some new encryption methods are AES, the current standard for encryption, along with RSA. Cryptography is a vast field and is very interesting though. So kick back, read up on some cool ciphers and have fun!</div><div class="line"></div><div class="line">Oh and for your records my name is IceCTF&#123;always_listen_to_your_substitute_flags&#125;.</div></pre></td></tr></table></figure>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="crypto" scheme="http://rawsec.ml/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>IceCTF - 35 - IRC I - Misc</title>
    <link href="http://rawsec.ml/en/IceCTF-35-IRC-1-Misc/"/>
    <id>http://rawsec.ml/en/IceCTF-35-IRC-1-Misc/</id>
    <published>2016-08-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.502Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : IceCTF 2016</li>
<li><strong>Website</strong> : <a href="https://icec.tf/" target="_blank" rel="external">https://icec.tf/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/319" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>There is someone sharing flags on our IRC server, can you find him and stop him? glitch.is:6667</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol>
<li>Connect to the IRC server (ex: with <a href="https://client02.chat.mibbit.com/" target="_blank" rel="external">mibbit</a> if you have no IRC client installed).</li>
<li>On glitch.is home use the <code>/list</code> to list all the channels on the server.</li>
<li>There is a channel named <code>#6470e394cb_flagshare</code>.</li>
<li>Join it <code>/join #6470e394cb_flagshare</code>.</li>
<li>Display the topic <code>/topic</code> which is <em>Get your flags here! while they’re hot! IceCTF{pL3AsE_D0n7_5h4re_fL495_JUsT_doNT}</em>.</li>
</ol>
<p><strong>Note</strong>: Here a <a href="https://en.wikipedia.org/wiki/List_of_Internet_Relay_Chat_commands" target="_blank" rel="external">List of IRC commands</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="misc" scheme="http://rawsec.ml/tags/misc/"/>
    
  </entry>
  
  <entry>
    <title>IceCTF - 40 - Alien Message - Cryptography</title>
    <link href="http://rawsec.ml/en/IceCTF-40-Alien-Message-Cryptography/"/>
    <id>http://rawsec.ml/en/IceCTF-40-Alien-Message-Cryptography/</id>
    <published>2016-08-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.512Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : IceCTF 2016</li>
<li><strong>Website</strong> : <a href="https://icec.tf/" target="_blank" rel="external">https://icec.tf/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/319" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>We found this <a href="https://play.icec.tf/problem-static/alien_message_b84f283848b7f34fd4c7529186e66e120b0a374c9d0f2a225b0a7a215716afb5.png" target="_blank" rel="external">suspicous image</a> online and it looked like it had been planted there by an alien life form. Can you see if you can figure out what they’re trying to tell us?</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ul>
<li>I was pretty sure this picture contein normal text written with a special font so I began to look for alien font/code.</li>
<li>Thanks to <a href="http://io9.gizmodo.com/5218119/13-alien-languages-you-can-actually-read" target="_blank" rel="external">this</a> article I found it was the <strong>Alienese I</strong> font from <em>Futurama</em>.</li>
<li><p>Quote from <a href="http://futurama.wikia.com/wiki/Alienese" target="_blank" rel="external">futurama.wikia.com</a>:</p>
<blockquote>
<p>The first language, a simple substitution cipher, was solved almost instantly.</p>
</blockquote>
</li>
<li><p>So I looked for decoders for a faster result: I found one here <a href="http://cs.oswego.edu/~dreichel/alienese_decoder/" target="_blank" rel="external">cs.oswego.edu</a> and one here <a href="http://www.gotfuturama.com/Interactive/AlienCodec/" target="_blank" rel="external">gotfuturama.com</a></p>
</li>
<li><strong>Flag</strong>: <code>IceCTF{good_n3wz_3veryon3_1_l1k3_fu7ur4ma_4nd_th3ir_4maz1ng_3as7er_39g5}</code></li>
</ul>
<p><strong>POV</strong>: This challenge? Cryptography? Really? … I deplore to still have this kind of challenge in CTF. That’s nothing but a lost of time and that have nothing to do with security. That’s even not stego because from the beginning we know that’s just a font, it’s just pain!</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="crypto" scheme="http://rawsec.ml/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>IceCTF - 40 - Complacent - Reconnaissance</title>
    <link href="http://rawsec.ml/en/IceCTF-40-Complacent-Reconnaissance/"/>
    <id>http://rawsec.ml/en/IceCTF-40-Complacent-Reconnaissance/</id>
    <published>2016-08-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.535Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : IceCTF 2016</li>
<li><strong>Website</strong> : <a href="https://icec.tf/" target="_blank" rel="external">https://icec.tf/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/319" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>These silly bankers have gotten pretty complacent with their self signed SSL certificate. I wonder if there’s anything in there. complacent.vuln.icec.tf</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><p>With Mozilla Firefox (method 1):</p>
<ol>
<li>Go to <a href="https://complacent.vuln.icec.tf/" target="_blank" rel="external">https://complacent.vuln.icec.tf/</a>.</li>
<li>Accept security exceptions.</li>
<li>Open the <strong>Inspect Element</strong> pannel.</li>
<li>Go to the <strong>Network</strong> tab and reload.</li>
<li>Select the main GET request.</li>
<li>Select the <strong>Security</strong> tab.</li>
<li>The <strong>Certificate: Organizational Unit (OU)</strong> is <strong>Flag: IceCTF{this_1nformation_wasnt_h1dd3n_at_a11}</strong>.</li>
</ol>
<p>or</p>
<p>With Mozilla Firefox (method 2):</p>
<ol>
<li>Go to <a href="https://complacent.vuln.icec.tf/" target="_blank" rel="external">https://complacent.vuln.icec.tf/</a>.</li>
<li>Accept security exceptions.</li>
<li>Click on the lock next to the URL bar.</li>
<li>Then click on the arrow at the right of the little pop-up.</li>
<li>Click on <strong>More Information</strong> button.</li>
<li>Go to the <strong>Security</strong> tab.</li>
<li>Click on the <strong>View Certificate</strong> button.</li>
<li>Look at infos in the <strong>General</strong> tab.</li>
<li>The <strong>Certificate: Organizational Unit (OU)</strong> is <strong>Flag: IceCTF{this_1nformation_wasnt_h1dd3n_at_a11}</strong>.</li>
</ol>
<p>PS: there is a lot of other methods</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="reconnaissance" scheme="http://rawsec.ml/tags/reconnaissance/"/>
    
  </entry>
  
  <entry>
    <title>IceCTF - 40 - Search - Misc</title>
    <link href="http://rawsec.ml/en/IceCTF-40-Search-Misc/"/>
    <id>http://rawsec.ml/en/IceCTF-40-Search-Misc/</id>
    <published>2016-08-24T22:00:00.000Z</published>
    <updated>2016-10-12T21:07:54.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Informations"><a href="#Informations" class="headerlink" title="Informations"></a>Informations</h2><h3 id="Version"><a href="#Version" class="headerlink" title="Version"></a>Version</h3><table>
<thead>
<tr>
<th>By</th>
<th>Version</th>
<th>Comment</th>
</tr>
</thead>
<tbody>
<tr>
<td>noraj</td>
<td>1.0</td>
<td>Creation</td>
</tr>
</tbody>
</table>
<h3 id="CTF"><a href="#CTF" class="headerlink" title="CTF"></a>CTF</h3><ul>
<li><strong>Name</strong> : IceCTF 2016</li>
<li><strong>Website</strong> : <a href="https://icec.tf/" target="_blank" rel="external">https://icec.tf/</a></li>
<li><strong>Type</strong> : Online</li>
<li><strong>Format</strong> : Jeopardy</li>
<li><strong>CTF Time</strong> : <a href="https://ctftime.org/event/319" target="_blank" rel="external">link</a></li>
</ul>
<h3 id="Description"><a href="#Description" class="headerlink" title="Description"></a>Description</h3><p>There’s something about this domain… <a href="http://search.icec.tf/" target="_blank" rel="external">search.icec.tf</a>, I don’t see anything, but maybe its all about the conTEXT.</p>
<h2 id="Solution"><a href="#Solution" class="headerlink" title="Solution"></a>Solution</h2><ol>
<li>Default behaviour of main dns lookup utilities (like nslookup or dig) is to look for A type record.</li>
<li>But we want to look at TXT type record.</li>
<li>So instead of using <code>dig search.icec.tf/</code> (eq. <code>dig -t A search.icec.tf/</code>),</li>
<li>we’ll use <code>dig -t TXT search.icec.tf/</code>.</li>
</ol>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div></pre></td><td class="code"><pre><div class="line">┌─[root@parrot]─[~/CTF/IceCTF/2016]</div><div class="line">└──╼ #dig -t A search.icec.tf</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; -t A search.icec.tf</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 21856</div><div class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;search.icec.tf.			IN	A</div><div class="line"></div><div class="line">;; AUTHORITY SECTION:</div><div class="line">icec.tf.		300	IN	SOA	bob.ns.cloudflare.com. dns.cloudflare.com. 2022260330 10000 2400 604800 3600</div><div class="line"></div><div class="line">;; Query time: 88 msec</div><div class="line">;; SERVER: 127.0.0.1#53(127.0.0.1)</div><div class="line">;; WHEN: Wed Aug 17 22:45:54 CEST 2016</div><div class="line">;; MSG SIZE  rcvd: 104</div><div class="line"></div><div class="line">┌─[root@parrot]─[~/CTF/IceCTF/2016]</div><div class="line">└──╼ #dig search.icec.tf</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; search.icec.tf</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 41552</div><div class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;search.icec.tf.			IN	A</div><div class="line"></div><div class="line">;; Query time: 0 msec</div><div class="line">;; SERVER: 127.0.0.1#53(127.0.0.1)</div><div class="line">;; WHEN: Wed Aug 17 22:46:07 CEST 2016</div><div class="line">;; MSG SIZE  rcvd: 43</div><div class="line"></div><div class="line">┌─[root@parrot]─[~/CTF/IceCTF/2016]</div><div class="line">└──╼ #dig -t TXT search.icec.tf</div><div class="line"></div><div class="line">; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; -t TXT search.icec.tf</div><div class="line">;; global options: +cmd</div><div class="line">;; Got answer:</div><div class="line">;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 35890</div><div class="line">;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1</div><div class="line"></div><div class="line">;; OPT PSEUDOSECTION:</div><div class="line">; EDNS: version: 0, flags:; udp: 4096</div><div class="line">;; QUESTION SECTION:</div><div class="line">;search.icec.tf.			IN	TXT</div><div class="line"></div><div class="line">;; ANSWER SECTION:</div><div class="line">search.icec.tf.		300	IN	TXT	&quot;IceCTF&#123;flag5_all_0v3r_the_Plac3&#125;&quot;</div><div class="line"></div><div class="line">;; Query time: 61 msec</div><div class="line">;; SERVER: 127.0.0.1#53(127.0.0.1)</div><div class="line">;; WHEN: Wed Aug 17 22:46:16 CEST 2016</div><div class="line">;; MSG SIZE  rcvd: 88</div></pre></td></tr></table></figure>
<p>For more details about DNS record types, see the <a href="https://en.wikipedia.org/wiki/List_of_DNS_record_types" target="_blank" rel="external">List of DNS record types</a>.</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Informations&quot;&gt;&lt;a href=&quot;#Informations&quot; class=&quot;headerlink&quot; title=&quot;Informations&quot;&gt;&lt;/a&gt;Informations&lt;/h2&gt;&lt;h3 id=&quot;Version&quot;&gt;&lt;a href=&quot;#Versio
    
    </summary>
    
      <category term="security" scheme="http://rawsec.ml/categories/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/categories/security/writeups/"/>
    
    
      <category term="security" scheme="http://rawsec.ml/tags/security/"/>
    
      <category term="writeups" scheme="http://rawsec.ml/tags/writeups/"/>
    
      <category term="ctf" scheme="http://rawsec.ml/tags/ctf/"/>
    
      <category term="misc" scheme="http://rawsec.ml/tags/misc/"/>
    
  </entry>
  
</feed>
